{"version":3,"file":"sketch.js","sources":["../../../js-libraries/p5-extension/node_modules/@fal-works/creative-coding-core/lib/creative-coding-core.mjs","../../../js-libraries/p5-extension/lib/p5-extension.mjs","../../../js-libraries/creative-coding-core/lib/creative-coding-core.mjs","../src/settings.ts","../src/global.ts","../src/contour.ts","../src/contours.ts","../src/main.ts"],"sourcesContent":["/**\n * creative-coding-core\n *\n * Utility library that might be useful for creative coding.\n * GitHub repository: {@link https://github.com/fal-works/creative-coding-core}\n *\n * @module creative-coding-core\n * @copyright 2019 FAL\n * @author FAL <contact@fal-works.com>\n * @license MIT\n * @version 0.1.9\n */\n\n/**\n * Runs `callback` once for each element of `array` from index `start` up to (but not including) `end`.\n * Unlike `Array.prototype.forEach()`, an element of `array` should not be removed during the iteration.\n * @param array\n * @param callback\n */\nconst loopRange = (array, callback, start, end) => {\n  for (let i = start; i < end; i += 1) callback(array[i], i, array);\n};\n/**\n * Runs `callback` once for each element of `array`.\n * Unlike `Array.prototype.forEach()`, an element of `array` should not be removed during the iteration.\n * @param array\n * @param callback\n */\nconst loop = (array, callback) => loopRange(array, callback, 0, array.length);\n/**\n * Runs `callback` once for each element of `array` from index `start` up to (but not including) `end` in descending order.\n * @param array\n * @param callback\n */\nconst loopRangeBackwards = (array, callback, start, end) => {\n  let index = end;\n  while (index > start) {\n    --index;\n    callback(array[index], index, array);\n  }\n};\n/**\n * Runs `callback` once for each element of `array` in descending order.\n * @param array\n * @param callback\n */\nconst loopBackwards = (array, callback) =>\n  loopRangeBackwards(array, callback, 0, array.length);\n/**\n * Joins two arrays within the specified range and runs `callback` once for each joined pair.\n * You should not remove elements from arrays during the iteration.\n * @param arrayA\n * @param arrayB\n * @param callback\n * @param endA\n * @param endB\n */\nconst nestedLoopJoinWithRange = (\n  arrayA,\n  arrayB,\n  callback,\n  startA,\n  endA,\n  startB,\n  endB\n) => {\n  for (let i = startA; i < endA; i += 1) {\n    for (let k = startB; k < endB; k += 1) callback(arrayA[i], arrayB[k]);\n  }\n};\n/**\n * Joins two arrays and runs `callback` once for each joined pair.\n * You should not remove elements from arrays during the iteration.\n * @param arrayA\n * @param arrayB\n * @param callback\n */\nconst nestedLoopJoin = (arrayA, arrayB, callback) =>\n  nestedLoopJoinWithRange(\n    arrayA,\n    arrayB,\n    callback,\n    0,\n    arrayA.length,\n    0,\n    arrayB.length\n  );\n/**\n * Runs `callback` once for each pair within `array` from index `start` up to (but not including) `end`.\n * @param array\n * @param callback\n */\nconst roundRobinWithRange = (array, callback, start, end) => {\n  const iLen = end - 1;\n  for (let i = start; i < iLen; i += 1) {\n    for (let k = i + 1; k < end; k += 1) callback(array[i], array[k]);\n  }\n};\n/**\n * Runs `callback` once for each pair within `array`.\n * @param array\n * @param callback\n */\nconst roundRobin = (array, callback) =>\n  roundRobinWithRange(array, callback, 0, array.length);\n/**\n * Creates a new 1-dimensional array by concatenating sub-array elements of a 2-dimensional array.\n * @param arrays\n * @return A new 1-dimensional array.\n */\nconst flatNaive = arrays => [].concat(...arrays);\n/**\n * An alternative to `Array.prototype.flat()`.\n * @param array\n * @param depth\n * @return A new array.\n */\nconst flatRecursive = (array, depth = 1) =>\n  depth > 0\n    ? array.reduce(\n        (acc, cur) =>\n          acc.concat(Array.isArray(cur) ? flatRecursive(cur, depth - 1) : cur),\n        []\n      )\n    : array;\n/**\n * Fills `array` by running `factory` and assigning the result for each index of `array`.\n * @param array\n * @param factory A function that returns a new element for assigning to `array`.\n * @param length The length to populate. Default value is `array.length`.\n * @return Filled `array`.\n */\nconst populate = (array, factory, length) => {\n  const len = length || array.length;\n  for (let i = 0; i < len; i += 1) array[i] = factory(i);\n  return array;\n};\n/**\n * Creates a new array filled by running `factory` for each index and assigning the result.\n * @param factory\n * @param length\n * @return A new populated array.\n */\nconst createPopulated = (factory, length) =>\n  populate(new Array(length), factory);\n\nconst arrayUtility = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  loopRange: loopRange,\n  loop: loop,\n  loopRangeBackwards: loopRangeBackwards,\n  loopBackwards: loopBackwards,\n  nestedLoopJoinWithRange: nestedLoopJoinWithRange,\n  nestedLoopJoin: nestedLoopJoin,\n  roundRobinWithRange: roundRobinWithRange,\n  roundRobin: roundRobin,\n  flatNaive: flatNaive,\n  flatRecursive: flatRecursive,\n  populate: populate,\n  createPopulated: createPopulated\n});\n\n/**\n * Creates an array-list unit.\n * @param initialCapacity\n */\nconst create = initialCapacity => {\n  return {\n    array: new Array(initialCapacity),\n    size: 0\n  };\n};\n/**\n * Creates an array-list unit filled with `value`.\n * @param size\n * @param value\n */\nconst createFilled = (size, value) => {\n  return {\n    array: new Array(size).fill(value),\n    size\n  };\n};\n/**\n * Creates an array-list unit, filled by running `factory` and assignint the result for each index.\n * @param size\n * @param factory\n */\nconst createPopulated$1 = (size, factory) => {\n  return {\n    array: populate(new Array(size), factory),\n    size\n  };\n};\n/**\n * Creates an array-list unit by reusing the reference to `array`.\n * The `size` of the array-list will be `array.length`.\n * Be sure that `array` is filled with valid elements.\n *\n * @param array\n * @return A new array-list unit.\n */\nconst fromArray = array => {\n  return {\n    array,\n    size: array.length\n  };\n};\nconst add = (arrayList, element) => {\n  arrayList.array[arrayList.size] = element;\n  arrayList.size += 1;\n};\nconst push = add;\nconst pop = arrayList => {\n  const lastIndex = arrayList.size - 1;\n  const removedElement = arrayList.array[lastIndex];\n  arrayList.size = lastIndex;\n  return removedElement;\n};\n/**\n * Clears the contents of `arrayList`.\n * This just sets `size` to `0` and does not nullify references.\n * @param arrayList\n */\nconst clear = arrayList => {\n  arrayList.size = 0;\n};\n/**\n * Nullifies the slots that are not used.\n * @param arrayList\n */\nconst cleanUnusedSlots = arrayList => {\n  const { array, size } = arrayList;\n  const capacity = array.length;\n  array.length = size;\n  array.length = capacity;\n};\n/**\n * Clears the contents of `arrayList` and also nullifies all references.\n * @param arrayList\n */\nconst clearReference = arrayList => {\n  arrayList.size = 0;\n  cleanUnusedSlots(arrayList);\n};\n/**\n * Runs `callback` for each element of `arrayList`.\n * @param arrayList\n * @param callback\n */\nconst loop$1 = (arrayList, callback) =>\n  loopRange(arrayList.array, callback, 0, arrayList.size);\n/**\n * Runs `callback` for each element of `arrayList` in descending order.\n * @param arrayList\n * @param callback\n */\nconst loopBackwards$1 = (arrayList, callback) =>\n  loopRangeBackwards(arrayList.array, callback, 0, arrayList.size);\n/**\n * Finds the first element where `predicate` returns true.\n * @param arrayList\n * @param predicate Function that returns `true` if a given value matches the condition.\n * @return The found `element`. `undefined` if not found.\n */\nconst find = (arrayList, predicate) => {\n  const { array, size } = arrayList;\n  for (let i = 0; i < size; i += 1) {\n    if (predicate(array[i], i, array)) return array[i];\n  }\n  return undefined;\n};\n/**\n * Finds `element` in `arrayList`.\n * @param arrayList\n * @param element\n * @return The index of `element`. `-1` if not found.\n */\nconst findIndex = (arrayList, element) => {\n  const { array, size } = arrayList;\n  for (let i = 0; i < size; i += 1) {\n    if (array[i] === element) return i;\n  }\n  return -1;\n};\n/**\n * Removes the element at `index`.\n * All subsequent elements will be shifted to the previous index.\n * @param arrayList\n * @param index\n * @return The removed element.\n */\nconst removeShift = (arrayList, index) => {\n  const { array, size } = arrayList;\n  const removedElement = array[index];\n  array.copyWithin(index, index + 1, size);\n  arrayList.size = size - 1;\n  return removedElement;\n};\n/**\n * Removes `element`.\n * All subsequent elements will be shifted to the previous index.\n * @param arrayList\n * @param element\n * @return The removed element, or `null` if not found.\n */\nconst removeShiftElement = (arrayList, element) => {\n  const index = findIndex(arrayList, element);\n  if (index >= 0) return removeShift(arrayList, index);\n  return null;\n};\n/**\n * Removes the element at `index` by moving the last element to `index` and overwriting the existing value.\n * Faster than `removeShift()` and may be useful if you do not need to preserve order of elements.\n *\n * @param arrayList\n * @param index\n * @return The removed element.\n */\nconst removeSwap = (arrayList, index) => {\n  const array = arrayList.array;\n  const removedElement = array[index];\n  const lastIndex = arrayList.size - 1;\n  array[index] = array[lastIndex];\n  arrayList.size = lastIndex;\n  return removedElement;\n};\n/**\n * Removes `element` by replacing it with the last element.\n * @param arrayList\n * @param element\n * @return The removed element, or `null` if not found.\n */\nconst removeSwapElement = (arrayList, element) => {\n  const index = findIndex(arrayList, element);\n  if (index >= 0) return removeSwap(arrayList, index);\n  return null;\n};\n/**\n * Runs `predicate` for each element and removes the element if `predicate` returns `true`.\n * This does not use `removeShift()` internally.\n *\n * Note: Do not add elements within this loop.\n *\n * @param arrayList\n * @param predicate\n * @return `true` if any element has been removed.\n */\nconst removeShiftAll = (arrayList, predicate) => {\n  const { array, size } = arrayList;\n  let writeIndex = 0;\n  let found = false;\n  for (let readIndex = 0; readIndex < size; readIndex += 1) {\n    const value = array[readIndex];\n    if (predicate(value, readIndex, array)) {\n      found = true;\n      continue;\n    }\n    array[writeIndex] = value;\n    writeIndex += 1;\n  }\n  arrayList.size = writeIndex;\n  return found;\n};\n/**\n * Run `removeSwap()` for all indices of element where `predicate` returns true.\n * @param arrayList\n * @param predicate\n * @return `true` if any element has been removed.\n */\nconst removeSwapAll = (arrayList, predicate) => {\n  let found = false;\n  const array = arrayList.array;\n  for (let i = 0; i < arrayList.size; i += 1) {\n    if (predicate(array[i], i, array)) {\n      removeSwap(arrayList, i);\n      found = true;\n    }\n  }\n  return found;\n};\n/**\n * Fills the entire `arrayList` by running `factory` and assigning result for each index.\n * @param arrayList\n * @param factory\n */\nconst populate$1 = (arrayList, factory) => {\n  populate(arrayList.array, factory);\n  arrayList.size = arrayList.array.length;\n  return arrayList;\n};\n/**\n * Joins two arrayLists and runs `callback` once for each joined pair.\n * You should not remove elements from arrayLists during the iteration.\n * @param arrayListA\n * @param arrayListB\n * @param callback\n */\nconst nestedLoopJoin$1 = (arrayListA, arrayListB, callback) =>\n  nestedLoopJoinWithRange(\n    arrayListA.array,\n    arrayListB.array,\n    callback,\n    0,\n    arrayListA.size,\n    0,\n    arrayListB.size\n  );\n/**\n * Runs `callback` once for each pair within `arrayList`.\n * @param arrayList\n * @param callback\n */\nconst roundRobin$1 = (arrayList, callback) =>\n  roundRobinWithRange(arrayList.array, callback, 0, arrayList.size);\n\nconst arrayList = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create,\n  createFilled: createFilled,\n  createPopulated: createPopulated$1,\n  fromArray: fromArray,\n  add: add,\n  push: push,\n  pop: pop,\n  clear: clear,\n  cleanUnusedSlots: cleanUnusedSlots,\n  clearReference: clearReference,\n  loop: loop$1,\n  loopBackwards: loopBackwards$1,\n  find: find,\n  findIndex: findIndex,\n  removeShift: removeShift,\n  removeShiftElement: removeShiftElement,\n  removeSwap: removeSwap,\n  removeSwapElement: removeSwapElement,\n  removeShiftAll: removeShiftAll,\n  removeSwapAll: removeSwapAll,\n  populate: populate$1,\n  nestedLoopJoin: nestedLoopJoin$1,\n  roundRobin: roundRobin$1\n});\n\nconst create$1 = factory => {\n  return {\n    value: undefined,\n    factory\n  };\n};\nconst get = object => object.value || (object.value = object.factory());\nconst clear$1 = object => {\n  object.value = undefined;\n};\n\nconst lazy = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$1,\n  get: get,\n  clear: clear$1\n});\n\nconst from = (prototypeStructure, length) => {\n  const data = {};\n  for (const key of Object.keys(prototypeStructure))\n    data[key] = new Array(length).fill(prototypeStructure[key]);\n  return {\n    data,\n    length\n  };\n};\n\nconst structureOfArrays = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  from: from\n});\n\nconst {\n  abs,\n  acos,\n  asin,\n  atan,\n  atan2,\n  ceil,\n  cos,\n  exp,\n  floor,\n  log,\n  max,\n  min,\n  pow,\n  round,\n  sin,\n  sqrt,\n  tan,\n  clz32,\n  imul,\n  sign,\n  log10,\n  log2,\n  log1p,\n  expm1,\n  cosh,\n  sinh,\n  tanh,\n  acosh,\n  asinh,\n  atanh,\n  hypot,\n  trunc,\n  fround,\n  cbrt\n} = Math;\n/**\n * Same as `Math.sqrt`.\n * @return √x\n */\nconst squareRoot = sqrt;\n/**\n * Same as `Math.clz32`.\n */\nconst leadingZeros32 = clz32;\n/**\n * Same as `Math.imul`.\n */\nconst multInt = imul;\n/**\n * Same as `Math.hypot`.\n */\nconst hypotenuse = hypot;\n/**\n * Same as `Math.trunc`.\n */\nconst integerPart = trunc;\n/**\n * Same as `Math.fround`.\n */\nconst floatRound = fround;\n/**\n * Same as `Math.cbrt`.\n * @return ∛x\n */\nconst cubeRoot = cbrt;\nconst square = v => v * v;\nconst cube = v => v * v * v;\nconst pow4 = v => square(v * v);\nconst pow5 = v => square(v * v) * v;\nconst squareInt = v => imul(v, v);\nconst cubeInt = v => imul(imul(v, v), v);\n/**\n * Checks whether `a` and `b` are considered equal.\n * @param a\n * @param b\n * @return `true` if the absolute difference of `a` and `b` is smaller than `Number.EPSILON`.\n */\nconst equal = (a, b) => abs(a - b) < 2.220446049250313e-16;\n/**\n * Similar to `Math.min` but accepts only two arguments.\n * @param a\n * @param b\n * @return The smaller of `a` or `b`.\n */\nconst min2 = (a, b) => (a < b ? a : b);\n/**\n * Similar to `Math.max` but accepts only two arguments.\n * @param a\n * @param b\n * @return The larger of `a` or `b`.\n */\nconst max2 = (a, b) => (a > b ? a : b);\n/**\n * Safe version of `Math.atan2`;\n * @param y\n * @param x\n * @return The angle from x-axis to the point. `0` if both `x` and `y` are `0`.\n */\nconst atan2safe = (y, x) => (y !== 0 || x !== 0 ? atan2(y, x) : 0);\n/**\n * Calculates the sum of squares of `x` and `y`.\n * @param x\n * @param y\n * @return `x^2 + y^2`.\n */\nconst hypotenuseSquared2D = (x, y) => x * x + y * y;\n/**\n * A 2D version of `Math.hypot`. Calculates the square root of the sum of squares of `x` and `y`.\n * @param x\n * @param y\n * @return `√(x^2 + y^2)`.\n */\nconst hypotenuse2D = (x, y) => sqrt(x * x + y * y);\n/**\n * Linearly interpolates between `start` and `end` by `ratio`.\n * The result will not be clamped.\n * @param start\n * @param end\n * @param ratio\n * @return Interpolated value, e.g. `start` if `ratio == 0`, `end` if `ratio == 1`.\n */\nconst lerp = (start, end, ratio) => start + ratio * (end - start);\n/**\n * Clamps `value` between `min` and `max`.\n * @param value\n * @param min\n * @param max\n * @return Clamped value equal or greater than `min` and equal or less than `max`.\n */\nconst clamp = (value, min, max) =>\n  value < min ? min : value > max ? max : value;\n\nconst numeric = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  abs: abs,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  ceil: ceil,\n  cos: cos,\n  exp: exp,\n  floor: floor,\n  log: log,\n  max: max,\n  min: min,\n  pow: pow,\n  round: round,\n  sin: sin,\n  sqrt: sqrt,\n  tan: tan,\n  clz32: clz32,\n  imul: imul,\n  sign: sign,\n  log10: log10,\n  log2: log2,\n  log1p: log1p,\n  expm1: expm1,\n  cosh: cosh,\n  sinh: sinh,\n  tanh: tanh,\n  acosh: acosh,\n  asinh: asinh,\n  atanh: atanh,\n  hypot: hypot,\n  trunc: trunc,\n  fround: fround,\n  cbrt: cbrt,\n  squareRoot: squareRoot,\n  leadingZeros32: leadingZeros32,\n  multInt: multInt,\n  hypotenuse: hypotenuse,\n  integerPart: integerPart,\n  floatRound: floatRound,\n  cubeRoot: cubeRoot,\n  square: square,\n  cube: cube,\n  pow4: pow4,\n  pow5: pow5,\n  squareInt: squareInt,\n  cubeInt: cubeInt,\n  equal: equal,\n  min2: min2,\n  max2: max2,\n  atan2safe: atan2safe,\n  hypotenuseSquared2D: hypotenuseSquared2D,\n  hypotenuse2D: hypotenuse2D,\n  lerp: lerp,\n  clamp: clamp\n});\n\nconst { E, LN10, LN2, LOG2E, LOG10E } = Math;\nconst ONE_HALF = 1 / 2;\nconst ONE_THIRD = 1 / 3;\nconst TWO_THIRDS = 2 / 3;\nconst ONE_QUARTER = 1 / 4;\nconst TWO_QUARTERS = ONE_HALF;\nconst THREE_QUARTERS = 3 / 4;\nconst INVERSE30 = 1 / 30;\nconst INVERSE60 = 1 / 60;\nconst INVERSE255 = 1 / 255;\n/**\n * √2\n */\nconst SQUARE_ROOT_TWO = Math.SQRT2;\n/**\n * √(1 / 2) = 1 / √2 = √2 / 2\n */\nconst SQUARE_ROOT_ONE_HALF = Math.SQRT1_2;\n/**\n * √3\n */\nconst SQUARE_ROOT_THREE = Math.sqrt(3);\n/**\n * 1 / √2 = √(1 / 2) = √2 / 2\n */\nconst ONE_OVER_SQUARE_ROOT_TWO = SQUARE_ROOT_ONE_HALF;\n/**\n * 2 / √2 = √2\n */\nconst TWO_OVER_SQUARE_ROOT_TWO = SQUARE_ROOT_TWO;\n/**\n * 1 / √3\n */\nconst ONE_OVER_SQUARE_ROOT_THREE = 1 / SQUARE_ROOT_THREE;\n/**\n * 2 / √3\n */\nconst TWO_OVER_SQUARE_ROOT_THREE = 2 / SQUARE_ROOT_THREE;\n/**\n * √3 / 2\n */\nconst SQUARE_ROOT_THREE_OVER_TWO = SQUARE_ROOT_THREE / 2;\n/**\n * √2 / 2 = √(1 / 2) = 1 / √2\n */\nconst SQUARE_ROOT_TWO_OVER_TWO = SQUARE_ROOT_ONE_HALF;\n\nconst constants = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  E: E,\n  LN10: LN10,\n  LN2: LN2,\n  LOG2E: LOG2E,\n  LOG10E: LOG10E,\n  ONE_HALF: ONE_HALF,\n  ONE_THIRD: ONE_THIRD,\n  TWO_THIRDS: TWO_THIRDS,\n  ONE_QUARTER: ONE_QUARTER,\n  TWO_QUARTERS: TWO_QUARTERS,\n  THREE_QUARTERS: THREE_QUARTERS,\n  INVERSE30: INVERSE30,\n  INVERSE60: INVERSE60,\n  INVERSE255: INVERSE255,\n  SQUARE_ROOT_TWO: SQUARE_ROOT_TWO,\n  SQUARE_ROOT_ONE_HALF: SQUARE_ROOT_ONE_HALF,\n  SQUARE_ROOT_THREE: SQUARE_ROOT_THREE,\n  ONE_OVER_SQUARE_ROOT_TWO: ONE_OVER_SQUARE_ROOT_TWO,\n  TWO_OVER_SQUARE_ROOT_TWO: TWO_OVER_SQUARE_ROOT_TWO,\n  ONE_OVER_SQUARE_ROOT_THREE: ONE_OVER_SQUARE_ROOT_THREE,\n  TWO_OVER_SQUARE_ROOT_THREE: TWO_OVER_SQUARE_ROOT_THREE,\n  SQUARE_ROOT_THREE_OVER_TWO: SQUARE_ROOT_THREE_OVER_TWO,\n  SQUARE_ROOT_TWO_OVER_TWO: SQUARE_ROOT_TWO_OVER_TWO\n});\n\nconst PI = Math.PI;\nconst TWO_PI = 2 * PI;\nconst HALF_PI = PI / 2;\nconst THIRD_PI = PI / 3;\nconst QUARTER_PI = PI / 4;\nconst THREE_QUARTERS_PI = 3 * QUARTER_PI;\nconst SIN30 = ONE_HALF;\nconst SIN45 = ONE_OVER_SQUARE_ROOT_TWO;\nconst SIN60 = SQUARE_ROOT_THREE_OVER_TWO;\nconst COS30 = SIN60;\nconst COS45 = SIN45;\nconst COS60 = SIN30;\nconst DEGREES_TO_RADIANS = TWO_PI / 360;\nconst RADIANS_TO_DEGREES = 360 / TWO_PI;\nconst createArray = resolution => {\n  const array = new Array(resolution);\n  const interval = TWO_PI / resolution;\n  for (let i = 0; i < resolution; i += 1) array[i] = i * interval;\n  return array;\n};\nconst fromDegrees = degrees => DEGREES_TO_RADIANS * degrees;\nconst toDegrees = radians => RADIANS_TO_DEGREES * radians;\n/**\n * Calculates the angle in radians from origin to `position`.\n * @param position\n * @return The angle. `0` if `position` is a zero vector.\n */\nconst fromOrigin = position => {\n  const { x, y } = position;\n  return x !== 0 || y !== 0 ? atan2(position.y, position.x) : 0;\n};\n/**\n * Calculates the angle in radians between two points.\n * @param from\n * @param to\n * @return The angle. `0` if both points are the same.\n */\nconst betweenPoints = (from, to) => {\n  const dx = to.x - from.x;\n  const dy = to.y - from.y;\n  return dx !== 0 || dy !== 0 ? atan2(dy, dx) : 0;\n};\n/**\n * Calculates the angle in radians between two points.\n * @return The angle. `0` if both points are the same.\n */\nconst betweenCoordinates = (x1, y1, x2, y2) =>\n  x1 !== x2 || y1 !== y2 ? atan2(x2 - x1, y2 - y1) : 0;\n\nconst angle = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  PI: PI,\n  TWO_PI: TWO_PI,\n  HALF_PI: HALF_PI,\n  THIRD_PI: THIRD_PI,\n  QUARTER_PI: QUARTER_PI,\n  THREE_QUARTERS_PI: THREE_QUARTERS_PI,\n  SIN30: SIN30,\n  SIN45: SIN45,\n  SIN60: SIN60,\n  COS30: COS30,\n  COS45: COS45,\n  COS60: COS60,\n  DEGREES_TO_RADIANS: DEGREES_TO_RADIANS,\n  RADIANS_TO_DEGREES: RADIANS_TO_DEGREES,\n  createArray: createArray,\n  fromDegrees: fromDegrees,\n  toDegrees: toDegrees,\n  fromOrigin: fromOrigin,\n  betweenPoints: betweenPoints,\n  betweenCoordinates: betweenCoordinates\n});\n\nconst create$2 = (topLeftPosition, size) => {\n  return {\n    topLeft: topLeftPosition,\n    rightBottom: {\n      x: topLeftPosition.x + size.width,\n      y: topLeftPosition.y + size.height\n    }\n  };\n};\n/**\n * Checks if `region` contains `point`.\n * @param region\n * @param point\n * @param margin\n * @return `true` if contained.\n */\nconst containsPoint = (region, point, margin) => {\n  const { topLeft, rightBottom } = region;\n  const { x, y } = point;\n  return (\n    x >= topLeft.x + margin &&\n    y >= topLeft.y + margin &&\n    x < rightBottom.x - margin &&\n    y < rightBottom.y - margin\n  );\n};\nconst getWidth = region => region.rightBottom.x - region.topLeft.x;\nconst getHeight = region => region.rightBottom.y - region.topLeft.y;\nconst getSize = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    width: rightBottom.x - topLeft.x,\n    height: rightBottom.y - topLeft.y\n  };\n};\nconst getCenterPoint = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    x: (topLeft.x + rightBottom.x) / 2,\n    y: (topLeft.y + rightBottom.y) / 2\n  };\n};\n/**\n * Creates a new `RectangleRegion` by scaling `region` with `scaleFactor`.\n * @param region\n * @param scaleFactor\n * @param originType\n * @return A new scaled `RectangleRegion` unit.\n */\nconst createScaled = (region, scaleFactor, originType) => {\n  const { topLeft, rightBottom } = region;\n  switch (originType) {\n    case 0:\n      return {\n        topLeft,\n        rightBottom: {\n          x: lerp(topLeft.x, rightBottom.x, scaleFactor),\n          y: lerp(topLeft.y, rightBottom.y, scaleFactor)\n        }\n      };\n    case 1: {\n      const center = getCenterPoint(region);\n      const size = getSize(region);\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      return {\n        topLeft: {\n          x: center.x - halfWidth,\n          y: center.y - halfHeight\n        },\n        rightBottom: {\n          x: center.x + halfWidth,\n          y: center.y + halfHeight\n        }\n      };\n    }\n  }\n};\n\nconst rectangleRegion = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$2,\n  containsPoint: containsPoint,\n  getWidth: getWidth,\n  getHeight: getHeight,\n  getSize: getSize,\n  getCenterPoint: getCenterPoint,\n  createScaled: createScaled\n});\n\n/**\n * Calculates the aspect ratio i.e. `width / height`.\n * @param size\n */\nconst getAspectRatio = size => size.width / size.height;\n/**\n * Calculates the area i.e. `width * height`.\n * @param size\n */\nconst getArea = size => size.width * size.height;\n\nconst rectangleSize = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  getAspectRatio: getAspectRatio,\n  getArea: getArea\n});\n\n/**\n * Zero vector.\n */\nconst zero = {\n  x: 0,\n  y: 0\n};\n/**\n * Checks if a given vector is completely zero.\n * @param v\n * @return `true` if zero.\n */\nconst isZero = v => v.x === 0 && v.y === 0;\n/**\n * Creates a new vector from polar coordinates `angle` and `length`.\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst fromPolar = (length, angle) => {\n  return {\n    x: length * cos(angle),\n    y: length * sin(angle)\n  };\n};\n/**\n * Creates a new vector by adding two vectors.\n * @param a\n * @param b\n * @return new `Vector2D`.\n */\nconst add$1 = (a, b) => {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n};\n/**\n * Creates a new vector by adding cartesian coordinates.\n * @param vector\n * @param x\n * @param y\n * @return new `Vector2D`.\n */\nconst addCartesian = (vector, x, y) => {\n  return {\n    x: vector.x + x,\n    y: vector.y + y\n  };\n};\n/**\n * Creates a new vector by adding polar coordinates.\n * @param vector\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst addPolar = (vector, length, angle) => {\n  return {\n    x: vector.x + length * cos(angle),\n    y: vector.y + length * sin(angle)\n  };\n};\n/**\n * Creates a new vector by subtracting `b` from `a`.\n * @param a\n * @param b\n * @return new `Vector2D`.\n */\nconst subtract = (a, b) => {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n};\n/**\n * Creates a new vector by subtracting cartesian coordinates.\n * @param vector\n * @param x\n * @param y\n * @return new `Vector2D`.\n */\nconst subtractCartesian = (vector, x, y) => {\n  return {\n    x: vector.x - x,\n    y: vector.y - y\n  };\n};\n/**\n * Creates a new vector by subtracting polar coordinates.\n * @param vector\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst subtractPolar = (vector, length, angle) => {\n  return {\n    x: vector.x - length * cos(angle),\n    y: vector.y - length * sin(angle)\n  };\n};\n/**\n * Creates a new vector with multiplied values.\n * @param vector\n * @param multiplier\n * @return new `Vector2D`.\n */\nconst multiply = (vector, multiplier) => {\n  return {\n    x: vector.x * multiplier,\n    y: vector.y * multiplier\n  };\n};\n/**\n * Creates a new vector with divided values.\n * @param vector\n * @param multiplier\n * @return new `Vector2D`.\n */\nconst divide = (vector, divisor) => {\n  return {\n    x: vector.x / divisor,\n    y: vector.y / divisor\n  };\n};\n/**\n * Calculates square of distance between `vectorA` and `vectorB`.\n * @param vectorA\n * @param vectorB\n * @return Square of distance.\n */\nconst distanceSquared = (vectorA, vectorB) =>\n  hypotenuseSquared2D(vectorB.x - vectorA.x, vectorB.y - vectorA.y);\n/**\n * Calculates distance between `vectorA` and `vectorB`.\n * @param vectorA\n * @param vectorB\n * @return Distance.\n */\nconst distance = (vectorA, vectorB) =>\n  hypotenuse2D(vectorB.x - vectorA.x, vectorB.y - vectorA.y);\n/**\n * Returns string e.g. `{x:0,y:0}`\n * @param vector\n * @return String expression.\n */\nconst toStr = vector => `{x:${vector.x},y:${vector.y}}`;\n/**\n * Creates a new vector with same values.\n * @param vector\n */\nconst copy = vector => {\n  return {\n    x: vector.x,\n    y: vector.y\n  };\n};\n/**\n * Calculates squared length of `vector`.\n * @param vector\n * @return The squared length.\n */\nconst lengthSquared = vector => hypotenuseSquared2D(vector.x, vector.y);\n/**\n * Calculates length of `vector`.\n * @param vector\n * @return The length.\n */\nconst length = vector => hypotenuse2D(vector.x, vector.y);\n/**\n * Calculates angle of `vector` in radians.\n * @param vector\n * @return The angle. `0` if `vector` is a zero vector.\n */\nconst angle$1 = vector => {\n  const { x, y } = vector;\n  return x !== 0 || y !== 0 ? atan2(vector.y, vector.x) : 0;\n};\n\nconst add$2 = (vector, otherVector) => {\n  vector.x += otherVector.x;\n  vector.y += otherVector.y;\n  return vector;\n};\nconst addCartesian$1 = (vector, x, y) => {\n  vector.x += x;\n  vector.y += y;\n  return vector;\n};\nconst addPolar$1 = (vector, length, angle) => {\n  vector.x += length * cos(angle);\n  vector.y += length * sin(angle);\n  return vector;\n};\nconst subtract$1 = (vector, otherVector) => {\n  vector.x -= otherVector.x;\n  vector.y -= otherVector.y;\n  return vector;\n};\nconst subtractCartesian$1 = (vector, x, y) => {\n  vector.x -= x;\n  vector.y -= y;\n  return vector;\n};\nconst subtractPolar$1 = (vector, length, angle) => {\n  vector.x -= length * cos(angle);\n  vector.y -= length * sin(angle);\n  return vector;\n};\nconst set = (vector, sourceVector) => {\n  vector.x = sourceVector.x;\n  vector.y = sourceVector.y;\n  return vector;\n};\nconst setCartesian = (vector, x, y) => {\n  vector.x = x;\n  vector.y = y;\n  return vector;\n};\nconst setPolar = (vector, length, angle) => {\n  vector.x = length * cos(angle);\n  vector.y = length * sin(angle);\n  return vector;\n};\nconst multiply$1 = (vector, multiplier) => {\n  vector.x *= multiplier;\n  vector.y *= multiplier;\n  return vector;\n};\nconst divide$1 = (vector, divisor) => {\n  vector.x /= divisor;\n  vector.y /= divisor;\n  return vector;\n};\n\nconst mutable = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  add: add$2,\n  addCartesian: addCartesian$1,\n  addPolar: addPolar$1,\n  subtract: subtract$1,\n  subtractCartesian: subtractCartesian$1,\n  subtractPolar: subtractPolar$1,\n  set: set,\n  setCartesian: setCartesian,\n  setPolar: setPolar,\n  multiply: multiply$1,\n  divide: divide$1\n});\n\nconst add$3 = (sourceA, sourceB, target) => {\n  target.x = sourceA.x + sourceB.x;\n  target.y = sourceA.y + sourceB.y;\n  return target;\n};\nconst addCartesian$2 = (source, x, y, target) => {\n  target.x = source.x + x;\n  target.y = source.y + y;\n  return target;\n};\nconst addPolar$2 = (source, length, angle, target) => {\n  target.x = source.x + length * cos(angle);\n  target.y = source.y + length * sin(angle);\n  return target;\n};\nconst subtract$2 = (sourceA, sourceB, target) => {\n  target.x = sourceA.x - sourceB.x;\n  target.y = sourceA.y - sourceB.y;\n  return target;\n};\nconst subtractCartesian$2 = (source, x, y, target) => {\n  target.x = source.x - x;\n  target.y = source.y - y;\n  return target;\n};\nconst subtractPolar$2 = (source, length, angle, target) => {\n  target.x = source.x - length * cos(angle);\n  target.y = source.y - length * sin(angle);\n  return target;\n};\nconst setCartesian$1 = (x, y, target) => {\n  target.x = x;\n  target.y = y;\n  return target;\n};\nconst setPolar$1 = (length, angle, target) => {\n  target.x = length * cos(angle);\n  target.y = length * sin(angle);\n  return target;\n};\nconst multiply$2 = (source, multiplier, target) => {\n  target.x = source.x * multiplier;\n  target.y = source.y * multiplier;\n  return target;\n};\nconst divide$2 = (source, divisor, target) => {\n  target.x = source.x / divisor;\n  target.y = source.y / divisor;\n  return target;\n};\n\nconst assign = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  add: add$3,\n  addCartesian: addCartesian$2,\n  addPolar: addPolar$2,\n  subtract: subtract$2,\n  subtractCartesian: subtractCartesian$2,\n  subtractPolar: subtractPolar$2,\n  setCartesian: setCartesian$1,\n  setPolar: setPolar$1,\n  multiply: multiply$2,\n  divide: divide$2\n});\n\nconst index = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Mutable: mutable,\n  Assign: assign,\n  zero: zero,\n  isZero: isZero,\n  fromPolar: fromPolar,\n  add: add$1,\n  addCartesian: addCartesian,\n  addPolar: addPolar,\n  subtract: subtract,\n  subtractCartesian: subtractCartesian,\n  subtractPolar: subtractPolar,\n  multiply: multiply,\n  divide: divide,\n  distanceSquared: distanceSquared,\n  distance: distance,\n  toStr: toStr,\n  copy: copy,\n  lengthSquared: lengthSquared,\n  length: length,\n  angle: angle$1\n});\n\nconst createCurve = vertexPropertyList => {\n  const paths = [];\n  const len = vertexPropertyList.length;\n  let previousVertex = vertexPropertyList[0];\n  let previousControlLine = previousVertex.controlLine;\n  for (let i = 1; i < len; i += 1) {\n    const currentVertex = vertexPropertyList[i];\n    const currentControlLine = currentVertex.controlLine;\n    paths.push({\n      controlPoint1: addPolar(\n        previousVertex.point,\n        0.5 * previousControlLine.length,\n        previousControlLine.angle\n      ),\n      controlPoint2: subtractPolar(\n        currentVertex.point,\n        0.5 * currentControlLine.length,\n        currentControlLine.angle\n      ),\n      targetPoint: currentVertex.point\n    });\n    previousVertex = currentVertex;\n    previousControlLine = currentControlLine;\n  }\n  return {\n    startPoint: vertexPropertyList[0].point,\n    paths\n  };\n};\n\nconst bezier = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createCurve: createCurve\n});\n\n/**\n * Creates an easing function that takes `start`, `end` and `ratio` as arguments.\n * @param easingFunction\n */\nconst bind = easingFunction => (start, end, ratio) =>\n  start + easingFunction(ratio) * (end - start);\n/**\n * Concatenates two easing functions without normalization.\n * @param easingFunctionA\n * @param easingFunctionB\n * @param thresholdRatio\n * @return New easing function.\n */\nconst concatenate = (\n  easingFunctionA,\n  easingFunctionB,\n  thresholdRatio = 0.5\n) => {\n  return ratio => {\n    if (ratio < thresholdRatio) return easingFunctionA(ratio / thresholdRatio);\n    else {\n      const ratioB = 1 - thresholdRatio;\n      return easingFunctionB((ratio - thresholdRatio) / ratioB);\n    }\n  };\n};\n/**\n * Integrates two easing functions.\n * Results of both functions will be normalized depending on `thresholdRatio`.\n * @param easingFunctionA\n * @param easingFunctionB\n * @param thresholdRatio\n * @return New easing function.\n */\nconst integrate = (easingFunctionA, easingFunctionB, thresholdRatio = 0.5) => {\n  return ratio => {\n    if (ratio < thresholdRatio)\n      return thresholdRatio * easingFunctionA(ratio / thresholdRatio);\n    else {\n      const ratioB = 1 - thresholdRatio;\n      return (\n        thresholdRatio +\n        ratioB * easingFunctionB((ratio - thresholdRatio) / ratioB)\n      );\n    }\n  };\n};\n/**\n * Linear easing function.\n * @param ratio\n */\nconst easeLinear = ratio => ratio;\n/**\n * easeInQuad.\n * @param ratio\n */\nconst easeInQuad = square;\n/**\n * easeOutQuad.\n * @param ratio\n */\nconst easeOutQuad = ratio => -square(ratio - 1) + 1;\n/**\n * easeInCubic.\n * @param ratio\n */\nconst easeInCubic = cube;\n/**\n * easeOutCubic.\n * @param ratio\n */\nconst easeOutCubic = ratio => cube(ratio - 1) + 1;\n/**\n * easeInQuart.\n * @param ratio\n */\nconst easeInQuart = pow4;\n/**\n * easeOutQuart.\n * @param ratio\n */\nconst easeOutQuart = ratio => -pow4(ratio - 1) + 1;\n/**\n * Creates an easeOutBack function.\n * @param ratio\n */\nconst createEaseOutBack = (coefficient = 1.70158) => ratio => {\n  const r = ratio - 1;\n  return (coefficient + 1) * cube(r) + coefficient * square(r) + 1;\n};\nconst easeInOutQuad = integrate(easeInQuad, easeOutQuad);\nconst easeOutInQuad = integrate(easeOutQuad, easeInQuad);\nconst easeInOutCubic = integrate(easeInCubic, easeOutCubic);\nconst easeOutInCubic = integrate(easeOutCubic, easeInCubic);\nconst easeInOutQuart = integrate(easeInQuart, easeOutQuart);\nconst easeOutInQuart = integrate(easeOutQuart, easeInQuart);\n\nconst easing = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  bind: bind,\n  concatenate: concatenate,\n  integrate: integrate,\n  easeLinear: easeLinear,\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  createEaseOutBack: createEaseOutBack,\n  easeInOutQuad: easeInOutQuad,\n  easeOutInQuad: easeOutInQuad,\n  easeInOutCubic: easeInOutCubic,\n  easeOutInCubic: easeOutInCubic,\n  easeInOutQuart: easeInOutQuart,\n  easeOutInQuart: easeOutInQuart\n});\n\nconst { random } = Math;\n/**\n * Returns random value from `0` up to (but not including) `max`.\n * @param max\n * @return A random value.\n */\nconst value = max => random() * max;\n/**\n * Returns random value from `0` to (but not including) `2 * PI`.\n * @return A random radians value.\n */\nconst angle$2 = () => random() * TWO_PI;\n/**\n * Returns random value from `start` up to (but not including) `end`.\n * @param start\n * @param end\n * @return A random value.\n */\nconst between = (start, end) => start + random() * (end - start);\n/**\n * Returns random value from `range.start` up to (but not including) `range.end`.\n * @param range\n * @return A random value.\n */\nconst inRange = range => between(range.start, range.end);\n/**\n * Returns random integer from 0 up to (but not including) `maxInt`.\n * `maxInt` is not expected to be negative.\n * @param maxInt\n * @return A random integer value.\n */\nconst integer = maxInt => floor(random() * maxInt);\n/**\n * Returns random integer from `minInt` up to (but not including) `maxInt`.\n * The case where `minInt > maxInt` or `maxInt <= 0` is not expected.\n * @param minInt\n * @param maxInt\n * @return A random integer value.\n */\nconst integerBetween = (minInt, maxInt) =>\n  minInt + floor(random() * (maxInt - minInt));\n/**\n * Returns `n` or `-n` randomly.\n * @param n Any number.\n * @return A random-signed value of `n`.\n */\nconst signed = n => (random() < 0.5 ? n : -n);\n/**\n * Returns one element of `array` randomly.\n * `array` is not expected to be empty.\n * @param array\n * @return A random element.\n */\nconst fromArray$1 = array => array[integer(array.length)];\n/**\n * Removes and returns one element from `array` randomly.\n * `array` is not expected to be empty.\n * @param array\n * @return A random element.\n */\nconst removeFromArray = array => array.splice(integer(array.length), 1)[0];\n/**\n * Returns `true` or `false` randomly.\n * @param probability A number between 0 and 1.\n * @return `true` with the given `probability`.\n */\nconst bool = probability => random() < probability;\n/**\n * Returns random value from `-absoluteValue` up to (but not including) `absoluteValue`.\n * @param absoluteValue\n * @return A random value.\n */\nconst fromAbsolute = absoluteValue =>\n  -absoluteValue + random() * 2 * absoluteValue;\n/**\n * Returns a new vector with `length` and random angle.\n * @param length\n * @return New `Vector2D` unit.\n */\nconst vector = length => fromPolar(length, angle$2());\n/**\n * Returns a random point in `region`.\n * @param region\n * @return Random `Vector2D`.\n */\nconst pointInRectangleRegion = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    x: between(topLeft.x, rightBottom.x),\n    y: between(topLeft.y, rightBottom.y)\n  };\n};\n\nconst random$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  value: value,\n  angle: angle$2,\n  between: between,\n  inRange: inRange,\n  integer: integer,\n  integerBetween: integerBetween,\n  signed: signed,\n  fromArray: fromArray$1,\n  removeFromArray: removeFromArray,\n  bool: bool,\n  fromAbsolute: fromAbsolute,\n  vector: vector,\n  pointInRectangleRegion: pointInRectangleRegion\n});\n\n/**\n * Calculates the scale factor for fitting `nonScaledSize` to `targetSize` keeping the original aspect ratio.\n *\n * @param nonScaledSize\n * @param targetSize\n * @param fittingOption Defaults to `FIT_TO_BOX`.\n */\nconst calculateScaleFactor = (nonScaledSize, targetSize, fittingOption) => {\n  switch (fittingOption) {\n    default:\n    case \"FIT_TO_BOX\":\n      return min2(\n        targetSize.width / nonScaledSize.width,\n        targetSize.height / nonScaledSize.height\n      );\n    case \"FIT_WIDTH\":\n      return targetSize.width / nonScaledSize.width;\n    case \"FIT_HEIGHT\":\n      return targetSize.height / nonScaledSize.height;\n  }\n};\n\nconst fitBox = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  calculateScaleFactor: calculateScaleFactor\n});\n\n/**\n * Finds HTML element by `id`. If not found, returns `document.body`.\n * @param id\n */\nconst getElementOrBody = id => document.getElementById(id) || document.body;\n/**\n * Returns the width and height of `node`.\n * If `node === document.body`, returns the inner width and height of `window`.\n * @param node\n */\nconst getElementSize = node =>\n  node === document.body\n    ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      }\n    : node.getBoundingClientRect();\n\nconst htmlUtility = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  getElementOrBody: getElementOrBody,\n  getElementSize: getElementSize\n});\n\nconst emptyListener = () => {};\nconst create$3 = (\n  duration,\n  onProgress = emptyListener,\n  onComplete = emptyListener\n) => {\n  return {\n    duration,\n    progressRatioChangeRate: 1 / duration,\n    onProgress,\n    onComplete,\n    count: 0,\n    progressRatio: 0,\n    isCompleted: false\n  };\n};\nconst dummy = create$3(0);\nconst reset = timerUnit => {\n  timerUnit.count = 0;\n  timerUnit.progressRatio = 0;\n  timerUnit.isCompleted = false;\n};\nconst step = timerUnit => {\n  if (timerUnit.isCompleted) return true;\n  const { count, duration, progressRatioChangeRate } = timerUnit;\n  if (count >= duration) {\n    timerUnit.progressRatio = 1;\n    timerUnit.onProgress(timerUnit);\n    timerUnit.isCompleted = true;\n    timerUnit.onComplete(timerUnit);\n    return true;\n  }\n  timerUnit.onProgress(timerUnit);\n  timerUnit.count += 1;\n  timerUnit.progressRatio += progressRatioChangeRate;\n  return false;\n};\nconst addOnComplete = (timerUnit, onComplete) => {\n  const newUnit = Object.assign({}, timerUnit);\n  const oldOnComplete = timerUnit.onComplete;\n  newUnit.onComplete = () => {\n    oldOnComplete(newUnit);\n    onComplete(newUnit);\n  };\n  return newUnit;\n};\n\nconst step$1 = chain => {\n  step(chain.current);\n  return chain.isCompleted;\n};\nconst setUnitIndex = (chain, index) => {\n  chain.index = index;\n  chain.current = chain.timers[index];\n};\nconst reset$1 = chain => {\n  loop(chain.timers, reset);\n  setUnitIndex(chain, 0);\n};\nconst next = chain => {\n  setUnitIndex(chain, chain.index + 1);\n  return chain.current;\n};\nconst create$4 = (timers, looped = false) => {\n  let newChain;\n  const newTimers = new Array(timers.length);\n  const shift = () => next(newChain);\n  const lastIndex = timers.length - 1;\n  for (let i = 0; i < lastIndex; i += 1) {\n    newTimers[i] = addOnComplete(timers[i], shift);\n  }\n  if (looped)\n    newTimers[lastIndex] = addOnComplete(timers[lastIndex], () =>\n      reset$1(newChain)\n    );\n  else\n    newTimers[lastIndex] = addOnComplete(\n      timers[lastIndex],\n      () => (newChain.isCompleted = true)\n    );\n  newChain = {\n    timers: newTimers,\n    current: newTimers[0],\n    index: 0,\n    isCompleted: false\n  };\n  return newChain;\n};\nconst dummy$1 = create$4([dummy]);\n\nconst chain = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  step: step$1,\n  setUnitIndex: setUnitIndex,\n  reset: reset$1,\n  next: next,\n  create: create$4,\n  dummy: dummy$1\n});\n\nconst create$5 = capacity => create(capacity);\nconst addTimer = (timerSet, timer) => add(timerSet, () => step(timer));\nconst addChain = (timerSet, chain$1) => add(timerSet, () => step$1(chain$1));\nconst runStep = step => step();\nconst step$2 = timerSet => {\n  removeShiftAll(timerSet, runStep);\n};\nconst clear$2 = timerSet => clearReference(timerSet);\n/**\n * Creates a timer set instance and returns a set of bound functions.\n * @param capacity\n */\nconst construct = capacity => {\n  const timerSet = create$5(capacity);\n  return {\n    addTimer: timer => addTimer(timerSet, timer),\n    addChain: chain => addChain(timerSet, chain),\n    step: () => step$2(timerSet),\n    clear: () => clear$2(timerSet)\n  };\n};\n\nconst set$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$5,\n  addTimer: addTimer,\n  addChain: addChain,\n  step: step$2,\n  clear: clear$2,\n  construct: construct\n});\n\nconst index$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Chain: chain,\n  Set: set$1,\n  emptyListener: emptyListener,\n  create: create$3,\n  dummy: dummy,\n  reset: reset,\n  step: step,\n  addOnComplete: addOnComplete\n});\n\nconst morseCodeMap = new Map([\n  [\"A\", \".-\"],\n  [\"B\", \"-...\"],\n  [\"C\", \"-.-.\"],\n  [\"D\", \"-..\"],\n  [\"E\", \".\"],\n  [\"F\", \"..-.\"],\n  [\"G\", \"--.\"],\n  [\"H\", \"....\"],\n  [\"I\", \"..\"],\n  [\"J\", \".---\"],\n  [\"K\", \"-.-\"],\n  [\"L\", \".-..\"],\n  [\"M\", \"--\"],\n  [\"N\", \"-.\"],\n  [\"O\", \"---\"],\n  [\"P\", \".--.\"],\n  [\"Q\", \"--.-\"],\n  [\"R\", \".-.\"],\n  [\"S\", \"...\"],\n  [\"T\", \"-\"],\n  [\"U\", \"..-\"],\n  [\"V\", \"...-\"],\n  [\"W\", \".--\"],\n  [\"X\", \"-..-\"],\n  [\"Y\", \"-.--\"],\n  [\"Z\", \"--..\"],\n  [\"1\", \".----\"],\n  [\"2\", \"..---\"],\n  [\"3\", \"...--\"],\n  [\"4\", \"....-\"],\n  [\"5\", \".....\"],\n  [\"6\", \"-....\"],\n  [\"7\", \"--...\"],\n  [\"8\", \"---..\"],\n  [\"9\", \"----.\"],\n  [\"0\", \"-----\"],\n  [\".\", \".-.-.-\"],\n  [\",\", \"--..--\"],\n  [\":\", \"---...\"],\n  [\"?\", \"..--..\"],\n  [\"'\", \".----.\"],\n  [\"!\", \"-.-.--\"],\n  [\"-\", \"-....-\"],\n  [\"/\", \"-..-.\"],\n  [\"@\", \".--.-.\"],\n  [\"(\", \"-.--.\"],\n  [\")\", \"-.--.-\"],\n  ['\"', \".-..-.\"],\n  [\"=\", \"-...-\"],\n  [\"+\", \".-.-.\"]\n]);\nclass Unit {\n  constructor(isOn, length, codeString) {\n    this.isOn = isOn;\n    this.length = length;\n    this.codeString = codeString;\n    let s = \"\";\n    const binaryCharacter = isOn ? \"1\" : \"0\";\n    for (let i = 0; i < length; i += 1) {\n      s += binaryCharacter;\n    }\n    this.binaryString = s;\n  }\n}\nclass On extends Unit {\n  constructor(length, codeString) {\n    super(true, length, codeString);\n  }\n}\nclass Off extends Unit {\n  constructor(length, codeString) {\n    super(false, length, codeString);\n  }\n}\nconst DIT = new On(1, \".\");\nconst DAH = new On(3, \"-\");\nconst INTER_ELEMENT_GAP = new Off(1, \"\");\nconst SHORT_GAP = new Off(3, \" \");\nconst MEDIUM_GAP = new Off(7, \" / \");\nconst NUL = new Off(0, \"\");\nfunction encode(sentence) {\n  const upperCaseSentence = sentence.toUpperCase();\n  const signals = [];\n  let gap = undefined;\n  for (let i = 0, len = upperCaseSentence.length; i < len; i += 1) {\n    const character = upperCaseSentence.charAt(i);\n    if (character === \" \") {\n      gap = MEDIUM_GAP;\n      continue;\n    } else if (character.charCodeAt(0) === 0) {\n      if (gap) signals.push(gap);\n      gap = undefined;\n      signals.push(NUL);\n      continue;\n    }\n    const code = morseCodeMap.get(character);\n    if (!code) continue;\n    for (let k = 0, kLen = code.length; k < kLen; k += 1) {\n      if (gap) signals.push(gap);\n      switch (code.charAt(k)) {\n        case \".\":\n          signals.push(DIT);\n          break;\n        case \"-\":\n        case \"_\":\n          signals.push(DAH);\n          break;\n        default:\n          continue;\n      }\n      gap = INTER_ELEMENT_GAP;\n    }\n    gap = SHORT_GAP;\n  }\n  return signals;\n}\nconst toString = signals =>\n  signals.reduce((acc, cur) => acc + cur.codeString, \"\");\nconst toBinaryString = signals =>\n  signals.reduce((acc, cur) => acc + cur.binaryString, \"\");\nconst getTotalLength = signals =>\n  signals.reduce((acc, cur) => acc + cur.length, 0);\n\nconst signal = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Unit: Unit,\n  DIT: DIT,\n  DAH: DAH,\n  INTER_ELEMENT_GAP: INTER_ELEMENT_GAP,\n  SHORT_GAP: SHORT_GAP,\n  MEDIUM_GAP: MEDIUM_GAP,\n  NUL: NUL,\n  encode: encode,\n  toString: toString,\n  toBinaryString: toBinaryString,\n  getTotalLength: getTotalLength\n});\n\n/**\n * Returns duration time per dot in milliseconds.\n * @param wpm - word (PARIS) per minute\n */\nfunction wpmToDotDuration(wpm) {\n  return 1000 / (50 * (wpm / 60));\n}\nconst create$6 = (on, off, wpm = 25, signals = [], loop = false) => {\n  return {\n    on,\n    off,\n    wpm,\n    unitTime: wpmToDotDuration(wpm),\n    loop,\n    signals,\n    index: 0,\n    timeout: undefined\n  };\n};\nconst stop = channel => {\n  if (channel.timeout) {\n    channel.off(NUL);\n    clearTimeout(channel.timeout);\n    channel.timeout = undefined;\n  }\n  channel.index = 0;\n};\nconst runCurrentSignal = channel => {\n  const { unitTime, signals, index, on, off } = channel;\n  const currentSignal = signals[index];\n  if (currentSignal.isOn) on(currentSignal);\n  else off(currentSignal);\n  return unitTime * currentSignal.length;\n};\nconst setNextRun = (run, channel, ms) => {\n  channel.timeout = setTimeout(() => {\n    channel.timeout = undefined;\n    run(channel);\n  }, ms);\n};\nconst run = channel => {\n  const currentSignalTimeLength = runCurrentSignal(channel);\n  channel.index += 1;\n  if (channel.index < channel.signals.length) {\n    setNextRun(run, channel, currentSignalTimeLength);\n    return;\n  }\n  channel.timeout = setTimeout(() => {\n    if (channel.loop) {\n      channel.off(NUL);\n      channel.timeout = undefined;\n    } else {\n      channel.off(MEDIUM_GAP);\n      setNextRun(run, channel, MEDIUM_GAP.length);\n    }\n  }, currentSignalTimeLength);\n  channel.index = 0;\n};\nconst start = (channel, signals) => {\n  stop(channel);\n  if (signals) channel.signals = signals;\n  run(channel);\n};\n\nconst channel = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  wpmToDotDuration: wpmToDotDuration,\n  create: create$6,\n  stop: stop,\n  start: start\n});\n\nconst index$2 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Signal: signal,\n  Channel: channel\n});\n\nconst createQuantity = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method, i.e. adding velocity to position.\n * @param quantity\n */\nconst updateEuler = quantity => {\n  quantity.x += quantity.vx;\n  quantity.y += quantity.vy;\n};\n/**\n * Updates the kinematic quantity naively by Euler method,\n * i.e. adding velocity to position and adding acceleration to velocity.\n * @param quantity\n * @param ax\n * @param ay\n */\nconst updateEulerAccelerated = (quantity, ax, ay) => {\n  quantity.x += quantity.vx;\n  quantity.y += quantity.vy;\n  quantity.vx += ax;\n  quantity.vy += ay;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to use `postUpdateVerlet()` with updated acceleration values after using this function.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet = (quantity, ax, ay) => {\n  quantity.vx2 = quantity.vx + 0.5 * ax;\n  quantity.vy2 = quantity.vy + 0.5 * ay;\n  quantity.vx += ax;\n  quantity.vy += ay;\n  quantity.x += quantity.vx2;\n  quantity.y += quantity.vy2;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet = (quantity, ax, ay) => {\n  quantity.vx = quantity.vx2 + 0.5 * ax;\n  quantity.vy = quantity.vy2 + 0.5 * ay;\n};\n/**\n * Assigns position values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned position.\n */\nconst positionVector = (quantity, target) =>\n  setCartesian$1(quantity.x, quantity.y, target);\n/**\n * Extracts velocity values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned velocity.\n */\nconst velocityVector = (quantity, target) =>\n  setCartesian$1(quantity.vx, quantity.vy, target);\n/**\n * Returns the speed.\n * @param quantity\n * @return The speed.\n */\nconst getSpeed = quantity => hypotenuse2D(quantity.vx, quantity.vy);\n/**\n * Returns the velocity angle.\n * @param quantity\n * @return The angle.\n */\nconst getVelocityAngle = quantity => atan2safe(quantity.vy, quantity.vx);\n/**\n * Truncates the speed (magnitude of velocity) if it is greater than `maxSpeed`.\n * @param quantity\n * @param maxSpeed\n * @return The `quantity` instance with truncated velocity values.\n */\nconst truncateVelocity = (quantity, maxSpeed) => {\n  const { vx, vy } = quantity;\n  if (hypotenuseSquared2D(vx, vy) <= maxSpeed * maxSpeed) return quantity;\n  const angle = atan2(vy, vx);\n  quantity.vx = maxSpeed * cos(angle);\n  quantity.vy = maxSpeed * sin(angle);\n  return quantity;\n};\n/**\n * Set values of `velocity` to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocity = (quantity, velocity) => {\n  quantity.vx = velocity.x;\n  quantity.vy = velocity.y;\n  return quantity;\n};\n/**\n * Set velocity values to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocityCartesian = (quantity, vx, vy) => {\n  quantity.vx = vx;\n  quantity.vy = vy;\n  return quantity;\n};\n/**\n * Set velocity values to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocityPolar = (quantity, length, angle) => {\n  quantity.vx = length * cos(angle);\n  quantity.vy = length * sin(angle);\n  return quantity;\n};\n/**\n * Let `quantity` bounce if it is out of `region`.\n * @param region\n * @param coefficientOfRestitution\n * @param quantity\n * @return `true` if bounced.\n */\nconst bounceInRectangleRegion = (\n  region,\n  coefficientOfRestitution,\n  quantity\n) => {\n  const { x, y, vx, vy } = quantity;\n  const { x: leftX, y: topY } = region.topLeft;\n  const { x: rightX, y: bottomY } = region.rightBottom;\n  if (x < leftX) {\n    quantity.x = leftX;\n    if (vx < 0) quantity.vx = -coefficientOfRestitution * vx;\n    return true;\n  } else if (x >= rightX) {\n    quantity.x = rightX - 1;\n    if (vx > 0) quantity.vx = -coefficientOfRestitution * vx;\n    return true;\n  }\n  if (y < topY) {\n    quantity.y = topY;\n    if (vy < 0) quantity.vy = -coefficientOfRestitution * vy;\n    return true;\n  } else if (y >= bottomY) {\n    quantity.y = bottomY - 1;\n    if (vy > 0) quantity.vy = -coefficientOfRestitution * vy;\n    return true;\n  }\n  return false;\n};\n\nconst kinematics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity,\n  updateEuler: updateEuler,\n  updateEulerAccelerated: updateEulerAccelerated,\n  updateVerlet: updateVerlet,\n  postUpdateVerlet: postUpdateVerlet,\n  positionVector: positionVector,\n  velocityVector: velocityVector,\n  getSpeed: getSpeed,\n  getVelocityAngle: getVelocityAngle,\n  truncateVelocity: truncateVelocity,\n  setVelocity: setVelocity,\n  setVelocityCartesian: setVelocityCartesian,\n  setVelocityPolar: setVelocityPolar,\n  bounceInRectangleRegion: bounceInRectangleRegion\n});\n\nconst createQuantity$1 = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    fx: 0,\n    fy: 0\n  };\n};\nconst createVerletQuantity = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    vx2: 0,\n    vy2: 0,\n    fx: 0,\n    fy: 0\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method. Applies the below:\n * 1. Update position by adding velocity.\n * 2. Update velocity by applying force.\n * 3. Clear force to zero.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateEuler$1 = quantity => {\n  updateEulerAccelerated(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to update force after running this function and then run `postUpdateVerlet()`.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet$1 = quantity => {\n  updateVerlet(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet$1 = quantity => {\n  postUpdateVerlet(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Extracts force values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned acceleration.\n */\nconst forceVector = (quantity, target) =>\n  setCartesian$1(quantity.fx, quantity.fy, target);\n/**\n * Truncates the magnitude of force if it is greater than `maxMagnitude`.\n * @param quantity\n * @param maxSpeed\n * @return The `quantity` instance with truncated force values.\n */\nconst truncateForce = (quantity, maxMagnitude) => {\n  const { fx, fy } = quantity;\n  if (hypotenuseSquared2D(fx, fy) <= maxMagnitude * maxMagnitude)\n    return quantity;\n  const angle = atan2(fy, fx);\n  quantity.fx = maxMagnitude * cos(angle);\n  quantity.fy = maxMagnitude * sin(angle);\n  return quantity;\n};\n/**\n * Adds `force` to `quantity`.\n * @param quantity\n * @param force\n * @return The `quantity` instance with assigned force.\n */\nconst addForce = (quantity, force) => {\n  quantity.fx += force.x;\n  quantity.fy += force.y;\n  return quantity;\n};\n/**\n * Adds force values to `quantity`.\n * @param quantity\n * @param fx\n * @param fy\n * @return The `quantity` instance with assigned force.\n */\nconst addForceCartesian = (quantity, fx, fy) => {\n  quantity.fx += fx;\n  quantity.fy += fy;\n  return quantity;\n};\n/**\n * Adds force values to `quantity`.\n * @param quantity\n * @param magnitude\n * @param angle\n * @return The `quantity` instance with assigned force.\n */\nconst addForcePolar = (quantity, magnitude, angle) => {\n  quantity.fx += magnitude * cos(angle);\n  quantity.fy += magnitude * sin(angle);\n  return quantity;\n};\n\nconst simpleDynamics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity$1,\n  createVerletQuantity: createVerletQuantity,\n  updateEuler: updateEuler$1,\n  updateVerlet: updateVerlet$1,\n  postUpdateVerlet: postUpdateVerlet$1,\n  forceVector: forceVector,\n  truncateForce: truncateForce,\n  addForce: addForce,\n  addForceCartesian: addForceCartesian,\n  addForcePolar: addForcePolar\n});\n\nconst createQuantity$2 = (x, y, mass, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    fx: 0,\n    fy: 0,\n    mass\n  };\n};\nconst createVerletQuantity$1 = (x, y, mass, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    vx2: 0,\n    vy2: 0,\n    fx: 0,\n    fy: 0,\n    mass\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method. Applies the below:\n * 1. Update position by adding velocity.\n * 2. Update velocity by applying force.\n * 3. Clear force to zero.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateEuler$2 = quantity => {\n  const { mass } = quantity;\n  updateEulerAccelerated(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to update force after running this function and then run `postUpdateVerlet()`.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet$2 = quantity => {\n  const { mass } = quantity;\n  updateVerlet(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet$2 = quantity => {\n  const { mass } = quantity;\n  postUpdateVerlet(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n\nconst dynamics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity$2,\n  createVerletQuantity: createVerletQuantity$1,\n  updateEuler: updateEuler$2,\n  updateVerlet: updateVerlet$2,\n  postUpdateVerlet: postUpdateVerlet$2\n});\n\nlet constant = 1;\nlet minusConstant = -constant;\nconst setConstant = value => {\n  constant = value;\n  minusConstant = -constant;\n};\n/**\n * Calculates gravitation force.\n * @param attractedRelative Relative position from attractor to attracted.\n * @param massProduct Pre-calcultad product of mass of attractor and attracted.\n * @param distance Pre-calculated distance.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateCore = (attractedRelative, massProduct, distance, target) =>\n  multiply$2(\n    attractedRelative,\n    (minusConstant * massProduct) / (distance * distance * distance),\n    target\n  );\n/**\n * Calculates gravitation force applied on point mass `attracted` exerted by point mass `attractor`.\n * @param attractor Object that has `x`, `y` and `mass`.\n * @param attracted Object that has `x`, `y` and `mass`.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculate = (attractor, attracted, target) =>\n  calculateCore(\n    subtract$2(attracted, attractor, target),\n    attractor.mass * attracted.mass,\n    distance(attractor, attracted),\n    target\n  );\n/**\n * Calculates gravitation force, assuming that the mass is always `1`.\n * @param attractedRelative Relative position from attractor to attracted.\n * @param distance Pre-calculated distance.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateCoreSimple = (attractedRelative, distance, target) =>\n  multiply$2(\n    attractedRelative,\n    minusConstant / (distance * distance * distance),\n    target\n  );\n/**\n * Calculates gravitation force applied on point `attracted` exerted by point `attractor`, assuming that the mass is always `1`.\n * @param attractor\n * @param attracted\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateSimple = (attractor, attracted, target) =>\n  calculateCoreSimple(\n    subtract$2(attracted, attractor, target),\n    distance(attractor, attracted),\n    target\n  );\n/**\n * Adds gravitation force between `bodyA` and `bodyB`.\n * @param bodyA\n * @param bodyB\n * @param forceOnBodyB\n */\nconst addForceEachOther = (bodyA, bodyB, forceOnBodyB) => {\n  const { x: forceX, y: forceY } = forceOnBodyB;\n  bodyA.fx -= forceX;\n  bodyA.fy -= forceY;\n  bodyB.fx += forceX;\n  bodyB.fy += forceY;\n};\nconst temporalGravitation = { x: 0, y: 0 };\n/**\n * Set of functions that calculate gravitation force and apply it on the body.\n */\nconst attract = {\n  /**\n   * Calculates gravitation force using pre-calculated values and applies it on `attracted`.\n   * @param attracted\n   * @param attractedRelative The relative position from the attractor to `attracted`.\n   * @param massProduct The pre-calculated product of mass of the attractor and `attracted`\n   * @param distance The pre-calculated distance between the attractor and `attracted`.\n   */\n  precalculated: (attracted, attractedRelative, massProduct, distance) =>\n    addForce(\n      attracted,\n      calculateCore(\n        attractedRelative,\n        massProduct,\n        distance,\n        temporalGravitation\n      )\n    ),\n  /**\n   * Calculates gravitation force and applies it on `attracted`.\n   */\n  calculate: (attractor, attracted) =>\n    addForce(attracted, calculate(attractor, attracted, temporalGravitation)),\n  /**\n   * Calculates gravitation force using pre-calculated distance and applies it on `attracted`,\n   * assuming that the mass is always `1`.\n   * @param attracted\n   * @param attractedRelative The relative position from the attractor to `attracted`.\n   * @param distance The pre-calculated distance between the attractor and `attracted`.\n   */\n  precalculatedSimple: (attracted, attractedRelative, distance) =>\n    addForce(\n      attracted,\n      calculateCoreSimple(attractedRelative, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on `attracted`,\n   * assuming that the mass is always `1`.\n   */\n  calculateSimple: (attractor, attracted) =>\n    addForce(\n      attracted,\n      calculateSimple(attractor, attracted, temporalGravitation)\n    )\n};\n/**\n * Set of functions that calculate gravitation force and apply it on both bodies.\n */\nconst attractEachOther = {\n  /**\n   * Calculates gravitation force using pre-calculated values and applies it on both `bodyA` and `bodyB`.\n   * @param bodyA\n   * @param bodyB\n   * @param bodyBRelative The relative position from `bodyA` to `bodyB`.\n   * @param massProduct The pre-calculated product of mass of `bodyA` and `bodyB`\n   * @param distance The pre-calculated distance between `bodyA` and `bodyB`.\n   */\n  precalculated: (bodyA, bodyB, bodyBRelative, massProduct, distance) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateCore(bodyBRelative, massProduct, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on both `bodyA` and `bodyB`.\n   */\n  calculate: (bodyA, bodyB) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculate(bodyA, bodyB, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force using pre-calculated distance and applies it on both `bodyA` and `bodyB`,\n   * assuming that the mass is always `1`.\n   * @param bodyA\n   * @param bodyB\n   * @param bodyBRelative The relative position from `bodyA` to `bodyB`.\n   * @param distance The pre-calculated distance between `bodyA` and `bodyB`.\n   */\n  precalculatedSimple: (bodyA, bodyB, bodyBRelative, distance) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateCoreSimple(bodyBRelative, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on both `bodyA` and `bodyB`,\n   * assuming that the mass is always `1`.\n   */\n  calculateSimple: (bodyA, bodyB) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateSimple(bodyA, bodyB, temporalGravitation)\n    )\n};\n\nconst gravitation = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  get constant() {\n    return constant;\n  },\n  setConstant: setConstant,\n  calculateCore: calculateCore,\n  calculate: calculate,\n  calculateCoreSimple: calculateCoreSimple,\n  calculateSimple: calculateSimple,\n  attract: attract,\n  attractEachOther: attractEachOther\n});\n\n/**\n * Updates rotation by adding `rotationVelocity` to `rotationAngle`.\n * @param quantity\n */\nconst update = quantity => {\n  quantity.rotationAngle += quantity.rotationVelocity;\n};\n/**\n * Creates a new rotation quantity with random initial angle, random rotation direction and\n * random rotational speed within the given range.\n * @param minRotationSpeed\n * @param maxRotationSpeed\n * @return New `Rotation.Quantity`.\n */\nconst createRandomQuantity = (minRotationSpeed, maxRotationSpeed) => {\n  return {\n    rotationAngle: angle$2(),\n    rotationVelocity: signed(between(minRotationSpeed, maxRotationSpeed))\n  };\n};\n\nconst rotation = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  update: update,\n  createRandomQuantity: createRandomQuantity\n});\n\n/**\n * Creates an array of HSV values with random hue ∈ [0, 360].\n * @param saturation\n * @param value\n * @return New array of HSV values.\n */\nconst withRandomHue = (saturation, value$1) => [\n  value(360),\n  saturation,\n  value$1\n];\n/**\n * Converts HSV values (hue ∈ [0, 360], saturation ∈ [0, 1] and value ∈ [0, 1])\n * to RGB values (red, green, blue ∈ [0, 1]).\n * @param hsvValues\n * @return New array of RGB values.\n */\nconst toRGB = hsvValues => {\n  const [hue, saturation, value] = hsvValues;\n  const c = value * saturation;\n  const dividedHue = hue * INVERSE60;\n  const x = c * (1 - abs((dividedHue % 2) - 1));\n  let tmpValues;\n  switch (floor(dividedHue)) {\n    case 0:\n      tmpValues = [c, x, 0];\n      break;\n    case 1:\n      tmpValues = [x, c, 0];\n      break;\n    case 2:\n      tmpValues = [0, c, x];\n      break;\n    case 3:\n      tmpValues = [0, x, c];\n      break;\n    case 4:\n      tmpValues = [x, 0, c];\n      break;\n    case 5:\n      tmpValues = [c, 0, x];\n      break;\n    default:\n      tmpValues = [0, 0, 0];\n      break;\n  }\n  const m = value - c;\n  return [tmpValues[0] + m, tmpValues[1] + m, tmpValues[2] + m];\n};\n\nconst hsv = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  withRandomHue: withRandomHue,\n  toRGB: toRGB\n});\n\nexport {\n  angle as Angle,\n  arrayList as ArrayList,\n  arrayUtility as ArrayUtility,\n  bezier as Bezier,\n  dynamics as Dynamics,\n  easing as Easing,\n  fitBox as FitBox,\n  gravitation as Gravitation,\n  hsv as HSV,\n  htmlUtility as HtmlUtility,\n  kinematics as Kinematics,\n  lazy as Lazy,\n  constants as MathConstants,\n  index$2 as MorseCode,\n  numeric as Numeric,\n  random$1 as Random,\n  rectangleRegion as RectangleRegion,\n  rectangleSize as RectangleSize,\n  rotation as Rotation,\n  simpleDynamics as SimpleDynamics,\n  structureOfArrays as StructureOfArrays,\n  index$1 as Timer,\n  index as Vector2D\n};\n","/**\n * p5-extension\n *\n * An extension for p5.js.\n * GitHub repository: {@link https://github.com/fal-works/p5-extension}\n *\n * @module p5-extension\n * @copyright 2019 FAL\n * @author FAL <contact@fal-works.com>\n * @license MIT\n * @version 0.1.9\n */\n\nimport * as CCC from \"@fal-works/creative-coding-core\";\nimport p5 from \"p5\";\n\n/**\n * The shared `p5` instance.\n */\nlet p;\n/**\n * The shared `ScaledCanvas` instance.\n */\nlet canvas;\n/**\n * Sets the given `p5` instance to be shared.\n * @param instance\n */\nconst setP5Instance = instance => {\n  p = instance;\n};\n/**\n * Sets the given `ScaledCanvas` instance to be shared.\n * @param scaledCanvas\n */\nconst setCanvas = scaledCanvas => {\n  canvas = scaledCanvas;\n};\n\n/**\n * Creates a new `p5.Color` instance from another `p5.Color` or a color code string.\n * @param color\n */\nconst parseColor = color =>\n  typeof color === \"string\" ? p.color(color) : Object.assign({}, color);\nconst emptyFunction = () => {};\n/**\n * Creates a function that applies a stroke color.\n * @param color `null` will be `noStroke()` and `undefined` will have no effects.\n * @return A function that runs either `stroke()`, `noStroke()` or nothing.\n */\nconst parseStroke = color => {\n  if (color === null) return p.noStroke.bind(p);\n  if (color === undefined) return emptyFunction;\n  const colorObject = parseColor(color);\n  return p.stroke.bind(p, colorObject);\n};\n/**\n * Creates a function that applies a fill color.\n * @param color `null` will be `noFill()` and `undefined` will have no effects.\n * @return A function that runs either `fill()`, `noFill()` or nothing.\n */\nconst parseFill = color => {\n  if (color === null) return p.noFill.bind(p);\n  if (color === undefined) return emptyFunction;\n  const colorObject = parseColor(color);\n  return p.fill.bind(p, colorObject);\n};\n/**\n * Creates a new `p5.Color` instance by replacing the alpha value with `alpha`.\n * @param color\n * @param alpha\n */\nconst colorWithAlpha = (color, alpha) => {\n  const colorObject = parseColor(color);\n  colorObject.setAlpha(alpha);\n  return colorObject;\n};\n/**\n * Creates a new color by reversing each RGB value of the given `color`.\n * The alpha value will remain the same.\n * Be sure that the color mode is set to RGB ∈ [0, 255].\n * @param color\n * @return New `p5.Color` instance with reversed RGB values.\n */\nconst reverseColor = color =>\n  p.color(\n    255 - p.red(color),\n    255 - p.green(color),\n    255 - p.blue(color),\n    p.alpha(color)\n  );\n\nconst {\n  HtmlUtility,\n  RectangleRegion,\n  FitBox,\n  ArrayUtility,\n  ArrayList,\n  Vector2D,\n  Numeric,\n  MathConstants,\n  Random,\n  Angle\n} = CCC;\nconst { sin, cos } = Numeric;\nconst { round } = Numeric;\nconst { ONE_OVER_SQUARE_ROOT_TWO, INVERSE255 } = MathConstants;\nconst { TWO_PI } = Angle;\n\n/**\n * Creats an `AlphaColor` unit.\n * The max alpha of `stroke()` and `fill()` should be set to `255` when using this function.\n * @param color\n * @param resolution\n */\nconst create = (color, resolution) => {\n  const colors = new Array(resolution);\n  const maxIndex = resolution - 1;\n  if (resolution === 1) {\n    colors[0] =\n      typeof color === \"string\" ? p.color(color) : Object.assign({}, color);\n  } else {\n    const baseAlpha = p.alpha(color);\n    for (let i = 1; i < resolution; i += 1) {\n      const alpha = baseAlpha * (i / maxIndex);\n      colors[i] = colorWithAlpha(color, alpha);\n    }\n  }\n  return {\n    colors,\n    maxIndex\n  };\n};\n/**\n * Gets a `p5.Color` instance.\n * @param alphaColor\n * @param alpha Alpha value from `0` to `255`.\n * @return A `p5.Color` instance.\n */\nconst get = (alphaColor, alpha) =>\n  alphaColor.colors[round(alphaColor.maxIndex * alpha * INVERSE255)];\n\nconst alphaColor = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create,\n  get: get\n});\n\nconst emptyFunction$1 = () => {};\n/**\n * Creates a `ShapeColor` unit.\n * The max alpha of `stroke()` and `fill()` should be set to `255` when using this function.\n * @param strokeColor `null` will be `noStroke()` and `undefined` will have no effects.\n * @param fillColor `null` will be `noFill()` and `undefined` will have no effects.\n * @param alphaResolution\n */\nconst create$1 = (strokeColor, fillColor, alphaResolution) => {\n  if (alphaResolution === 1) {\n    return {\n      stroke: parseStroke(strokeColor),\n      fill: parseFill(fillColor)\n    };\n  }\n  let stroke;\n  if (strokeColor === null) {\n    stroke = () => p.noStroke();\n  } else if (strokeColor === undefined) {\n    stroke = emptyFunction$1;\n  } else {\n    const strokeAlphaColor = create(strokeColor, alphaResolution);\n    stroke = alpha => p.stroke(get(strokeAlphaColor, alpha));\n  }\n  let fill;\n  if (fillColor === null) {\n    fill = () => p.noFill();\n  } else if (fillColor === undefined) {\n    fill = emptyFunction$1;\n  } else {\n    const fillAlphaColor = create(fillColor, alphaResolution);\n    fill = alpha => p.fill(get(fillAlphaColor, alpha));\n  }\n  return { stroke, fill };\n};\n/**\n * Applies the stroke and fill colors.\n * @param shapeColor\n * @param alpha Alpha value from `0` to `255`.\n */\nconst apply = (shapeColor, alpha) => {\n  if (alpha < 1) {\n    p.noStroke();\n    p.noFill();\n    return;\n  }\n  shapeColor.stroke(alpha);\n  shapeColor.fill(alpha);\n};\n\nconst shapeColor = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$1,\n  apply: apply\n});\n\n/**\n * Runs `drawCallback` and `p.loadPixels()`, then returns `p.pixels`.\n * The style and transformations will be restored by using `p.push()` and `p.pop()`.\n * @param p The p5 instance.\n * @param drawCallback\n * @return Pixels of the canvas after applying `drawCallback`.\n */\nconst createPixels = drawCallback => {\n  p.push();\n  drawCallback();\n  p.pop();\n  p.loadPixels();\n  return p.pixels;\n};\n/**\n * Replaces the whole pixels of the canvas.\n * Assigns the given pixels to `p.pixels` and calls `p.updatePixels()`.\n * @param pixels\n */\nconst replaceCanvasPixels = pixels => {\n  p.pixels = pixels;\n  p.updatePixels();\n};\n\n/**\n * Runs `drawCallback` translated with `offsetX` and `offsetY`,\n * then restores the transformation by calling `p.translate()` with negative values.\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\n *\n * @param drawCallback\n * @param offsetX\n * @param offsetY\n */\nconst drawTranslated = (drawCallback, offsetX, offsetY) => {\n  p.translate(offsetX, offsetY);\n  drawCallback();\n  p.translate(-offsetX, -offsetY);\n};\n/**\n * Runs `drawCallback` rotated with `angle`,\n * then restores the transformation by calling `p.rotate()` with the negative value.\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\n *\n * @param drawCallback\n * @param angle\n */\nconst drawRotated = (drawCallback, angle) => {\n  p.rotate(angle);\n  drawCallback();\n  p.rotate(-angle);\n};\n/**\n * Composite of `drawTranslated()` and `drawRotated()`.\n *\n * @param drawCallback\n * @param offsetX\n * @param offsetY\n * @param angle\n */\nconst drawTranslatedAndRotated = (drawCallback, offsetX, offsetY, angle) => {\n  p.translate(offsetX, offsetY);\n  drawRotated(drawCallback, angle);\n  p.translate(-offsetX, -offsetY);\n};\n/**\n * Runs `drawCallback` scaled with `scaleFactor`,\n * then restores the transformation by scaling with the inversed factor.\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\n *\n * @param drawCallback\n * @param scaleFactor\n */\nconst drawScaled = (drawCallback, scaleFactor) => {\n  p.scale(scaleFactor);\n  drawCallback();\n  p.scale(1 / scaleFactor);\n};\n/**\n * Composite of `drawTranslated()`, `drawRotated()` and `drawScaled()`.\n *\n * @param drawCallback\n * @param offsetX\n * @param offsetY\n * @param angle\n * @param scaleFactor\n */\nconst drawTransformed = (\n  drawCallback,\n  offsetX,\n  offsetY,\n  angle,\n  scaleFactor\n) => {\n  p.translate(offsetX, offsetY);\n  p.rotate(angle);\n  p.scale(scaleFactor);\n  drawCallback();\n  p.scale(1 / scaleFactor);\n  p.rotate(-angle);\n  p.translate(-offsetX, -offsetY);\n};\n\nconst drawPath = path => {\n  const { controlPoint1, controlPoint2, targetPoint } = path;\n  p.bezierVertex(\n    controlPoint1.x,\n    controlPoint1.y,\n    controlPoint2.x,\n    controlPoint2.y,\n    targetPoint.x,\n    targetPoint.y\n  );\n};\nconst drawBezierCurve = curve => {\n  const { startPoint, paths } = curve;\n  p.vertex(startPoint.x, startPoint.y);\n  ArrayUtility.loop(paths, drawPath);\n};\nconst drawControlLine = vertex => {\n  const { point, controlLine } = vertex;\n  const { x, y } = point;\n  const controlPointOffset = Vector2D.fromPolar(\n    0.5 * controlLine.length,\n    controlLine.angle\n  );\n  const controlX = controlPointOffset.x;\n  const controlY = controlPointOffset.y;\n  p.line(x - controlX, y - controlY, x + controlX, y + controlY);\n};\nconst drawBezierControlLines = vertices => {\n  ArrayUtility.loop(vertices, drawControlLine);\n};\n\nconst graphicsToImage = graphics => {\n  const g = graphics;\n  const { width, height } = g;\n  const image = p.createImage(width, height);\n  image.copy(graphics, 0, 0, width, height, 0, 0, width, height);\n  return image;\n};\n\nlet shakeFactor = 0;\nlet shakeDecayFactor = 0;\nlet shakeType = \"DEFAULT\";\nconst setShake = (\n  initialFactor,\n  decayFactor,\n  type = \"DEFAULT\",\n  force = false\n) => {\n  if (decayFactor >= 1) return;\n  if (!force && shakeFactor !== 0) return;\n  shakeFactor = initialFactor;\n  shakeDecayFactor = decayFactor;\n  shakeType = type;\n};\nconst applyShake = () => {\n  if (shakeFactor === 0) return;\n  const { width, height } = canvas.logicalSize;\n  const xShake =\n    shakeType === \"VERTICAL\" ? 0 : Random.signed(shakeFactor * width);\n  const yShake =\n    shakeType === \"HORIZONTAL\" ? 0 : Random.signed(shakeFactor * height);\n  p.translate(xShake, yShake);\n  shakeFactor *= shakeDecayFactor;\n  if (shakeFactor < 0.001) shakeFactor = 0;\n};\n\nconst line = (from, to) => p.line(from.x, from.y, to.x, to.y);\nconst lineWithMargin = (from, to, margin) => {\n  const angle = Angle.betweenPoints(from, to);\n  const offsetX = margin * cos(angle);\n  const offsetY = margin * sin(angle);\n  return p.line(\n    from.x + offsetX,\n    from.y + offsetY,\n    to.x - offsetX,\n    to.y - offsetY\n  );\n};\nconst lineAtOrigin = destination => p.line(0, 0, destination.x, destination.y);\nconst circleAtOrigin = size => p.circle(0, 0, size);\nconst arcAtOrigin = (width, height, startRatio, endRatio, mode, detail) =>\n  p.arc(\n    0,\n    0,\n    width,\n    height,\n    startRatio * TWO_PI,\n    endRatio * TWO_PI,\n    mode,\n    detail\n  );\nconst circularArcAtOrigin = (size, startRatio, endRatio, mode, detail) =>\n  p.arc(0, 0, size, size, startRatio * TWO_PI, endRatio * TWO_PI, mode, detail);\n\nconst logicalPosition = { x: 0, y: 0 };\nconst updatePosition = () => {\n  if (!canvas) return;\n  const factor = 1 / canvas.scaleFactor;\n  logicalPosition.x = factor * p.mouseX;\n  logicalPosition.y = factor * p.mouseY;\n};\n/**\n * Sets mouse position to the center point of the canvas.\n */\nconst setCenter = () =>\n  Vector2D.Mutable.set(logicalPosition, canvas.logicalCenterPosition);\nconst emptyCallback = () => true;\nconst stopCallback = () => false;\nconst createEventHandler = handler => {\n  return {\n    onClicked: handler.onClicked || emptyCallback,\n    onPressed: handler.onPressed || emptyCallback,\n    onReleased: handler.onReleased || emptyCallback,\n    onMoved: handler.onMoved || emptyCallback\n  };\n};\n/**\n * The EventHandler that will be checked first by `onClicked` and other similar functions.\n * Set a callback that returns `false` here for ignoring other handlers in `handlerStack`.\n */\nconst topEventHandler = createEventHandler({});\nconst eventHandlerStack = ArrayList.create(32);\n/**\n * The EventHandler that will be checked last by `onClicked` and other similar functions\n * after checking all handlers in `eventHandlerStack`.\n */\nconst bottomEventHandler = createEventHandler({});\n/**\n * Creates an `EventHandler` and adds it to `eventHandlerStack`.\n * @param handler\n * @return Created `EventHandler`.\n */\nconst addEventHandler = handler => {\n  const createdHandler = createEventHandler(handler);\n  ArrayList.add(eventHandlerStack, createdHandler);\n  return createdHandler;\n};\n/**\n * Removes `handler` from `eventHandlerStack`.\n * @param handler\n */\nconst removeEventHandler = handler => {\n  ArrayList.removeShiftElement(eventHandlerStack, handler);\n};\nconst runCallback = callback => callback(logicalPosition);\nconst createGetCallback = event => {\n  switch (event) {\n    case 0:\n      return handler => handler.onClicked;\n    case 1:\n      return handler => handler.onPressed;\n    case 2:\n      return handler => handler.onReleased;\n    case 3:\n      return handler => handler.onMoved;\n  }\n};\nconst createOnEvent = event => {\n  const getCallback = createGetCallback(event);\n  return () => {\n    const runNext = runCallback(getCallback(topEventHandler));\n    if (!runNext) return;\n    const handlers = eventHandlerStack.array;\n    let index = eventHandlerStack.size - 1;\n    while (index >= 0) {\n      const runNext = runCallback(getCallback(handlers[index]));\n      if (!runNext) break;\n      index -= 1;\n    }\n    runCallback(getCallback(bottomEventHandler));\n  };\n};\nconst onClicked = createOnEvent(0);\nconst onPressed = createOnEvent(1);\nconst onReleased = createOnEvent(2);\nconst onMoved = createOnEvent(3);\nconst drawAtCursor = callback =>\n  drawTranslated(callback, logicalPosition.x, logicalPosition.y);\n\nconst mouse = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  logicalPosition: logicalPosition,\n  updatePosition: updatePosition,\n  setCenter: setCenter,\n  emptyCallback: emptyCallback,\n  stopCallback: stopCallback,\n  createEventHandler: createEventHandler,\n  topEventHandler: topEventHandler,\n  eventHandlerStack: eventHandlerStack,\n  bottomEventHandler: bottomEventHandler,\n  addEventHandler: addEventHandler,\n  removeEventHandler: removeEventHandler,\n  onClicked: onClicked,\n  onPressed: onPressed,\n  onReleased: onReleased,\n  onMoved: onMoved,\n  drawAtCursor: drawAtCursor\n});\n\nconst anyKeyIsDown = keyCodes => {\n  for (const keyCode of keyCodes) {\n    if (p.keyIsDown(keyCode)) return true;\n  }\n  return false;\n};\n\nconst keyboard = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  anyKeyIsDown: anyKeyIsDown\n});\n\nlet horizontalMove = 0;\nlet verticalMove = 0;\nconst unitVector = { x: 0, y: 0 };\nlet up = false;\nlet left = false;\nlet down = false;\nlet right = false;\nconst setVec = (x, y) => Vector2D.Mutable.setCartesian(unitVector, x, y);\nconst update = () => {\n  horizontalMove = (left ? -1 : 0) + (right ? 1 : 0);\n  verticalMove = (up ? -1 : 0) + (down ? 1 : 0);\n  switch (horizontalMove) {\n    case -1:\n      switch (verticalMove) {\n        case -1:\n          setVec(-ONE_OVER_SQUARE_ROOT_TWO, -ONE_OVER_SQUARE_ROOT_TWO);\n          break;\n        case 0:\n          setVec(-1, 0);\n          break;\n        case 1:\n          setVec(-ONE_OVER_SQUARE_ROOT_TWO, ONE_OVER_SQUARE_ROOT_TWO);\n          break;\n      }\n      break;\n    case 0:\n      switch (verticalMove) {\n        case -1:\n          setVec(0, -1);\n          break;\n        case 0:\n          setVec(0, 0);\n          break;\n        case 1:\n          setVec(0, 1);\n          break;\n      }\n      break;\n    case 1:\n      switch (verticalMove) {\n        case -1:\n          setVec(ONE_OVER_SQUARE_ROOT_TWO, -ONE_OVER_SQUARE_ROOT_TWO);\n          break;\n        case 0:\n          setVec(1, 0);\n          break;\n        case 1:\n          setVec(ONE_OVER_SQUARE_ROOT_TWO, ONE_OVER_SQUARE_ROOT_TWO);\n          break;\n      }\n      break;\n  }\n};\nconst onPressed$1 = () => {\n  switch (p.key) {\n    case \"w\":\n      up = true;\n      break;\n    case \"a\":\n      left = true;\n      break;\n    case \"s\":\n      down = true;\n      break;\n    case \"d\":\n      right = true;\n      break;\n  }\n  switch (p.keyCode) {\n    case 38:\n      up = true;\n      break;\n    case 37:\n      left = true;\n      break;\n    case 40:\n      down = true;\n      break;\n    case 39:\n      right = true;\n      break;\n  }\n  update();\n};\nconst onReleased$1 = () => {\n  switch (p.key) {\n    case \"w\":\n      up = false;\n      break;\n    case \"a\":\n      left = false;\n      break;\n    case \"s\":\n      down = false;\n      break;\n    case \"d\":\n      right = false;\n      break;\n  }\n  switch (p.keyCode) {\n    case 38:\n      up = false;\n      break;\n    case 37:\n      left = false;\n      break;\n    case 40:\n      down = false;\n      break;\n    case 39:\n      right = false;\n      break;\n  }\n  update();\n};\n\nconst moveKeys = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  get horizontalMove() {\n    return horizontalMove;\n  },\n  get verticalMove() {\n    return verticalMove;\n  },\n  unitVector: unitVector,\n  get up() {\n    return up;\n  },\n  get left() {\n    return left;\n  },\n  get down() {\n    return down;\n  },\n  get right() {\n    return right;\n  },\n  onPressed: onPressed$1,\n  onReleased: onReleased$1\n});\n\nlet paused = false;\n/**\n * Pauses the sketch by `p.noLoop()`.\n * If already paused, resumes by `p.loop()`.\n */\nconst pauseOrResume = () => {\n  if (paused) {\n    p.loop();\n    paused = false;\n  } else {\n    p.noLoop();\n    paused = true;\n  }\n};\n\n/**\n * A list of functions that will be called in `p.setup()` just after creating canvas in `startSketch()`.\n */\nconst onSetup = [];\n\n/**\n * Runs `p.createCanvas()` with the scaled size that fits to `node`.\n * Returns a `ScaledCanvas` instance, which includes the created canvas and the scale factor.\n *\n * @param node The HTML element or its ID.\n * @param logicalSize\n * @param fittingOption No scaling if `null`.\n * @param renderer\n * @return A `ScaledCanvas` instance.\n */\nconst createScaledCanvas = (node, logicalSize, fittingOption, renderer) => {\n  const maxCanvasSize = HtmlUtility.getElementSize(\n    typeof node === \"string\" ? HtmlUtility.getElementOrBody(node) : node\n  );\n  const scaleFactor =\n    fittingOption !== null\n      ? FitBox.calculateScaleFactor(logicalSize, maxCanvasSize, fittingOption)\n      : 1;\n  const p5Canvas = p.createCanvas(\n    scaleFactor * logicalSize.width,\n    scaleFactor * logicalSize.height,\n    renderer\n  );\n  const drawScaledFunction =\n    scaleFactor !== 1\n      ? drawCallback => drawScaled(drawCallback, scaleFactor)\n      : drawCallback => drawCallback();\n  return {\n    p5Canvas,\n    scaleFactor,\n    logicalSize,\n    logicalRegion: RectangleRegion.create(Vector2D.zero, logicalSize),\n    drawScaled: drawScaledFunction,\n    logicalCenterPosition: {\n      x: logicalSize.width / 2,\n      y: logicalSize.height / 2\n    }\n  };\n};\n\n/**\n * Calls `new p5()` with the given settings information.\n * @param settings\n */\nconst startSketch = settings => {\n  const htmlElement =\n    typeof settings.htmlElement === \"string\"\n      ? HtmlUtility.getElementOrBody(settings.htmlElement)\n      : settings.htmlElement;\n  new p5(p => {\n    setP5Instance(p);\n    p.setup = () => {\n      setCanvas(\n        createScaledCanvas(\n          htmlElement,\n          settings.logicalCanvasSize,\n          settings.fittingOption\n        )\n      );\n      ArrayUtility.loop(onSetup, listener => listener(p));\n      onSetup.length = 0;\n      settings.initialize();\n    };\n    settings.setP5Methods(p);\n  }, htmlElement);\n};\n\nexport {\n  alphaColor as AlphaColor,\n  keyboard as KeyBoard,\n  mouse as Mouse,\n  moveKeys as MoveKeys,\n  shapeColor as ShapeColor,\n  applyShake,\n  arcAtOrigin,\n  canvas,\n  circleAtOrigin,\n  circularArcAtOrigin,\n  colorWithAlpha,\n  createPixels,\n  createScaledCanvas,\n  drawBezierControlLines,\n  drawBezierCurve,\n  drawRotated,\n  drawScaled,\n  drawTransformed,\n  drawTranslated,\n  drawTranslatedAndRotated,\n  graphicsToImage,\n  line,\n  lineAtOrigin,\n  lineWithMargin,\n  onSetup,\n  p,\n  parseColor,\n  parseFill,\n  parseStroke,\n  pauseOrResume,\n  replaceCanvasPixels,\n  reverseColor,\n  setCanvas,\n  setP5Instance,\n  setShake,\n  startSketch\n};\n","/**\n * creative-coding-core\n *\n * Utility library that might be useful for creative coding.\n * GitHub repository: {@link https://github.com/fal-works/creative-coding-core}\n *\n * @module creative-coding-core\n * @copyright 2019 FAL\n * @author FAL <contact@fal-works.com>\n * @license MIT\n * @version 0.1.9\n */\n\n/**\n * Runs `callback` once for each element of `array` from index `start` up to (but not including) `end`.\n * Unlike `Array.prototype.forEach()`, an element of `array` should not be removed during the iteration.\n * @param array\n * @param callback\n */\nconst loopRange = (array, callback, start, end) => {\n  for (let i = start; i < end; i += 1) callback(array[i], i, array);\n};\n/**\n * Runs `callback` once for each element of `array`.\n * Unlike `Array.prototype.forEach()`, an element of `array` should not be removed during the iteration.\n * @param array\n * @param callback\n */\nconst loop = (array, callback) => loopRange(array, callback, 0, array.length);\n/**\n * Runs `callback` once for each element of `array` from index `start` up to (but not including) `end` in descending order.\n * @param array\n * @param callback\n */\nconst loopRangeBackwards = (array, callback, start, end) => {\n  let index = end;\n  while (index > start) {\n    --index;\n    callback(array[index], index, array);\n  }\n};\n/**\n * Runs `callback` once for each element of `array` in descending order.\n * @param array\n * @param callback\n */\nconst loopBackwards = (array, callback) =>\n  loopRangeBackwards(array, callback, 0, array.length);\n/**\n * Joins two arrays within the specified range and runs `callback` once for each joined pair.\n * You should not remove elements from arrays during the iteration.\n * @param arrayA\n * @param arrayB\n * @param callback\n * @param endA\n * @param endB\n */\nconst nestedLoopJoinWithRange = (\n  arrayA,\n  arrayB,\n  callback,\n  startA,\n  endA,\n  startB,\n  endB\n) => {\n  for (let i = startA; i < endA; i += 1) {\n    for (let k = startB; k < endB; k += 1) callback(arrayA[i], arrayB[k]);\n  }\n};\n/**\n * Joins two arrays and runs `callback` once for each joined pair.\n * You should not remove elements from arrays during the iteration.\n * @param arrayA\n * @param arrayB\n * @param callback\n */\nconst nestedLoopJoin = (arrayA, arrayB, callback) =>\n  nestedLoopJoinWithRange(\n    arrayA,\n    arrayB,\n    callback,\n    0,\n    arrayA.length,\n    0,\n    arrayB.length\n  );\n/**\n * Runs `callback` once for each pair within `array` from index `start` up to (but not including) `end`.\n * @param array\n * @param callback\n */\nconst roundRobinWithRange = (array, callback, start, end) => {\n  const iLen = end - 1;\n  for (let i = start; i < iLen; i += 1) {\n    for (let k = i + 1; k < end; k += 1) callback(array[i], array[k]);\n  }\n};\n/**\n * Runs `callback` once for each pair within `array`.\n * @param array\n * @param callback\n */\nconst roundRobin = (array, callback) =>\n  roundRobinWithRange(array, callback, 0, array.length);\n/**\n * Creates a new 1-dimensional array by concatenating sub-array elements of a 2-dimensional array.\n * @param arrays\n * @return A new 1-dimensional array.\n */\nconst flatNaive = arrays => [].concat(...arrays);\n/**\n * An alternative to `Array.prototype.flat()`.\n * @param array\n * @param depth\n * @return A new array.\n */\nconst flatRecursive = (array, depth = 1) =>\n  depth > 0\n    ? array.reduce(\n        (acc, cur) =>\n          acc.concat(Array.isArray(cur) ? flatRecursive(cur, depth - 1) : cur),\n        []\n      )\n    : array;\n/**\n * Fills `array` by running `factory` and assigning the result for each index of `array`.\n * @param array\n * @param factory A function that returns a new element for assigning to `array`.\n * @param length The length to populate. Default value is `array.length`.\n * @return Filled `array`.\n */\nconst populate = (array, factory, length) => {\n  const len = length || array.length;\n  for (let i = 0; i < len; i += 1) array[i] = factory(i);\n  return array;\n};\n/**\n * Creates a new array filled by running `factory` for each index and assigning the result.\n * @param factory\n * @param length\n * @return A new populated array.\n */\nconst createPopulated = (factory, length) =>\n  populate(new Array(length), factory);\n\nconst arrayUtility = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  loopRange: loopRange,\n  loop: loop,\n  loopRangeBackwards: loopRangeBackwards,\n  loopBackwards: loopBackwards,\n  nestedLoopJoinWithRange: nestedLoopJoinWithRange,\n  nestedLoopJoin: nestedLoopJoin,\n  roundRobinWithRange: roundRobinWithRange,\n  roundRobin: roundRobin,\n  flatNaive: flatNaive,\n  flatRecursive: flatRecursive,\n  populate: populate,\n  createPopulated: createPopulated\n});\n\n/**\n * Creates an array-list unit.\n * @param initialCapacity\n */\nconst create = initialCapacity => {\n  return {\n    array: new Array(initialCapacity),\n    size: 0\n  };\n};\n/**\n * Creates an array-list unit filled with `value`.\n * @param size\n * @param value\n */\nconst createFilled = (size, value) => {\n  return {\n    array: new Array(size).fill(value),\n    size\n  };\n};\n/**\n * Creates an array-list unit, filled by running `factory` and assignint the result for each index.\n * @param size\n * @param factory\n */\nconst createPopulated$1 = (size, factory) => {\n  return {\n    array: populate(new Array(size), factory),\n    size\n  };\n};\n/**\n * Creates an array-list unit by reusing the reference to `array`.\n * The `size` of the array-list will be `array.length`.\n * Be sure that `array` is filled with valid elements.\n *\n * @param array\n * @return A new array-list unit.\n */\nconst fromArray = array => {\n  return {\n    array,\n    size: array.length\n  };\n};\nconst add = (arrayList, element) => {\n  arrayList.array[arrayList.size] = element;\n  arrayList.size += 1;\n};\nconst push = add;\nconst pop = arrayList => {\n  const lastIndex = arrayList.size - 1;\n  const removedElement = arrayList.array[lastIndex];\n  arrayList.size = lastIndex;\n  return removedElement;\n};\n/**\n * Clears the contents of `arrayList`.\n * This just sets `size` to `0` and does not nullify references.\n * @param arrayList\n */\nconst clear = arrayList => {\n  arrayList.size = 0;\n};\n/**\n * Nullifies the slots that are not used.\n * @param arrayList\n */\nconst cleanUnusedSlots = arrayList => {\n  const { array, size } = arrayList;\n  const capacity = array.length;\n  array.length = size;\n  array.length = capacity;\n};\n/**\n * Clears the contents of `arrayList` and also nullifies all references.\n * @param arrayList\n */\nconst clearReference = arrayList => {\n  arrayList.size = 0;\n  cleanUnusedSlots(arrayList);\n};\n/**\n * Runs `callback` for each element of `arrayList`.\n * @param arrayList\n * @param callback\n */\nconst loop$1 = (arrayList, callback) =>\n  loopRange(arrayList.array, callback, 0, arrayList.size);\n/**\n * Runs `callback` for each element of `arrayList` in descending order.\n * @param arrayList\n * @param callback\n */\nconst loopBackwards$1 = (arrayList, callback) =>\n  loopRangeBackwards(arrayList.array, callback, 0, arrayList.size);\n/**\n * Finds the first element where `predicate` returns true.\n * @param arrayList\n * @param predicate Function that returns `true` if a given value matches the condition.\n * @return The found `element`. `undefined` if not found.\n */\nconst find = (arrayList, predicate) => {\n  const { array, size } = arrayList;\n  for (let i = 0; i < size; i += 1) {\n    if (predicate(array[i], i, array)) return array[i];\n  }\n  return undefined;\n};\n/**\n * Finds `element` in `arrayList`.\n * @param arrayList\n * @param element\n * @return The index of `element`. `-1` if not found.\n */\nconst findIndex = (arrayList, element) => {\n  const { array, size } = arrayList;\n  for (let i = 0; i < size; i += 1) {\n    if (array[i] === element) return i;\n  }\n  return -1;\n};\n/**\n * Removes the element at `index`.\n * All subsequent elements will be shifted to the previous index.\n * @param arrayList\n * @param index\n * @return The removed element.\n */\nconst removeShift = (arrayList, index) => {\n  const { array, size } = arrayList;\n  const removedElement = array[index];\n  array.copyWithin(index, index + 1, size);\n  arrayList.size = size - 1;\n  return removedElement;\n};\n/**\n * Removes `element`.\n * All subsequent elements will be shifted to the previous index.\n * @param arrayList\n * @param element\n * @return The removed element, or `null` if not found.\n */\nconst removeShiftElement = (arrayList, element) => {\n  const index = findIndex(arrayList, element);\n  if (index >= 0) return removeShift(arrayList, index);\n  return null;\n};\n/**\n * Removes the element at `index` by moving the last element to `index` and overwriting the existing value.\n * Faster than `removeShift()` and may be useful if you do not need to preserve order of elements.\n *\n * @param arrayList\n * @param index\n * @return The removed element.\n */\nconst removeSwap = (arrayList, index) => {\n  const array = arrayList.array;\n  const removedElement = array[index];\n  const lastIndex = arrayList.size - 1;\n  array[index] = array[lastIndex];\n  arrayList.size = lastIndex;\n  return removedElement;\n};\n/**\n * Removes `element` by replacing it with the last element.\n * @param arrayList\n * @param element\n * @return The removed element, or `null` if not found.\n */\nconst removeSwapElement = (arrayList, element) => {\n  const index = findIndex(arrayList, element);\n  if (index >= 0) return removeSwap(arrayList, index);\n  return null;\n};\n/**\n * Runs `predicate` for each element and removes the element if `predicate` returns `true`.\n * This does not use `removeShift()` internally.\n *\n * Note: Do not add elements within this loop.\n *\n * @param arrayList\n * @param predicate\n * @return `true` if any element has been removed.\n */\nconst removeShiftAll = (arrayList, predicate) => {\n  const { array, size } = arrayList;\n  let writeIndex = 0;\n  let found = false;\n  for (let readIndex = 0; readIndex < size; readIndex += 1) {\n    const value = array[readIndex];\n    if (predicate(value, readIndex, array)) {\n      found = true;\n      continue;\n    }\n    array[writeIndex] = value;\n    writeIndex += 1;\n  }\n  arrayList.size = writeIndex;\n  return found;\n};\n/**\n * Run `removeSwap()` for all indices of element where `predicate` returns true.\n * @param arrayList\n * @param predicate\n * @return `true` if any element has been removed.\n */\nconst removeSwapAll = (arrayList, predicate) => {\n  let found = false;\n  const array = arrayList.array;\n  for (let i = 0; i < arrayList.size; i += 1) {\n    if (predicate(array[i], i, array)) {\n      removeSwap(arrayList, i);\n      found = true;\n    }\n  }\n  return found;\n};\n/**\n * Fills the entire `arrayList` by running `factory` and assigning result for each index.\n * @param arrayList\n * @param factory\n */\nconst populate$1 = (arrayList, factory) => {\n  populate(arrayList.array, factory);\n  arrayList.size = arrayList.array.length;\n  return arrayList;\n};\n/**\n * Joins two arrayLists and runs `callback` once for each joined pair.\n * You should not remove elements from arrayLists during the iteration.\n * @param arrayListA\n * @param arrayListB\n * @param callback\n */\nconst nestedLoopJoin$1 = (arrayListA, arrayListB, callback) =>\n  nestedLoopJoinWithRange(\n    arrayListA.array,\n    arrayListB.array,\n    callback,\n    0,\n    arrayListA.size,\n    0,\n    arrayListB.size\n  );\n/**\n * Runs `callback` once for each pair within `arrayList`.\n * @param arrayList\n * @param callback\n */\nconst roundRobin$1 = (arrayList, callback) =>\n  roundRobinWithRange(arrayList.array, callback, 0, arrayList.size);\n\nconst arrayList = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create,\n  createFilled: createFilled,\n  createPopulated: createPopulated$1,\n  fromArray: fromArray,\n  add: add,\n  push: push,\n  pop: pop,\n  clear: clear,\n  cleanUnusedSlots: cleanUnusedSlots,\n  clearReference: clearReference,\n  loop: loop$1,\n  loopBackwards: loopBackwards$1,\n  find: find,\n  findIndex: findIndex,\n  removeShift: removeShift,\n  removeShiftElement: removeShiftElement,\n  removeSwap: removeSwap,\n  removeSwapElement: removeSwapElement,\n  removeShiftAll: removeShiftAll,\n  removeSwapAll: removeSwapAll,\n  populate: populate$1,\n  nestedLoopJoin: nestedLoopJoin$1,\n  roundRobin: roundRobin$1\n});\n\nconst create$1 = factory => {\n  return {\n    value: undefined,\n    factory\n  };\n};\nconst get = object => object.value || (object.value = object.factory());\nconst clear$1 = object => {\n  object.value = undefined;\n};\n\nconst lazy = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$1,\n  get: get,\n  clear: clear$1\n});\n\nconst from = (prototypeStructure, length) => {\n  const data = {};\n  for (const key of Object.keys(prototypeStructure))\n    data[key] = new Array(length).fill(prototypeStructure[key]);\n  return {\n    data,\n    length\n  };\n};\n\nconst structureOfArrays = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  from: from\n});\n\nconst {\n  abs,\n  acos,\n  asin,\n  atan,\n  atan2,\n  ceil,\n  cos,\n  exp,\n  floor,\n  log,\n  max,\n  min,\n  pow,\n  round,\n  sin,\n  sqrt,\n  tan,\n  clz32,\n  imul,\n  sign,\n  log10,\n  log2,\n  log1p,\n  expm1,\n  cosh,\n  sinh,\n  tanh,\n  acosh,\n  asinh,\n  atanh,\n  hypot,\n  trunc,\n  fround,\n  cbrt\n} = Math;\n/**\n * Same as `Math.sqrt`.\n * @return √x\n */\nconst squareRoot = sqrt;\n/**\n * Same as `Math.clz32`.\n */\nconst leadingZeros32 = clz32;\n/**\n * Same as `Math.imul`.\n */\nconst multInt = imul;\n/**\n * Same as `Math.hypot`.\n */\nconst hypotenuse = hypot;\n/**\n * Same as `Math.trunc`.\n */\nconst integerPart = trunc;\n/**\n * Same as `Math.fround`.\n */\nconst floatRound = fround;\n/**\n * Same as `Math.cbrt`.\n * @return ∛x\n */\nconst cubeRoot = cbrt;\nconst square = v => v * v;\nconst cube = v => v * v * v;\nconst pow4 = v => square(v * v);\nconst pow5 = v => square(v * v) * v;\nconst squareInt = v => imul(v, v);\nconst cubeInt = v => imul(imul(v, v), v);\n/**\n * Checks whether `a` and `b` are considered equal.\n * @param a\n * @param b\n * @return `true` if the absolute difference of `a` and `b` is smaller than `Number.EPSILON`.\n */\nconst equal = (a, b) => abs(a - b) < 2.220446049250313e-16;\n/**\n * Similar to `Math.min` but accepts only two arguments.\n * @param a\n * @param b\n * @return The smaller of `a` or `b`.\n */\nconst min2 = (a, b) => (a < b ? a : b);\n/**\n * Similar to `Math.max` but accepts only two arguments.\n * @param a\n * @param b\n * @return The larger of `a` or `b`.\n */\nconst max2 = (a, b) => (a > b ? a : b);\n/**\n * Safe version of `Math.atan2`;\n * @param y\n * @param x\n * @return The angle from x-axis to the point. `0` if both `x` and `y` are `0`.\n */\nconst atan2safe = (y, x) => (y !== 0 || x !== 0 ? atan2(y, x) : 0);\n/**\n * Calculates the sum of squares of `x` and `y`.\n * @param x\n * @param y\n * @return `x^2 + y^2`.\n */\nconst hypotenuseSquared2D = (x, y) => x * x + y * y;\n/**\n * A 2D version of `Math.hypot`. Calculates the square root of the sum of squares of `x` and `y`.\n * @param x\n * @param y\n * @return `√(x^2 + y^2)`.\n */\nconst hypotenuse2D = (x, y) => sqrt(x * x + y * y);\n/**\n * Linearly interpolates between `start` and `end` by `ratio`.\n * The result will not be clamped.\n * @param start\n * @param end\n * @param ratio\n * @return Interpolated value, e.g. `start` if `ratio == 0`, `end` if `ratio == 1`.\n */\nconst lerp = (start, end, ratio) => start + ratio * (end - start);\n/**\n * Clamps `value` between `min` and `max`.\n * @param value\n * @param min\n * @param max\n * @return Clamped value equal or greater than `min` and equal or less than `max`.\n */\nconst clamp = (value, min, max) =>\n  value < min ? min : value > max ? max : value;\n\nconst numeric = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  abs: abs,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  ceil: ceil,\n  cos: cos,\n  exp: exp,\n  floor: floor,\n  log: log,\n  max: max,\n  min: min,\n  pow: pow,\n  round: round,\n  sin: sin,\n  sqrt: sqrt,\n  tan: tan,\n  clz32: clz32,\n  imul: imul,\n  sign: sign,\n  log10: log10,\n  log2: log2,\n  log1p: log1p,\n  expm1: expm1,\n  cosh: cosh,\n  sinh: sinh,\n  tanh: tanh,\n  acosh: acosh,\n  asinh: asinh,\n  atanh: atanh,\n  hypot: hypot,\n  trunc: trunc,\n  fround: fround,\n  cbrt: cbrt,\n  squareRoot: squareRoot,\n  leadingZeros32: leadingZeros32,\n  multInt: multInt,\n  hypotenuse: hypotenuse,\n  integerPart: integerPart,\n  floatRound: floatRound,\n  cubeRoot: cubeRoot,\n  square: square,\n  cube: cube,\n  pow4: pow4,\n  pow5: pow5,\n  squareInt: squareInt,\n  cubeInt: cubeInt,\n  equal: equal,\n  min2: min2,\n  max2: max2,\n  atan2safe: atan2safe,\n  hypotenuseSquared2D: hypotenuseSquared2D,\n  hypotenuse2D: hypotenuse2D,\n  lerp: lerp,\n  clamp: clamp\n});\n\nconst { E, LN10, LN2, LOG2E, LOG10E } = Math;\nconst ONE_HALF = 1 / 2;\nconst ONE_THIRD = 1 / 3;\nconst TWO_THIRDS = 2 / 3;\nconst ONE_QUARTER = 1 / 4;\nconst TWO_QUARTERS = ONE_HALF;\nconst THREE_QUARTERS = 3 / 4;\nconst INVERSE30 = 1 / 30;\nconst INVERSE60 = 1 / 60;\nconst INVERSE255 = 1 / 255;\n/**\n * √2\n */\nconst SQUARE_ROOT_TWO = Math.SQRT2;\n/**\n * √(1 / 2) = 1 / √2 = √2 / 2\n */\nconst SQUARE_ROOT_ONE_HALF = Math.SQRT1_2;\n/**\n * √3\n */\nconst SQUARE_ROOT_THREE = Math.sqrt(3);\n/**\n * 1 / √2 = √(1 / 2) = √2 / 2\n */\nconst ONE_OVER_SQUARE_ROOT_TWO = SQUARE_ROOT_ONE_HALF;\n/**\n * 2 / √2 = √2\n */\nconst TWO_OVER_SQUARE_ROOT_TWO = SQUARE_ROOT_TWO;\n/**\n * 1 / √3\n */\nconst ONE_OVER_SQUARE_ROOT_THREE = 1 / SQUARE_ROOT_THREE;\n/**\n * 2 / √3\n */\nconst TWO_OVER_SQUARE_ROOT_THREE = 2 / SQUARE_ROOT_THREE;\n/**\n * √3 / 2\n */\nconst SQUARE_ROOT_THREE_OVER_TWO = SQUARE_ROOT_THREE / 2;\n/**\n * √2 / 2 = √(1 / 2) = 1 / √2\n */\nconst SQUARE_ROOT_TWO_OVER_TWO = SQUARE_ROOT_ONE_HALF;\n\nconst constants = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  E: E,\n  LN10: LN10,\n  LN2: LN2,\n  LOG2E: LOG2E,\n  LOG10E: LOG10E,\n  ONE_HALF: ONE_HALF,\n  ONE_THIRD: ONE_THIRD,\n  TWO_THIRDS: TWO_THIRDS,\n  ONE_QUARTER: ONE_QUARTER,\n  TWO_QUARTERS: TWO_QUARTERS,\n  THREE_QUARTERS: THREE_QUARTERS,\n  INVERSE30: INVERSE30,\n  INVERSE60: INVERSE60,\n  INVERSE255: INVERSE255,\n  SQUARE_ROOT_TWO: SQUARE_ROOT_TWO,\n  SQUARE_ROOT_ONE_HALF: SQUARE_ROOT_ONE_HALF,\n  SQUARE_ROOT_THREE: SQUARE_ROOT_THREE,\n  ONE_OVER_SQUARE_ROOT_TWO: ONE_OVER_SQUARE_ROOT_TWO,\n  TWO_OVER_SQUARE_ROOT_TWO: TWO_OVER_SQUARE_ROOT_TWO,\n  ONE_OVER_SQUARE_ROOT_THREE: ONE_OVER_SQUARE_ROOT_THREE,\n  TWO_OVER_SQUARE_ROOT_THREE: TWO_OVER_SQUARE_ROOT_THREE,\n  SQUARE_ROOT_THREE_OVER_TWO: SQUARE_ROOT_THREE_OVER_TWO,\n  SQUARE_ROOT_TWO_OVER_TWO: SQUARE_ROOT_TWO_OVER_TWO\n});\n\nconst PI = Math.PI;\nconst TWO_PI = 2 * PI;\nconst HALF_PI = PI / 2;\nconst THIRD_PI = PI / 3;\nconst QUARTER_PI = PI / 4;\nconst THREE_QUARTERS_PI = 3 * QUARTER_PI;\nconst SIN30 = ONE_HALF;\nconst SIN45 = ONE_OVER_SQUARE_ROOT_TWO;\nconst SIN60 = SQUARE_ROOT_THREE_OVER_TWO;\nconst COS30 = SIN60;\nconst COS45 = SIN45;\nconst COS60 = SIN30;\nconst DEGREES_TO_RADIANS = TWO_PI / 360;\nconst RADIANS_TO_DEGREES = 360 / TWO_PI;\nconst createArray = resolution => {\n  const array = new Array(resolution);\n  const interval = TWO_PI / resolution;\n  for (let i = 0; i < resolution; i += 1) array[i] = i * interval;\n  return array;\n};\nconst fromDegrees = degrees => DEGREES_TO_RADIANS * degrees;\nconst toDegrees = radians => RADIANS_TO_DEGREES * radians;\n/**\n * Calculates the angle in radians from origin to `position`.\n * @param position\n * @return The angle. `0` if `position` is a zero vector.\n */\nconst fromOrigin = position => {\n  const { x, y } = position;\n  return x !== 0 || y !== 0 ? atan2(position.y, position.x) : 0;\n};\n/**\n * Calculates the angle in radians between two points.\n * @param from\n * @param to\n * @return The angle. `0` if both points are the same.\n */\nconst betweenPoints = (from, to) => {\n  const dx = to.x - from.x;\n  const dy = to.y - from.y;\n  return dx !== 0 || dy !== 0 ? atan2(dy, dx) : 0;\n};\n/**\n * Calculates the angle in radians between two points.\n * @return The angle. `0` if both points are the same.\n */\nconst betweenCoordinates = (x1, y1, x2, y2) =>\n  x1 !== x2 || y1 !== y2 ? atan2(x2 - x1, y2 - y1) : 0;\n\nconst angle = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  PI: PI,\n  TWO_PI: TWO_PI,\n  HALF_PI: HALF_PI,\n  THIRD_PI: THIRD_PI,\n  QUARTER_PI: QUARTER_PI,\n  THREE_QUARTERS_PI: THREE_QUARTERS_PI,\n  SIN30: SIN30,\n  SIN45: SIN45,\n  SIN60: SIN60,\n  COS30: COS30,\n  COS45: COS45,\n  COS60: COS60,\n  DEGREES_TO_RADIANS: DEGREES_TO_RADIANS,\n  RADIANS_TO_DEGREES: RADIANS_TO_DEGREES,\n  createArray: createArray,\n  fromDegrees: fromDegrees,\n  toDegrees: toDegrees,\n  fromOrigin: fromOrigin,\n  betweenPoints: betweenPoints,\n  betweenCoordinates: betweenCoordinates\n});\n\nconst create$2 = (topLeftPosition, size) => {\n  return {\n    topLeft: topLeftPosition,\n    rightBottom: {\n      x: topLeftPosition.x + size.width,\n      y: topLeftPosition.y + size.height\n    }\n  };\n};\n/**\n * Checks if `region` contains `point`.\n * @param region\n * @param point\n * @param margin\n * @return `true` if contained.\n */\nconst containsPoint = (region, point, margin) => {\n  const { topLeft, rightBottom } = region;\n  const { x, y } = point;\n  return (\n    x >= topLeft.x + margin &&\n    y >= topLeft.y + margin &&\n    x < rightBottom.x - margin &&\n    y < rightBottom.y - margin\n  );\n};\nconst getWidth = region => region.rightBottom.x - region.topLeft.x;\nconst getHeight = region => region.rightBottom.y - region.topLeft.y;\nconst getSize = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    width: rightBottom.x - topLeft.x,\n    height: rightBottom.y - topLeft.y\n  };\n};\nconst getCenterPoint = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    x: (topLeft.x + rightBottom.x) / 2,\n    y: (topLeft.y + rightBottom.y) / 2\n  };\n};\n/**\n * Creates a new `RectangleRegion` by scaling `region` with `scaleFactor`.\n * @param region\n * @param scaleFactor\n * @param originType\n * @return A new scaled `RectangleRegion` unit.\n */\nconst createScaled = (region, scaleFactor, originType) => {\n  const { topLeft, rightBottom } = region;\n  switch (originType) {\n    case 0:\n      return {\n        topLeft,\n        rightBottom: {\n          x: lerp(topLeft.x, rightBottom.x, scaleFactor),\n          y: lerp(topLeft.y, rightBottom.y, scaleFactor)\n        }\n      };\n    case 1: {\n      const center = getCenterPoint(region);\n      const size = getSize(region);\n      const halfWidth = size.width / 2;\n      const halfHeight = size.height / 2;\n      return {\n        topLeft: {\n          x: center.x - halfWidth,\n          y: center.y - halfHeight\n        },\n        rightBottom: {\n          x: center.x + halfWidth,\n          y: center.y + halfHeight\n        }\n      };\n    }\n  }\n};\n\nconst rectangleRegion = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$2,\n  containsPoint: containsPoint,\n  getWidth: getWidth,\n  getHeight: getHeight,\n  getSize: getSize,\n  getCenterPoint: getCenterPoint,\n  createScaled: createScaled\n});\n\n/**\n * Calculates the aspect ratio i.e. `width / height`.\n * @param size\n */\nconst getAspectRatio = size => size.width / size.height;\n/**\n * Calculates the area i.e. `width * height`.\n * @param size\n */\nconst getArea = size => size.width * size.height;\n\nconst rectangleSize = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  getAspectRatio: getAspectRatio,\n  getArea: getArea\n});\n\n/**\n * Zero vector.\n */\nconst zero = {\n  x: 0,\n  y: 0\n};\n/**\n * Checks if a given vector is completely zero.\n * @param v\n * @return `true` if zero.\n */\nconst isZero = v => v.x === 0 && v.y === 0;\n/**\n * Creates a new vector from polar coordinates `angle` and `length`.\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst fromPolar = (length, angle) => {\n  return {\n    x: length * cos(angle),\n    y: length * sin(angle)\n  };\n};\n/**\n * Creates a new vector by adding two vectors.\n * @param a\n * @param b\n * @return new `Vector2D`.\n */\nconst add$1 = (a, b) => {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n};\n/**\n * Creates a new vector by adding cartesian coordinates.\n * @param vector\n * @param x\n * @param y\n * @return new `Vector2D`.\n */\nconst addCartesian = (vector, x, y) => {\n  return {\n    x: vector.x + x,\n    y: vector.y + y\n  };\n};\n/**\n * Creates a new vector by adding polar coordinates.\n * @param vector\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst addPolar = (vector, length, angle) => {\n  return {\n    x: vector.x + length * cos(angle),\n    y: vector.y + length * sin(angle)\n  };\n};\n/**\n * Creates a new vector by subtracting `b` from `a`.\n * @param a\n * @param b\n * @return new `Vector2D`.\n */\nconst subtract = (a, b) => {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n};\n/**\n * Creates a new vector by subtracting cartesian coordinates.\n * @param vector\n * @param x\n * @param y\n * @return new `Vector2D`.\n */\nconst subtractCartesian = (vector, x, y) => {\n  return {\n    x: vector.x - x,\n    y: vector.y - y\n  };\n};\n/**\n * Creates a new vector by subtracting polar coordinates.\n * @param vector\n * @param length\n * @param angle\n * @return new `Vector2D`.\n */\nconst subtractPolar = (vector, length, angle) => {\n  return {\n    x: vector.x - length * cos(angle),\n    y: vector.y - length * sin(angle)\n  };\n};\n/**\n * Creates a new vector with multiplied values.\n * @param vector\n * @param multiplier\n * @return new `Vector2D`.\n */\nconst multiply = (vector, multiplier) => {\n  return {\n    x: vector.x * multiplier,\n    y: vector.y * multiplier\n  };\n};\n/**\n * Creates a new vector with divided values.\n * @param vector\n * @param multiplier\n * @return new `Vector2D`.\n */\nconst divide = (vector, divisor) => {\n  return {\n    x: vector.x / divisor,\n    y: vector.y / divisor\n  };\n};\n/**\n * Calculates square of distance between `vectorA` and `vectorB`.\n * @param vectorA\n * @param vectorB\n * @return Square of distance.\n */\nconst distanceSquared = (vectorA, vectorB) =>\n  hypotenuseSquared2D(vectorB.x - vectorA.x, vectorB.y - vectorA.y);\n/**\n * Calculates distance between `vectorA` and `vectorB`.\n * @param vectorA\n * @param vectorB\n * @return Distance.\n */\nconst distance = (vectorA, vectorB) =>\n  hypotenuse2D(vectorB.x - vectorA.x, vectorB.y - vectorA.y);\n/**\n * Returns string e.g. `{x:0,y:0}`\n * @param vector\n * @return String expression.\n */\nconst toStr = vector => `{x:${vector.x},y:${vector.y}}`;\n/**\n * Creates a new vector with same values.\n * @param vector\n */\nconst copy = vector => {\n  return {\n    x: vector.x,\n    y: vector.y\n  };\n};\n/**\n * Calculates squared length of `vector`.\n * @param vector\n * @return The squared length.\n */\nconst lengthSquared = vector => hypotenuseSquared2D(vector.x, vector.y);\n/**\n * Calculates length of `vector`.\n * @param vector\n * @return The length.\n */\nconst length = vector => hypotenuse2D(vector.x, vector.y);\n/**\n * Calculates angle of `vector` in radians.\n * @param vector\n * @return The angle. `0` if `vector` is a zero vector.\n */\nconst angle$1 = vector => {\n  const { x, y } = vector;\n  return x !== 0 || y !== 0 ? atan2(vector.y, vector.x) : 0;\n};\n\nconst add$2 = (vector, otherVector) => {\n  vector.x += otherVector.x;\n  vector.y += otherVector.y;\n  return vector;\n};\nconst addCartesian$1 = (vector, x, y) => {\n  vector.x += x;\n  vector.y += y;\n  return vector;\n};\nconst addPolar$1 = (vector, length, angle) => {\n  vector.x += length * cos(angle);\n  vector.y += length * sin(angle);\n  return vector;\n};\nconst subtract$1 = (vector, otherVector) => {\n  vector.x -= otherVector.x;\n  vector.y -= otherVector.y;\n  return vector;\n};\nconst subtractCartesian$1 = (vector, x, y) => {\n  vector.x -= x;\n  vector.y -= y;\n  return vector;\n};\nconst subtractPolar$1 = (vector, length, angle) => {\n  vector.x -= length * cos(angle);\n  vector.y -= length * sin(angle);\n  return vector;\n};\nconst set = (vector, sourceVector) => {\n  vector.x = sourceVector.x;\n  vector.y = sourceVector.y;\n  return vector;\n};\nconst setCartesian = (vector, x, y) => {\n  vector.x = x;\n  vector.y = y;\n  return vector;\n};\nconst setPolar = (vector, length, angle) => {\n  vector.x = length * cos(angle);\n  vector.y = length * sin(angle);\n  return vector;\n};\nconst multiply$1 = (vector, multiplier) => {\n  vector.x *= multiplier;\n  vector.y *= multiplier;\n  return vector;\n};\nconst divide$1 = (vector, divisor) => {\n  vector.x /= divisor;\n  vector.y /= divisor;\n  return vector;\n};\n\nconst mutable = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  add: add$2,\n  addCartesian: addCartesian$1,\n  addPolar: addPolar$1,\n  subtract: subtract$1,\n  subtractCartesian: subtractCartesian$1,\n  subtractPolar: subtractPolar$1,\n  set: set,\n  setCartesian: setCartesian,\n  setPolar: setPolar,\n  multiply: multiply$1,\n  divide: divide$1\n});\n\nconst add$3 = (sourceA, sourceB, target) => {\n  target.x = sourceA.x + sourceB.x;\n  target.y = sourceA.y + sourceB.y;\n  return target;\n};\nconst addCartesian$2 = (source, x, y, target) => {\n  target.x = source.x + x;\n  target.y = source.y + y;\n  return target;\n};\nconst addPolar$2 = (source, length, angle, target) => {\n  target.x = source.x + length * cos(angle);\n  target.y = source.y + length * sin(angle);\n  return target;\n};\nconst subtract$2 = (sourceA, sourceB, target) => {\n  target.x = sourceA.x - sourceB.x;\n  target.y = sourceA.y - sourceB.y;\n  return target;\n};\nconst subtractCartesian$2 = (source, x, y, target) => {\n  target.x = source.x - x;\n  target.y = source.y - y;\n  return target;\n};\nconst subtractPolar$2 = (source, length, angle, target) => {\n  target.x = source.x - length * cos(angle);\n  target.y = source.y - length * sin(angle);\n  return target;\n};\nconst setCartesian$1 = (x, y, target) => {\n  target.x = x;\n  target.y = y;\n  return target;\n};\nconst setPolar$1 = (length, angle, target) => {\n  target.x = length * cos(angle);\n  target.y = length * sin(angle);\n  return target;\n};\nconst multiply$2 = (source, multiplier, target) => {\n  target.x = source.x * multiplier;\n  target.y = source.y * multiplier;\n  return target;\n};\nconst divide$2 = (source, divisor, target) => {\n  target.x = source.x / divisor;\n  target.y = source.y / divisor;\n  return target;\n};\n\nconst assign = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  add: add$3,\n  addCartesian: addCartesian$2,\n  addPolar: addPolar$2,\n  subtract: subtract$2,\n  subtractCartesian: subtractCartesian$2,\n  subtractPolar: subtractPolar$2,\n  setCartesian: setCartesian$1,\n  setPolar: setPolar$1,\n  multiply: multiply$2,\n  divide: divide$2\n});\n\nconst index = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Mutable: mutable,\n  Assign: assign,\n  zero: zero,\n  isZero: isZero,\n  fromPolar: fromPolar,\n  add: add$1,\n  addCartesian: addCartesian,\n  addPolar: addPolar,\n  subtract: subtract,\n  subtractCartesian: subtractCartesian,\n  subtractPolar: subtractPolar,\n  multiply: multiply,\n  divide: divide,\n  distanceSquared: distanceSquared,\n  distance: distance,\n  toStr: toStr,\n  copy: copy,\n  lengthSquared: lengthSquared,\n  length: length,\n  angle: angle$1\n});\n\nconst createCurve = vertexPropertyList => {\n  const paths = [];\n  const len = vertexPropertyList.length;\n  let previousVertex = vertexPropertyList[0];\n  let previousControlLine = previousVertex.controlLine;\n  for (let i = 1; i < len; i += 1) {\n    const currentVertex = vertexPropertyList[i];\n    const currentControlLine = currentVertex.controlLine;\n    paths.push({\n      controlPoint1: addPolar(\n        previousVertex.point,\n        0.5 * previousControlLine.length,\n        previousControlLine.angle\n      ),\n      controlPoint2: subtractPolar(\n        currentVertex.point,\n        0.5 * currentControlLine.length,\n        currentControlLine.angle\n      ),\n      targetPoint: currentVertex.point\n    });\n    previousVertex = currentVertex;\n    previousControlLine = currentControlLine;\n  }\n  return {\n    startPoint: vertexPropertyList[0].point,\n    paths\n  };\n};\n\nconst bezier = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createCurve: createCurve\n});\n\n/**\n * Creates an easing function that takes `start`, `end` and `ratio` as arguments.\n * @param easingFunction\n */\nconst bind = easingFunction => (start, end, ratio) =>\n  start + easingFunction(ratio) * (end - start);\n/**\n * Concatenates two easing functions without normalization.\n * @param easingFunctionA\n * @param easingFunctionB\n * @param thresholdRatio\n * @return New easing function.\n */\nconst concatenate = (\n  easingFunctionA,\n  easingFunctionB,\n  thresholdRatio = 0.5\n) => {\n  return ratio => {\n    if (ratio < thresholdRatio) return easingFunctionA(ratio / thresholdRatio);\n    else {\n      const ratioB = 1 - thresholdRatio;\n      return easingFunctionB((ratio - thresholdRatio) / ratioB);\n    }\n  };\n};\n/**\n * Integrates two easing functions.\n * Results of both functions will be normalized depending on `thresholdRatio`.\n * @param easingFunctionA\n * @param easingFunctionB\n * @param thresholdRatio\n * @return New easing function.\n */\nconst integrate = (easingFunctionA, easingFunctionB, thresholdRatio = 0.5) => {\n  return ratio => {\n    if (ratio < thresholdRatio)\n      return thresholdRatio * easingFunctionA(ratio / thresholdRatio);\n    else {\n      const ratioB = 1 - thresholdRatio;\n      return (\n        thresholdRatio +\n        ratioB * easingFunctionB((ratio - thresholdRatio) / ratioB)\n      );\n    }\n  };\n};\n/**\n * Linear easing function.\n * @param ratio\n */\nconst easeLinear = ratio => ratio;\n/**\n * easeInQuad.\n * @param ratio\n */\nconst easeInQuad = square;\n/**\n * easeOutQuad.\n * @param ratio\n */\nconst easeOutQuad = ratio => -square(ratio - 1) + 1;\n/**\n * easeInCubic.\n * @param ratio\n */\nconst easeInCubic = cube;\n/**\n * easeOutCubic.\n * @param ratio\n */\nconst easeOutCubic = ratio => cube(ratio - 1) + 1;\n/**\n * easeInQuart.\n * @param ratio\n */\nconst easeInQuart = pow4;\n/**\n * easeOutQuart.\n * @param ratio\n */\nconst easeOutQuart = ratio => -pow4(ratio - 1) + 1;\n/**\n * Creates an easeOutBack function.\n * @param ratio\n */\nconst createEaseOutBack = (coefficient = 1.70158) => ratio => {\n  const r = ratio - 1;\n  return (coefficient + 1) * cube(r) + coefficient * square(r) + 1;\n};\nconst easeInOutQuad = integrate(easeInQuad, easeOutQuad);\nconst easeOutInQuad = integrate(easeOutQuad, easeInQuad);\nconst easeInOutCubic = integrate(easeInCubic, easeOutCubic);\nconst easeOutInCubic = integrate(easeOutCubic, easeInCubic);\nconst easeInOutQuart = integrate(easeInQuart, easeOutQuart);\nconst easeOutInQuart = integrate(easeOutQuart, easeInQuart);\n\nconst easing = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  bind: bind,\n  concatenate: concatenate,\n  integrate: integrate,\n  easeLinear: easeLinear,\n  easeInQuad: easeInQuad,\n  easeOutQuad: easeOutQuad,\n  easeInCubic: easeInCubic,\n  easeOutCubic: easeOutCubic,\n  easeInQuart: easeInQuart,\n  easeOutQuart: easeOutQuart,\n  createEaseOutBack: createEaseOutBack,\n  easeInOutQuad: easeInOutQuad,\n  easeOutInQuad: easeOutInQuad,\n  easeInOutCubic: easeInOutCubic,\n  easeOutInCubic: easeOutInCubic,\n  easeInOutQuart: easeInOutQuart,\n  easeOutInQuart: easeOutInQuart\n});\n\nconst { random } = Math;\n/**\n * Returns random value from `0` up to (but not including) `max`.\n * @param max\n * @return A random value.\n */\nconst value = max => random() * max;\n/**\n * Returns random value from `0` to (but not including) `2 * PI`.\n * @return A random radians value.\n */\nconst angle$2 = () => random() * TWO_PI;\n/**\n * Returns random value from `start` up to (but not including) `end`.\n * @param start\n * @param end\n * @return A random value.\n */\nconst between = (start, end) => start + random() * (end - start);\n/**\n * Returns random value from `range.start` up to (but not including) `range.end`.\n * @param range\n * @return A random value.\n */\nconst inRange = range => between(range.start, range.end);\n/**\n * Returns random integer from 0 up to (but not including) `maxInt`.\n * `maxInt` is not expected to be negative.\n * @param maxInt\n * @return A random integer value.\n */\nconst integer = maxInt => floor(random() * maxInt);\n/**\n * Returns random integer from `minInt` up to (but not including) `maxInt`.\n * The case where `minInt > maxInt` or `maxInt <= 0` is not expected.\n * @param minInt\n * @param maxInt\n * @return A random integer value.\n */\nconst integerBetween = (minInt, maxInt) =>\n  minInt + floor(random() * (maxInt - minInt));\n/**\n * Returns `n` or `-n` randomly.\n * @param n Any number.\n * @return A random-signed value of `n`.\n */\nconst signed = n => (random() < 0.5 ? n : -n);\n/**\n * Returns one element of `array` randomly.\n * `array` is not expected to be empty.\n * @param array\n * @return A random element.\n */\nconst fromArray$1 = array => array[integer(array.length)];\n/**\n * Removes and returns one element from `array` randomly.\n * `array` is not expected to be empty.\n * @param array\n * @return A random element.\n */\nconst removeFromArray = array => array.splice(integer(array.length), 1)[0];\n/**\n * Returns `true` or `false` randomly.\n * @param probability A number between 0 and 1.\n * @return `true` with the given `probability`.\n */\nconst bool = probability => random() < probability;\n/**\n * Returns random value from `-absoluteValue` up to (but not including) `absoluteValue`.\n * @param absoluteValue\n * @return A random value.\n */\nconst fromAbsolute = absoluteValue =>\n  -absoluteValue + random() * 2 * absoluteValue;\n/**\n * Returns a new vector with `length` and random angle.\n * @param length\n * @return New `Vector2D` unit.\n */\nconst vector = length => fromPolar(length, angle$2());\n/**\n * Returns a random point in `region`.\n * @param region\n * @return Random `Vector2D`.\n */\nconst pointInRectangleRegion = region => {\n  const { topLeft, rightBottom } = region;\n  return {\n    x: between(topLeft.x, rightBottom.x),\n    y: between(topLeft.y, rightBottom.y)\n  };\n};\n\nconst random$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  value: value,\n  angle: angle$2,\n  between: between,\n  inRange: inRange,\n  integer: integer,\n  integerBetween: integerBetween,\n  signed: signed,\n  fromArray: fromArray$1,\n  removeFromArray: removeFromArray,\n  bool: bool,\n  fromAbsolute: fromAbsolute,\n  vector: vector,\n  pointInRectangleRegion: pointInRectangleRegion\n});\n\n/**\n * Calculates the scale factor for fitting `nonScaledSize` to `targetSize` keeping the original aspect ratio.\n *\n * @param nonScaledSize\n * @param targetSize\n * @param fittingOption Defaults to `FIT_TO_BOX`.\n */\nconst calculateScaleFactor = (nonScaledSize, targetSize, fittingOption) => {\n  switch (fittingOption) {\n    default:\n    case \"FIT_TO_BOX\":\n      return min2(\n        targetSize.width / nonScaledSize.width,\n        targetSize.height / nonScaledSize.height\n      );\n    case \"FIT_WIDTH\":\n      return targetSize.width / nonScaledSize.width;\n    case \"FIT_HEIGHT\":\n      return targetSize.height / nonScaledSize.height;\n  }\n};\n\nconst fitBox = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  calculateScaleFactor: calculateScaleFactor\n});\n\n/**\n * Finds HTML element by `id`. If not found, returns `document.body`.\n * @param id\n */\nconst getElementOrBody = id => document.getElementById(id) || document.body;\n/**\n * Returns the width and height of `node`.\n * If `node === document.body`, returns the inner width and height of `window`.\n * @param node\n */\nconst getElementSize = node =>\n  node === document.body\n    ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      }\n    : node.getBoundingClientRect();\n\nconst htmlUtility = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  getElementOrBody: getElementOrBody,\n  getElementSize: getElementSize\n});\n\nconst emptyListener = () => {};\nconst create$3 = (\n  duration,\n  onProgress = emptyListener,\n  onComplete = emptyListener\n) => {\n  return {\n    duration,\n    progressRatioChangeRate: 1 / duration,\n    onProgress,\n    onComplete,\n    count: 0,\n    progressRatio: 0,\n    isCompleted: false\n  };\n};\nconst dummy = create$3(0);\nconst reset = timerUnit => {\n  timerUnit.count = 0;\n  timerUnit.progressRatio = 0;\n  timerUnit.isCompleted = false;\n};\nconst step = timerUnit => {\n  if (timerUnit.isCompleted) return true;\n  const { count, duration, progressRatioChangeRate } = timerUnit;\n  if (count >= duration) {\n    timerUnit.progressRatio = 1;\n    timerUnit.onProgress(timerUnit);\n    timerUnit.isCompleted = true;\n    timerUnit.onComplete(timerUnit);\n    return true;\n  }\n  timerUnit.onProgress(timerUnit);\n  timerUnit.count += 1;\n  timerUnit.progressRatio += progressRatioChangeRate;\n  return false;\n};\nconst addOnComplete = (timerUnit, onComplete) => {\n  const newUnit = Object.assign({}, timerUnit);\n  const oldOnComplete = timerUnit.onComplete;\n  newUnit.onComplete = () => {\n    oldOnComplete(newUnit);\n    onComplete(newUnit);\n  };\n  return newUnit;\n};\n\nconst step$1 = chain => {\n  step(chain.current);\n  return chain.isCompleted;\n};\nconst setUnitIndex = (chain, index) => {\n  chain.index = index;\n  chain.current = chain.timers[index];\n};\nconst reset$1 = chain => {\n  loop(chain.timers, reset);\n  setUnitIndex(chain, 0);\n};\nconst next = chain => {\n  setUnitIndex(chain, chain.index + 1);\n  return chain.current;\n};\nconst create$4 = (timers, looped = false) => {\n  let newChain;\n  const newTimers = new Array(timers.length);\n  const shift = () => next(newChain);\n  const lastIndex = timers.length - 1;\n  for (let i = 0; i < lastIndex; i += 1) {\n    newTimers[i] = addOnComplete(timers[i], shift);\n  }\n  if (looped)\n    newTimers[lastIndex] = addOnComplete(timers[lastIndex], () =>\n      reset$1(newChain)\n    );\n  else\n    newTimers[lastIndex] = addOnComplete(\n      timers[lastIndex],\n      () => (newChain.isCompleted = true)\n    );\n  newChain = {\n    timers: newTimers,\n    current: newTimers[0],\n    index: 0,\n    isCompleted: false\n  };\n  return newChain;\n};\nconst dummy$1 = create$4([dummy]);\n\nconst chain = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  step: step$1,\n  setUnitIndex: setUnitIndex,\n  reset: reset$1,\n  next: next,\n  create: create$4,\n  dummy: dummy$1\n});\n\nconst create$5 = capacity => create(capacity);\nconst addTimer = (timerSet, timer) => add(timerSet, () => step(timer));\nconst addChain = (timerSet, chain$1) => add(timerSet, () => step$1(chain$1));\nconst runStep = step => step();\nconst step$2 = timerSet => {\n  removeShiftAll(timerSet, runStep);\n};\nconst clear$2 = timerSet => clearReference(timerSet);\n/**\n * Creates a timer set instance and returns a set of bound functions.\n * @param capacity\n */\nconst construct = capacity => {\n  const timerSet = create$5(capacity);\n  return {\n    addTimer: timer => addTimer(timerSet, timer),\n    addChain: chain => addChain(timerSet, chain),\n    step: () => step$2(timerSet),\n    clear: () => clear$2(timerSet)\n  };\n};\n\nconst set$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  create: create$5,\n  addTimer: addTimer,\n  addChain: addChain,\n  step: step$2,\n  clear: clear$2,\n  construct: construct\n});\n\nconst index$1 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Chain: chain,\n  Set: set$1,\n  emptyListener: emptyListener,\n  create: create$3,\n  dummy: dummy,\n  reset: reset,\n  step: step,\n  addOnComplete: addOnComplete\n});\n\nconst morseCodeMap = new Map([\n  [\"A\", \".-\"],\n  [\"B\", \"-...\"],\n  [\"C\", \"-.-.\"],\n  [\"D\", \"-..\"],\n  [\"E\", \".\"],\n  [\"F\", \"..-.\"],\n  [\"G\", \"--.\"],\n  [\"H\", \"....\"],\n  [\"I\", \"..\"],\n  [\"J\", \".---\"],\n  [\"K\", \"-.-\"],\n  [\"L\", \".-..\"],\n  [\"M\", \"--\"],\n  [\"N\", \"-.\"],\n  [\"O\", \"---\"],\n  [\"P\", \".--.\"],\n  [\"Q\", \"--.-\"],\n  [\"R\", \".-.\"],\n  [\"S\", \"...\"],\n  [\"T\", \"-\"],\n  [\"U\", \"..-\"],\n  [\"V\", \"...-\"],\n  [\"W\", \".--\"],\n  [\"X\", \"-..-\"],\n  [\"Y\", \"-.--\"],\n  [\"Z\", \"--..\"],\n  [\"1\", \".----\"],\n  [\"2\", \"..---\"],\n  [\"3\", \"...--\"],\n  [\"4\", \"....-\"],\n  [\"5\", \".....\"],\n  [\"6\", \"-....\"],\n  [\"7\", \"--...\"],\n  [\"8\", \"---..\"],\n  [\"9\", \"----.\"],\n  [\"0\", \"-----\"],\n  [\".\", \".-.-.-\"],\n  [\",\", \"--..--\"],\n  [\":\", \"---...\"],\n  [\"?\", \"..--..\"],\n  [\"'\", \".----.\"],\n  [\"!\", \"-.-.--\"],\n  [\"-\", \"-....-\"],\n  [\"/\", \"-..-.\"],\n  [\"@\", \".--.-.\"],\n  [\"(\", \"-.--.\"],\n  [\")\", \"-.--.-\"],\n  ['\"', \".-..-.\"],\n  [\"=\", \"-...-\"],\n  [\"+\", \".-.-.\"]\n]);\nclass Unit {\n  constructor(isOn, length, codeString) {\n    this.isOn = isOn;\n    this.length = length;\n    this.codeString = codeString;\n    let s = \"\";\n    const binaryCharacter = isOn ? \"1\" : \"0\";\n    for (let i = 0; i < length; i += 1) {\n      s += binaryCharacter;\n    }\n    this.binaryString = s;\n  }\n}\nclass On extends Unit {\n  constructor(length, codeString) {\n    super(true, length, codeString);\n  }\n}\nclass Off extends Unit {\n  constructor(length, codeString) {\n    super(false, length, codeString);\n  }\n}\nconst DIT = new On(1, \".\");\nconst DAH = new On(3, \"-\");\nconst INTER_ELEMENT_GAP = new Off(1, \"\");\nconst SHORT_GAP = new Off(3, \" \");\nconst MEDIUM_GAP = new Off(7, \" / \");\nconst NUL = new Off(0, \"\");\nfunction encode(sentence) {\n  const upperCaseSentence = sentence.toUpperCase();\n  const signals = [];\n  let gap = undefined;\n  for (let i = 0, len = upperCaseSentence.length; i < len; i += 1) {\n    const character = upperCaseSentence.charAt(i);\n    if (character === \" \") {\n      gap = MEDIUM_GAP;\n      continue;\n    } else if (character.charCodeAt(0) === 0) {\n      if (gap) signals.push(gap);\n      gap = undefined;\n      signals.push(NUL);\n      continue;\n    }\n    const code = morseCodeMap.get(character);\n    if (!code) continue;\n    for (let k = 0, kLen = code.length; k < kLen; k += 1) {\n      if (gap) signals.push(gap);\n      switch (code.charAt(k)) {\n        case \".\":\n          signals.push(DIT);\n          break;\n        case \"-\":\n        case \"_\":\n          signals.push(DAH);\n          break;\n        default:\n          continue;\n      }\n      gap = INTER_ELEMENT_GAP;\n    }\n    gap = SHORT_GAP;\n  }\n  return signals;\n}\nconst toString = signals =>\n  signals.reduce((acc, cur) => acc + cur.codeString, \"\");\nconst toBinaryString = signals =>\n  signals.reduce((acc, cur) => acc + cur.binaryString, \"\");\nconst getTotalLength = signals =>\n  signals.reduce((acc, cur) => acc + cur.length, 0);\n\nconst signal = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Unit: Unit,\n  DIT: DIT,\n  DAH: DAH,\n  INTER_ELEMENT_GAP: INTER_ELEMENT_GAP,\n  SHORT_GAP: SHORT_GAP,\n  MEDIUM_GAP: MEDIUM_GAP,\n  NUL: NUL,\n  encode: encode,\n  toString: toString,\n  toBinaryString: toBinaryString,\n  getTotalLength: getTotalLength\n});\n\n/**\n * Returns duration time per dot in milliseconds.\n * @param wpm - word (PARIS) per minute\n */\nfunction wpmToDotDuration(wpm) {\n  return 1000 / (50 * (wpm / 60));\n}\nconst create$6 = (on, off, wpm = 25, signals = [], loop = false) => {\n  return {\n    on,\n    off,\n    wpm,\n    unitTime: wpmToDotDuration(wpm),\n    loop,\n    signals,\n    index: 0,\n    timeout: undefined\n  };\n};\nconst stop = channel => {\n  if (channel.timeout) {\n    channel.off(NUL);\n    clearTimeout(channel.timeout);\n    channel.timeout = undefined;\n  }\n  channel.index = 0;\n};\nconst runCurrentSignal = channel => {\n  const { unitTime, signals, index, on, off } = channel;\n  const currentSignal = signals[index];\n  if (currentSignal.isOn) on(currentSignal);\n  else off(currentSignal);\n  return unitTime * currentSignal.length;\n};\nconst setNextRun = (run, channel, ms) => {\n  channel.timeout = setTimeout(() => {\n    channel.timeout = undefined;\n    run(channel);\n  }, ms);\n};\nconst run = channel => {\n  const currentSignalTimeLength = runCurrentSignal(channel);\n  channel.index += 1;\n  if (channel.index < channel.signals.length) {\n    setNextRun(run, channel, currentSignalTimeLength);\n    return;\n  }\n  channel.timeout = setTimeout(() => {\n    if (channel.loop) {\n      channel.off(NUL);\n      channel.timeout = undefined;\n    } else {\n      channel.off(MEDIUM_GAP);\n      setNextRun(run, channel, MEDIUM_GAP.length);\n    }\n  }, currentSignalTimeLength);\n  channel.index = 0;\n};\nconst start = (channel, signals) => {\n  stop(channel);\n  if (signals) channel.signals = signals;\n  run(channel);\n};\n\nconst channel = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  wpmToDotDuration: wpmToDotDuration,\n  create: create$6,\n  stop: stop,\n  start: start\n});\n\nconst index$2 = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  Signal: signal,\n  Channel: channel\n});\n\nconst createQuantity = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method, i.e. adding velocity to position.\n * @param quantity\n */\nconst updateEuler = quantity => {\n  quantity.x += quantity.vx;\n  quantity.y += quantity.vy;\n};\n/**\n * Updates the kinematic quantity naively by Euler method,\n * i.e. adding velocity to position and adding acceleration to velocity.\n * @param quantity\n * @param ax\n * @param ay\n */\nconst updateEulerAccelerated = (quantity, ax, ay) => {\n  quantity.x += quantity.vx;\n  quantity.y += quantity.vy;\n  quantity.vx += ax;\n  quantity.vy += ay;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to use `postUpdateVerlet()` with updated acceleration values after using this function.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet = (quantity, ax, ay) => {\n  quantity.vx2 = quantity.vx + 0.5 * ax;\n  quantity.vy2 = quantity.vy + 0.5 * ay;\n  quantity.vx += ax;\n  quantity.vy += ay;\n  quantity.x += quantity.vx2;\n  quantity.y += quantity.vy2;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet = (quantity, ax, ay) => {\n  quantity.vx = quantity.vx2 + 0.5 * ax;\n  quantity.vy = quantity.vy2 + 0.5 * ay;\n};\n/**\n * Assigns position values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned position.\n */\nconst positionVector = (quantity, target) =>\n  setCartesian$1(quantity.x, quantity.y, target);\n/**\n * Extracts velocity values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned velocity.\n */\nconst velocityVector = (quantity, target) =>\n  setCartesian$1(quantity.vx, quantity.vy, target);\n/**\n * Returns the speed.\n * @param quantity\n * @return The speed.\n */\nconst getSpeed = quantity => hypotenuse2D(quantity.vx, quantity.vy);\n/**\n * Returns the velocity angle.\n * @param quantity\n * @return The angle.\n */\nconst getVelocityAngle = quantity => atan2safe(quantity.vy, quantity.vx);\n/**\n * Truncates the speed (magnitude of velocity) if it is greater than `maxSpeed`.\n * @param quantity\n * @param maxSpeed\n * @return The `quantity` instance with truncated velocity values.\n */\nconst truncateVelocity = (quantity, maxSpeed) => {\n  const { vx, vy } = quantity;\n  if (hypotenuseSquared2D(vx, vy) <= maxSpeed * maxSpeed) return quantity;\n  const angle = atan2(vy, vx);\n  quantity.vx = maxSpeed * cos(angle);\n  quantity.vy = maxSpeed * sin(angle);\n  return quantity;\n};\n/**\n * Set values of `velocity` to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocity = (quantity, velocity) => {\n  quantity.vx = velocity.x;\n  quantity.vy = velocity.y;\n  return quantity;\n};\n/**\n * Set velocity values to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocityCartesian = (quantity, vx, vy) => {\n  quantity.vx = vx;\n  quantity.vy = vy;\n  return quantity;\n};\n/**\n * Set velocity values to `quantity`.\n * @param quantity\n * @param velocity\n * @return The `quantity` instance with assigned velocity.\n */\nconst setVelocityPolar = (quantity, length, angle) => {\n  quantity.vx = length * cos(angle);\n  quantity.vy = length * sin(angle);\n  return quantity;\n};\n/**\n * Let `quantity` bounce if it is out of `region`.\n * @param region\n * @param coefficientOfRestitution\n * @param quantity\n * @return `true` if bounced.\n */\nconst bounceInRectangleRegion = (\n  region,\n  coefficientOfRestitution,\n  quantity\n) => {\n  const { x, y, vx, vy } = quantity;\n  const { x: leftX, y: topY } = region.topLeft;\n  const { x: rightX, y: bottomY } = region.rightBottom;\n  if (x < leftX) {\n    quantity.x = leftX;\n    if (vx < 0) quantity.vx = -coefficientOfRestitution * vx;\n    return true;\n  } else if (x >= rightX) {\n    quantity.x = rightX - 1;\n    if (vx > 0) quantity.vx = -coefficientOfRestitution * vx;\n    return true;\n  }\n  if (y < topY) {\n    quantity.y = topY;\n    if (vy < 0) quantity.vy = -coefficientOfRestitution * vy;\n    return true;\n  } else if (y >= bottomY) {\n    quantity.y = bottomY - 1;\n    if (vy > 0) quantity.vy = -coefficientOfRestitution * vy;\n    return true;\n  }\n  return false;\n};\n\nconst kinematics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity,\n  updateEuler: updateEuler,\n  updateEulerAccelerated: updateEulerAccelerated,\n  updateVerlet: updateVerlet,\n  postUpdateVerlet: postUpdateVerlet,\n  positionVector: positionVector,\n  velocityVector: velocityVector,\n  getSpeed: getSpeed,\n  getVelocityAngle: getVelocityAngle,\n  truncateVelocity: truncateVelocity,\n  setVelocity: setVelocity,\n  setVelocityCartesian: setVelocityCartesian,\n  setVelocityPolar: setVelocityPolar,\n  bounceInRectangleRegion: bounceInRectangleRegion\n});\n\nconst createQuantity$1 = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    fx: 0,\n    fy: 0\n  };\n};\nconst createVerletQuantity = (x, y, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    vx2: 0,\n    vy2: 0,\n    fx: 0,\n    fy: 0\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method. Applies the below:\n * 1. Update position by adding velocity.\n * 2. Update velocity by applying force.\n * 3. Clear force to zero.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateEuler$1 = quantity => {\n  updateEulerAccelerated(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to update force after running this function and then run `postUpdateVerlet()`.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet$1 = quantity => {\n  updateVerlet(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet$1 = quantity => {\n  postUpdateVerlet(quantity, quantity.fx, quantity.fy);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Extracts force values to `target` vector.\n * @param quantity\n * @param target\n * @return `target` vector with assigned acceleration.\n */\nconst forceVector = (quantity, target) =>\n  setCartesian$1(quantity.fx, quantity.fy, target);\n/**\n * Truncates the magnitude of force if it is greater than `maxMagnitude`.\n * @param quantity\n * @param maxSpeed\n * @return The `quantity` instance with truncated force values.\n */\nconst truncateForce = (quantity, maxMagnitude) => {\n  const { fx, fy } = quantity;\n  if (hypotenuseSquared2D(fx, fy) <= maxMagnitude * maxMagnitude)\n    return quantity;\n  const angle = atan2(fy, fx);\n  quantity.fx = maxMagnitude * cos(angle);\n  quantity.fy = maxMagnitude * sin(angle);\n  return quantity;\n};\n/**\n * Adds `force` to `quantity`.\n * @param quantity\n * @param force\n * @return The `quantity` instance with assigned force.\n */\nconst addForce = (quantity, force) => {\n  quantity.fx += force.x;\n  quantity.fy += force.y;\n  return quantity;\n};\n/**\n * Adds force values to `quantity`.\n * @param quantity\n * @param fx\n * @param fy\n * @return The `quantity` instance with assigned force.\n */\nconst addForceCartesian = (quantity, fx, fy) => {\n  quantity.fx += fx;\n  quantity.fy += fy;\n  return quantity;\n};\n/**\n * Adds force values to `quantity`.\n * @param quantity\n * @param magnitude\n * @param angle\n * @return The `quantity` instance with assigned force.\n */\nconst addForcePolar = (quantity, magnitude, angle) => {\n  quantity.fx += magnitude * cos(angle);\n  quantity.fy += magnitude * sin(angle);\n  return quantity;\n};\n\nconst simpleDynamics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity$1,\n  createVerletQuantity: createVerletQuantity,\n  updateEuler: updateEuler$1,\n  updateVerlet: updateVerlet$1,\n  postUpdateVerlet: postUpdateVerlet$1,\n  forceVector: forceVector,\n  truncateForce: truncateForce,\n  addForce: addForce,\n  addForceCartesian: addForceCartesian,\n  addForcePolar: addForcePolar\n});\n\nconst createQuantity$2 = (x, y, mass, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    fx: 0,\n    fy: 0,\n    mass\n  };\n};\nconst createVerletQuantity$1 = (x, y, mass, vx, vy) => {\n  return {\n    x,\n    y,\n    vx: vx || 0,\n    vy: vy || 0,\n    vx2: 0,\n    vy2: 0,\n    fx: 0,\n    fy: 0,\n    mass\n  };\n};\n/**\n * Updates the kinematic quantity naively by Euler method. Applies the below:\n * 1. Update position by adding velocity.\n * 2. Update velocity by applying force.\n * 3. Clear force to zero.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateEuler$2 = quantity => {\n  const { mass } = quantity;\n  updateEulerAccelerated(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Updates the kinematic quantity by Velocity Verlet method.\n * Be sure to update force after running this function and then run `postUpdateVerlet()`.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst updateVerlet$2 = quantity => {\n  const { mass } = quantity;\n  updateVerlet(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n/**\n * Completes updating the kinematic quantity by Velocity Verlet method after updating the force.\n *\n * Not sure if this implementation is correct!\n * @param quantity\n */\nconst postUpdateVerlet$2 = quantity => {\n  const { mass } = quantity;\n  postUpdateVerlet(quantity, quantity.fx / mass, quantity.fy / mass);\n  quantity.fx = 0;\n  quantity.fy = 0;\n};\n\nconst dynamics = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  createQuantity: createQuantity$2,\n  createVerletQuantity: createVerletQuantity$1,\n  updateEuler: updateEuler$2,\n  updateVerlet: updateVerlet$2,\n  postUpdateVerlet: postUpdateVerlet$2\n});\n\nlet constant = 1;\nlet minusConstant = -constant;\nconst setConstant = value => {\n  constant = value;\n  minusConstant = -constant;\n};\n/**\n * Calculates gravitation force.\n * @param attractedRelative Relative position from attractor to attracted.\n * @param massProduct Pre-calcultad product of mass of attractor and attracted.\n * @param distance Pre-calculated distance.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateCore = (attractedRelative, massProduct, distance, target) =>\n  multiply$2(\n    attractedRelative,\n    (minusConstant * massProduct) / (distance * distance * distance),\n    target\n  );\n/**\n * Calculates gravitation force applied on point mass `attracted` exerted by point mass `attractor`.\n * @param attractor Object that has `x`, `y` and `mass`.\n * @param attracted Object that has `x`, `y` and `mass`.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculate = (attractor, attracted, target) =>\n  calculateCore(\n    subtract$2(attracted, attractor, target),\n    attractor.mass * attracted.mass,\n    distance(attractor, attracted),\n    target\n  );\n/**\n * Calculates gravitation force, assuming that the mass is always `1`.\n * @param attractedRelative Relative position from attractor to attracted.\n * @param distance Pre-calculated distance.\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateCoreSimple = (attractedRelative, distance, target) =>\n  multiply$2(\n    attractedRelative,\n    minusConstant / (distance * distance * distance),\n    target\n  );\n/**\n * Calculates gravitation force applied on point `attracted` exerted by point `attractor`, assuming that the mass is always `1`.\n * @param attractor\n * @param attracted\n * @param target Vector to assign the result.\n * @return The `target` vector with assigned gravitation force.\n */\nconst calculateSimple = (attractor, attracted, target) =>\n  calculateCoreSimple(\n    subtract$2(attracted, attractor, target),\n    distance(attractor, attracted),\n    target\n  );\n/**\n * Adds gravitation force between `bodyA` and `bodyB`.\n * @param bodyA\n * @param bodyB\n * @param forceOnBodyB\n */\nconst addForceEachOther = (bodyA, bodyB, forceOnBodyB) => {\n  const { x: forceX, y: forceY } = forceOnBodyB;\n  bodyA.fx -= forceX;\n  bodyA.fy -= forceY;\n  bodyB.fx += forceX;\n  bodyB.fy += forceY;\n};\nconst temporalGravitation = { x: 0, y: 0 };\n/**\n * Set of functions that calculate gravitation force and apply it on the body.\n */\nconst attract = {\n  /**\n   * Calculates gravitation force using pre-calculated values and applies it on `attracted`.\n   * @param attracted\n   * @param attractedRelative The relative position from the attractor to `attracted`.\n   * @param massProduct The pre-calculated product of mass of the attractor and `attracted`\n   * @param distance The pre-calculated distance between the attractor and `attracted`.\n   */\n  precalculated: (attracted, attractedRelative, massProduct, distance) =>\n    addForce(\n      attracted,\n      calculateCore(\n        attractedRelative,\n        massProduct,\n        distance,\n        temporalGravitation\n      )\n    ),\n  /**\n   * Calculates gravitation force and applies it on `attracted`.\n   */\n  calculate: (attractor, attracted) =>\n    addForce(attracted, calculate(attractor, attracted, temporalGravitation)),\n  /**\n   * Calculates gravitation force using pre-calculated distance and applies it on `attracted`,\n   * assuming that the mass is always `1`.\n   * @param attracted\n   * @param attractedRelative The relative position from the attractor to `attracted`.\n   * @param distance The pre-calculated distance between the attractor and `attracted`.\n   */\n  precalculatedSimple: (attracted, attractedRelative, distance) =>\n    addForce(\n      attracted,\n      calculateCoreSimple(attractedRelative, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on `attracted`,\n   * assuming that the mass is always `1`.\n   */\n  calculateSimple: (attractor, attracted) =>\n    addForce(\n      attracted,\n      calculateSimple(attractor, attracted, temporalGravitation)\n    )\n};\n/**\n * Set of functions that calculate gravitation force and apply it on both bodies.\n */\nconst attractEachOther = {\n  /**\n   * Calculates gravitation force using pre-calculated values and applies it on both `bodyA` and `bodyB`.\n   * @param bodyA\n   * @param bodyB\n   * @param bodyBRelative The relative position from `bodyA` to `bodyB`.\n   * @param massProduct The pre-calculated product of mass of `bodyA` and `bodyB`\n   * @param distance The pre-calculated distance between `bodyA` and `bodyB`.\n   */\n  precalculated: (bodyA, bodyB, bodyBRelative, massProduct, distance) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateCore(bodyBRelative, massProduct, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on both `bodyA` and `bodyB`.\n   */\n  calculate: (bodyA, bodyB) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculate(bodyA, bodyB, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force using pre-calculated distance and applies it on both `bodyA` and `bodyB`,\n   * assuming that the mass is always `1`.\n   * @param bodyA\n   * @param bodyB\n   * @param bodyBRelative The relative position from `bodyA` to `bodyB`.\n   * @param distance The pre-calculated distance between `bodyA` and `bodyB`.\n   */\n  precalculatedSimple: (bodyA, bodyB, bodyBRelative, distance) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateCoreSimple(bodyBRelative, distance, temporalGravitation)\n    ),\n  /**\n   * Calculates gravitation force and applies it on both `bodyA` and `bodyB`,\n   * assuming that the mass is always `1`.\n   */\n  calculateSimple: (bodyA, bodyB) =>\n    addForceEachOther(\n      bodyA,\n      bodyB,\n      calculateSimple(bodyA, bodyB, temporalGravitation)\n    )\n};\n\nconst gravitation = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  get constant() {\n    return constant;\n  },\n  setConstant: setConstant,\n  calculateCore: calculateCore,\n  calculate: calculate,\n  calculateCoreSimple: calculateCoreSimple,\n  calculateSimple: calculateSimple,\n  attract: attract,\n  attractEachOther: attractEachOther\n});\n\n/**\n * Updates rotation by adding `rotationVelocity` to `rotationAngle`.\n * @param quantity\n */\nconst update = quantity => {\n  quantity.rotationAngle += quantity.rotationVelocity;\n};\n/**\n * Creates a new rotation quantity with random initial angle, random rotation direction and\n * random rotational speed within the given range.\n * @param minRotationSpeed\n * @param maxRotationSpeed\n * @return New `Rotation.Quantity`.\n */\nconst createRandomQuantity = (minRotationSpeed, maxRotationSpeed) => {\n  return {\n    rotationAngle: angle$2(),\n    rotationVelocity: signed(between(minRotationSpeed, maxRotationSpeed))\n  };\n};\n\nconst rotation = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  update: update,\n  createRandomQuantity: createRandomQuantity\n});\n\n/**\n * Creates an array of HSV values with random hue ∈ [0, 360].\n * @param saturation\n * @param value\n * @return New array of HSV values.\n */\nconst withRandomHue = (saturation, value$1) => [\n  value(360),\n  saturation,\n  value$1\n];\n/**\n * Converts HSV values (hue ∈ [0, 360], saturation ∈ [0, 1] and value ∈ [0, 1])\n * to RGB values (red, green, blue ∈ [0, 1]).\n * @param hsvValues\n * @return New array of RGB values.\n */\nconst toRGB = hsvValues => {\n  const [hue, saturation, value] = hsvValues;\n  const c = value * saturation;\n  const dividedHue = hue * INVERSE60;\n  const x = c * (1 - abs((dividedHue % 2) - 1));\n  let tmpValues;\n  switch (floor(dividedHue)) {\n    case 0:\n      tmpValues = [c, x, 0];\n      break;\n    case 1:\n      tmpValues = [x, c, 0];\n      break;\n    case 2:\n      tmpValues = [0, c, x];\n      break;\n    case 3:\n      tmpValues = [0, x, c];\n      break;\n    case 4:\n      tmpValues = [x, 0, c];\n      break;\n    case 5:\n      tmpValues = [c, 0, x];\n      break;\n    default:\n      tmpValues = [0, 0, 0];\n      break;\n  }\n  const m = value - c;\n  return [tmpValues[0] + m, tmpValues[1] + m, tmpValues[2] + m];\n};\n\nconst hsv = /*#__PURE__*/ Object.freeze({\n  __proto__: null,\n  withRandomHue: withRandomHue,\n  toRGB: toRGB\n});\n\nexport {\n  angle as Angle,\n  arrayList as ArrayList,\n  arrayUtility as ArrayUtility,\n  bezier as Bezier,\n  dynamics as Dynamics,\n  easing as Easing,\n  fitBox as FitBox,\n  gravitation as Gravitation,\n  hsv as HSV,\n  htmlUtility as HtmlUtility,\n  kinematics as Kinematics,\n  lazy as Lazy,\n  constants as MathConstants,\n  index$2 as MorseCode,\n  numeric as Numeric,\n  random$1 as Random,\n  rectangleRegion as RectangleRegion,\n  rectangleSize as RectangleSize,\n  rotation as Rotation,\n  simpleDynamics as SimpleDynamics,\n  structureOfArrays as StructureOfArrays,\n  index$1 as Timer,\n  index as Vector2D\n};\n","import { HtmlUtility, RectangleSize } from \"@fal-works/creative-coding-core\";\n\n/**\n * The id of the HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT_ID = \"Contours\";\n\n/**\n * The HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT = HtmlUtility.getElementOrBody(HTML_ELEMENT_ID);\n\n/**\n * The logical size of the canvas.\n */\nexport const LOGICAL_CANVAS_SIZE: RectangleSize.Unit = {\n  width: 800,\n  height: 800\n};\n","import p5 from \"p5\";\nimport * as CCC from \"@fal-works/creative-coding-core\";\nimport * as p5ex from \"@fal-works/p5-extension\";\n\nexport const {\n  ArrayUtility,\n  Vector2D,\n  ArrayList,\n  Numeric,\n  Random,\n  Angle,\n  Kinematics,\n  SimpleDynamics,\n  Rotation,\n  Gravitation,\n  RectangleRegion\n} = CCC;\n\nexport const { onSetup, Mouse } = p5ex;\n\n/**\n * Shared p5 instance.\n */\nexport let p: p5;\n\nonSetup.push(p5Instance => {\n  p = p5Instance;\n});\n\n/**\n * Shared canvas instance.\n */\nexport let canvas: p5ex.ScaledCanvas;\n\nonSetup.push(() => {\n  canvas = p5ex.canvas;\n});\n","import p5 from \"p5\";\nimport * as CCC from \"@fal-works/creative-coding-core\";\nimport {\n  p,\n  canvas,\n  onSetup,\n  ArrayUtility,\n  Vector2D,\n  Numeric,\n  Random,\n  Angle,\n  Kinematics,\n  SimpleDynamics,\n  Rotation\n} from \"./global\";\n\nexport let maxForceMagnitude = 0;\nexport const setMaxForceMagnitude = (value: number) => {\n  maxForceMagnitude = value;\n};\n\ntype NoiseFunction = (t: number) => number;\n\nexport interface Unit\n  extends CCC.SimpleDynamics.VerletQuantity,\n    CCC.Rotation.Quantity {\n  readonly rotationFactor: number;\n  readonly vertexDistance: readonly NoiseFunction[];\n  color: p5.Color;\n  time: number;\n  deltaTime: number;\n}\n\nconst DRAG_COEFFICIENT = 0.3;\n\nconst VERTEX_COUNT = 6;\nconst VERTEX_MIN_DISTANCE = 10;\nconst VERTEX_MAX_DISTANCE_NOISE = 150;\nconst DEFAULT_DELTA_TIME = 0.01;\nconst DELTA_TIME_DECAY = 0.9;\n\nconst unitVectors: readonly CCC.Vector2D.Unit[] = Angle.createArray(\n  VERTEX_COUNT\n).map(angle => Vector2D.fromPolar(1, angle));\n\nconst { square } = Numeric;\n\nconst createVertexDistanceFunction = (): NoiseFunction => {\n  const offset = Random.value(256);\n  return t =>\n    VERTEX_MIN_DISTANCE +\n    VERTEX_MAX_DISTANCE_NOISE * square(p.noise(offset + t));\n};\n\n/**\n * Creates a `Contour` unit.\n * Set `colorMode(HSB, 360, 1, 1, 1)` before using this function.\n * @return New `Contour` instance.\n */\nexport const create = (): Unit => {\n  const position = Random.pointInRectangleRegion(canvas.logicalRegion);\n  const velocity = Random.vector(5);\n\n  return {\n    ...SimpleDynamics.createVerletQuantity(\n      position.x,\n      position.y,\n      velocity.x,\n      velocity.y\n    ),\n    rotationAngle: Random.angle(),\n    rotationVelocity: 0,\n    rotationFactor: Random.signed(1),\n    vertexDistance: ArrayUtility.createPopulated(\n      createVertexDistanceFunction,\n      VERTEX_COUNT\n    ),\n    color: p.color(Random.value(360), 1, 1, 0.6),\n    time: 0,\n    deltaTime: DEFAULT_DELTA_TIME\n  };\n};\n\nlet bounce: (contour: Unit) => boolean;\nonSetup.push(() => {\n  bounce = Kinematics.bounceInRectangleRegion.bind(\n    undefined,\n    canvas.logicalRegion,\n    0.7\n  );\n});\n\nexport const applyDrag = (contour: Unit): void => {\n  SimpleDynamics.addForceCartesian(\n    contour,\n    -DRAG_COEFFICIENT * contour.vx,\n    -DRAG_COEFFICIENT * contour.vy\n  );\n  SimpleDynamics.addForcePolar(contour, Random.value(0.5), Random.angle());\n};\n\nexport const update = (contour: Unit): void => {\n  SimpleDynamics.updateVerlet(contour);\n  Rotation.update(contour);\n};\n\nexport const postUpdate = (contour: Unit): void => {\n  const speed = Kinematics.getSpeed(contour);\n  SimpleDynamics.truncateForce(contour, maxForceMagnitude);\n  SimpleDynamics.postUpdateVerlet(contour);\n\n  if (bounce(contour)) {\n    if (speed > 5) contour.deltaTime += 1;\n  }\n\n  contour.rotationVelocity = contour.rotationFactor * speed * 0.01;\n\n  const { deltaTime } = contour;\n  const additionalDeltaTime = speed * 0.005;\n  contour.time += deltaTime + additionalDeltaTime;\n  contour.deltaTime =\n    DEFAULT_DELTA_TIME + DELTA_TIME_DECAY * (deltaTime - DEFAULT_DELTA_TIME);\n};\n\nexport const draw = (contour: Unit): void => {\n  const { x, y, rotationAngle, vertexDistance, time } = contour;\n  p.stroke(contour.color);\n\n  p.translate(x, y);\n  p.rotate(rotationAngle);\n\n  p.beginShape();\n  const len = VERTEX_COUNT + 3;\n  for (let i = 0; i < len; i += 1) {\n    const index = i % VERTEX_COUNT;\n    const distance = vertexDistance[index](time);\n    const unitVector = unitVectors[index];\n    p.curveVertex(distance * unitVector.x, distance * unitVector.y);\n  }\n  p.endShape();\n\n  p.rotate(-rotationAngle);\n  p.translate(-x, -y);\n};\n\nexport const activate = (contour: Unit) => {\n  contour.deltaTime += 20;\n  SimpleDynamics.addForcePolar(contour, 100, Random.angle());\n};\n","import { p, ArrayList, Gravitation, Mouse } from \"./global\";\nimport * as Contour from \"./contour\";\n\nexport const contours = ArrayList.create<Contour.Unit>(256);\n\nexport const reset = () => {\n  p.push();\n  p.colorMode(p.HSB, 360, 1, 1, 1);\n  ArrayList.clearReference(contours);\n  for (let i = 0; i < 16; i += 1) ArrayList.add(contours, Contour.create());\n  p.pop();\n};\n\nconst attractToMouse = Gravitation.attract.calculateSimple.bind(\n  undefined,\n  Mouse.logicalPosition\n);\nconst applyForce = (contour: Contour.Unit) => {\n  attractToMouse(contour);\n  Contour.applyDrag(contour);\n};\n\nexport const update = () => {\n  ArrayList.loop(contours, Contour.update);\n  ArrayList.loop(contours, applyForce);\n  ArrayList.loop(contours, Contour.postUpdate);\n};\n\nexport const draw = () => {\n  p.blendMode(p.DIFFERENCE);\n  p.stroke(192);\n  p.strokeWeight(6);\n  p.noFill();\n  ArrayList.loop(contours, Contour.draw);\n};\n\nexport const gather = () => {\n  Gravitation.setConstant(1000000);\n  Contour.setMaxForceMagnitude(3);\n};\n\nexport const release = () => {\n  Gravitation.setConstant(100000);\n  Contour.setMaxForceMagnitude(0.5);\n  ArrayList.loop(contours, Contour.activate);\n};\nrelease();\n","import p5 from \"p5\";\nimport * as p5ex from \"@fal-works/p5-extension\";\n\nimport { HTML_ELEMENT, LOGICAL_CANVAS_SIZE } from \"./settings\";\nimport * as Contours from \"./contours\";\nimport { p, canvas, Mouse, RectangleRegion } from \"./global\";\n\nconst { startSketch, createPixels, replaceCanvasPixels, pauseOrResume } = p5ex;\n\n// ---- variables | functions ----\nlet drawBackground: () => void;\nlet cursorColor: p5.Color;\n\n// ---- reset & initialize ----\nconst reset = Contours.reset;\n\nconst initialize = (): void => {\n  const backgroundPixels = createPixels(() => {\n    canvas.drawScaled(() => {\n      const { width, height } = LOGICAL_CANVAS_SIZE;\n      /* eslint-disable @typescript-eslint/no-explicit-any */\n      const g = (p.createGraphics(width / 4, height / 4) as any) as p5;\n      g.background(236, 232, 240);\n      g.noStroke();\n      g.fill(253, 252, 255);\n      g.ellipse(g.width / 2, g.height / 2, g.width, g.height);\n      g.filter(p.BLUR, 10);\n      p.image(g as any, 0, 0, width, height);\n      /* eslint-enable */\n    });\n  });\n  drawBackground = () => replaceCanvasPixels(backgroundPixels);\n\n  cursorColor = p.color(96);\n\n  Mouse.setCenter();\n\n  reset();\n};\n\n// ---- draw ----\n\nconst drawCursor = Mouse.drawAtCursor.bind(undefined, () => {\n  const pressed = p.mouseIsPressed;\n  if (pressed) p.rotate(0.1 * p.frameCount);\n\n  const halfSize = pressed ? 30 : 20;\n  p.stroke(cursorColor);\n  p.strokeWeight(pressed ? 10 : 6);\n  p.line(-halfSize, 0, halfSize, 0);\n  p.line(0, -halfSize, 0, halfSize);\n\n  if (pressed) p.rotate(-0.1 * p.frameCount);\n});\n\nconst drawSketch = () => {\n  Contours.draw();\n  drawCursor();\n};\n\nconst draw = (): void => {\n  Contours.update();\n\n  drawBackground();\n  canvas.drawScaled(drawSketch);\n};\n\n// ---- UI ----\n\nconst keyTyped = (): void => {\n  switch (p.key) {\n    case \"p\":\n      pauseOrResume();\n      break;\n    case \"g\":\n      p.save(\"image.png\");\n      break;\n  }\n};\n\nconst mouseIsOnCanvas = () =>\n  RectangleRegion.containsPoint(canvas.logicalRegion, Mouse.logicalPosition, 0);\n\nconst mousePressed = () => {\n  Contours.gather();\n\n  if (mouseIsOnCanvas()) return false;\n};\n\n// ---- start sketch ----\n\nconst setP5Methods = (p: p5): void => {\n  p.draw = draw;\n  p.keyTyped = keyTyped;\n  p.mouseMoved = Mouse.updatePosition;\n  p.mouseDragged = Mouse.updatePosition;\n  p.mousePressed = mousePressed;\n  p.mouseReleased = Contours.release;\n};\n\nstartSketch({\n  htmlElement: HTML_ELEMENT,\n  logicalCanvasSize: LOGICAL_CANVAS_SIZE,\n  initialize,\n  setP5Methods,\n  fittingOption: undefined // set null to diable scaling\n});\n"],"names":["sin","cos","round","ONE_OVER_SQUARE_ROOT_TWO","INVERSE255","TWO_PI","create","get","create$1","update","loopRange","loop","loopRangeBackwards","loopBackwards","nestedLoopJoinWithRange","nestedLoopJoin","roundRobinWithRange","roundRobin","flatNaive","flatRecursive","populate","createPopulated","arrayUtility","createFilled","createPopulated$1","fromArray","add","push","pop","clear","cleanUnusedSlots","clearReference","loop$1","loopBackwards$1","find","findIndex","removeShift","removeShiftElement","removeSwap","removeSwapElement","removeShiftAll","removeSwapAll","populate$1","nestedLoopJoin$1","roundRobin$1","arrayList","clear$1","lazy","from","structureOfArrays","abs","acos","asin","atan","atan2","ceil","exp","floor","log","max","min","pow","sqrt","tan","clz32","imul","sign","log10","log2","log1p","expm1","cosh","sinh","tanh","acosh","asinh","atanh","hypot","trunc","fround","cbrt","squareRoot","leadingZeros32","multInt","hypotenuse","integerPart","floatRound","cubeRoot","square","cube","pow4","pow5","squareInt","cubeInt","equal","min2","max2","atan2safe","hypotenuseSquared2D","hypotenuse2D","lerp","clamp","numeric","E","LN10","LN2","LOG2E","LOG10E","ONE_HALF","ONE_THIRD","TWO_THIRDS","ONE_QUARTER","TWO_QUARTERS","THREE_QUARTERS","INVERSE30","INVERSE60","SQUARE_ROOT_TWO","SQUARE_ROOT_ONE_HALF","SQUARE_ROOT_THREE","TWO_OVER_SQUARE_ROOT_TWO","ONE_OVER_SQUARE_ROOT_THREE","TWO_OVER_SQUARE_ROOT_THREE","SQUARE_ROOT_THREE_OVER_TWO","SQUARE_ROOT_TWO_OVER_TWO","constants","PI","HALF_PI","THIRD_PI","QUARTER_PI","THREE_QUARTERS_PI","SIN30","SIN45","SIN60","COS30","COS45","COS60","DEGREES_TO_RADIANS","RADIANS_TO_DEGREES","createArray","fromDegrees","toDegrees","fromOrigin","betweenPoints","betweenCoordinates","angle","create$2","containsPoint","getWidth","getHeight","getSize","getCenterPoint","createScaled","rectangleRegion","getAspectRatio","getArea","rectangleSize","zero","isZero","fromPolar","add$1","addCartesian","addPolar","subtract","subtractCartesian","subtractPolar","multiply","divide","distanceSquared","distance","toStr","copy","lengthSquared","length","angle$1","add$2","addCartesian$1","addPolar$1","subtract$1","subtractCartesian$1","subtractPolar$1","set","setCartesian","setPolar","multiply$1","divide$1","mutable","add$3","addCartesian$2","addPolar$2","subtract$2","subtractCartesian$2","subtractPolar$2","setCartesian$1","setPolar$1","multiply$2","divide$2","assign","index","createCurve","bezier","bind","concatenate","integrate","easeLinear","easeInQuad","easeOutQuad","easeInCubic","easeOutCubic","easeInQuart","easeOutQuart","createEaseOutBack","easeInOutQuad","easeOutInQuad","easeInOutCubic","easeOutInCubic","easeInOutQuart","easeOutInQuart","easing","random","value","angle$2","between","inRange","integer","integerBetween","signed","fromArray$1","removeFromArray","bool","fromAbsolute","vector","pointInRectangleRegion","random$1","calculateScaleFactor","fitBox","getElementOrBody","getElementSize","htmlUtility","emptyListener","create$3","dummy","reset","step","addOnComplete","step$1","setUnitIndex","reset$1","next","create$4","dummy$1","chain","create$5","addTimer","addChain","runStep","step$2","clear$2","construct","set$1","index$1","morseCodeMap","Unit","On","Off","DIT","DAH","INTER_ELEMENT_GAP","SHORT_GAP","MEDIUM_GAP","NUL","encode","toString","toBinaryString","getTotalLength","signal","wpmToDotDuration","create$6","stop","runCurrentSignal","setNextRun","run","start","channel","index$2","createQuantity","updateEuler","updateEulerAccelerated","updateVerlet","postUpdateVerlet","positionVector","velocityVector","getSpeed","getVelocityAngle","truncateVelocity","setVelocity","setVelocityCartesian","setVelocityPolar","bounceInRectangleRegion","kinematics","createQuantity$1","createVerletQuantity","updateEuler$1","updateVerlet$1","postUpdateVerlet$1","forceVector","truncateForce","addForce","addForceCartesian","addForcePolar","simpleDynamics","createQuantity$2","createVerletQuantity$1","updateEuler$2","updateVerlet$2","postUpdateVerlet$2","dynamics","constant","minusConstant","setConstant","calculateCore","calculate","calculateCoreSimple","calculateSimple","addForceEachOther","temporalGravitation","attract","attractEachOther","gravitation","createRandomQuantity","rotation","withRandomHue","value$1","toRGB","hsv","HtmlUtility","ArrayUtility","Vector2D","ArrayList","Numeric","Random","Angle","RectangleRegion","CCC","onSetup","p","canvas","p5ex.canvas","Contour.create","Contour.applyDrag","Contour.update","Contour.postUpdate","draw","Contour.draw","Contour.setMaxForceMagnitude","Contour.activate","startSketch","createPixels","replaceCanvasPixels","pauseOrResume","Contours.reset","Contours.draw","Contours.update","Contours.gather","Contours.release"],"mappings":"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"}