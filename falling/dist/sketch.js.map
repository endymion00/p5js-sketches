{"version":3,"file":"sketch.js","sources":["../src/common.ts","../src/settings.ts","../src/dot.ts","../src/dots.ts","../src/grid.ts","../src/repeater.ts","../src/sketch.ts","../src/main.ts"],"sourcesContent":["/**\r\n * ---- Common ----------------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport * as CCC from \"@fal-works/creative-coding-core\";\r\nimport * as p5ex from \"@fal-works/p5-extension\";\r\n\r\nexport const {\r\n  ArrayList,\r\n  Vector2D,\r\n  SimpleDynamics,\r\n  Random,\r\n  Timer,\r\n  Tween,\r\n  Easing,\r\n  Numeric: { cube }\r\n} = CCC;\r\n\r\nexport const { Noise, ShapeColor } = p5ex;\r\n\r\n/**\r\n * Shared p5 instance.\r\n */\r\nexport let p: p5;\r\n\r\np5ex.onSetup.push(p5Instance => {\r\n  p = p5Instance;\r\n});\r\n\r\n/**\r\n * Shared canvas instance.\r\n */\r\nexport let canvas: p5ex.ScaledCanvas;\r\n\r\np5ex.onSetup.push(() => {\r\n  canvas = p5ex.canvas;\r\n});\r\n","/**\r\n * ---- Settings --------------------------------------------------------------\r\n */\r\n\r\nimport { HtmlUtility, RectangleSize } from \"@fal-works/creative-coding-core\";\r\n\r\n/**\r\n * The id of the HTML element to which the canvas should belong.\r\n */\r\nexport const HTML_ELEMENT_ID = \"Falling\";\r\n\r\n/**\r\n * The HTML element to which the canvas should belong.\r\n */\r\nexport const HTML_ELEMENT = HtmlUtility.getElementOrBody(HTML_ELEMENT_ID);\r\n\r\n/**\r\n * The logical size of the canvas.\r\n */\r\nexport const LOGICAL_CANVAS_SIZE: RectangleSize.Unit = {\r\n  width: HTML_ELEMENT.getBoundingClientRect().width,\r\n  height: HTML_ELEMENT.getBoundingClientRect().height\r\n};\r\n","/**\r\n * ---- Dot -------------------------------------------------------------------\r\n */\r\n\r\nimport * as CCC from \"@fal-works/creative-coding-core\";\r\nimport { p, SimpleDynamics, ShapeColor, Timer, Tween, Easing } from \"./common\";\r\nimport { LOGICAL_CANVAS_SIZE } from \"./settings\";\r\n\r\nexport interface DotUnit extends CCC.SimpleDynamics.Quantity {\r\n  alpha: number;\r\n  size: number;\r\n}\r\n\r\nexport const Dot = (() => {\r\n  const maxSize = 20;\r\n  const habitableZoneBottomY = LOGICAL_CANVAS_SIZE.height + maxSize;\r\n\r\n  const shapeColor = ShapeColor.create(undefined, [32, 192], 255);\r\n\r\n  const timerSet = Timer.Set.construct(1024);\r\n  const dotSizeTweenParameters: CCC.Tween.Parameters = {\r\n    start: maxSize / 2,\r\n    end: maxSize,\r\n    easing: Easing.Out.createBack()\r\n  };\r\n\r\n  const create = (x: number, y: number): DotUnit => {\r\n    const dot = {\r\n      ...SimpleDynamics.createQuantity(x, y),\r\n      alpha: 255,\r\n      size: 0\r\n    };\r\n\r\n    timerSet.add(\r\n      Tween.create(\r\n        v => {\r\n          dot.size = v;\r\n        },\r\n        30,\r\n        dotSizeTweenParameters\r\n      )\r\n    );\r\n\r\n    return dot;\r\n  };\r\n\r\n  const update = (dot: DotUnit) => {\r\n    dot.fy = 0.05;\r\n    SimpleDynamics.updateEuler(dot);\r\n    dot.alpha -= 2;\r\n\r\n    return dot.alpha <= 0 || dot.y >= habitableZoneBottomY;\r\n  };\r\n\r\n  const draw = (dot: DotUnit) => {\r\n    ShapeColor.apply(shapeColor, dot.alpha);\r\n    p.circle(dot.x, dot.y, dot.size);\r\n  };\r\n\r\n  return {\r\n    timerSet,\r\n    create,\r\n    update,\r\n    draw\r\n  };\r\n})();\r\n","/**\r\n * ---- Dots ------------------------------------------------------------------\r\n */\r\n\r\nimport { DotUnit, Dot } from \"./dot\";\r\nimport { ArrayList } from \"./common\";\r\n\r\nexport const Dots = (() => {\r\n  const list = ArrayList.create<DotUnit>(1024);\r\n\r\n  const update = () => {\r\n    Dot.timerSet.step();\r\n    ArrayList.removeShiftAll(list, Dot.update);\r\n  };\r\n  const draw = () => ArrayList.loop(list, Dot.draw);\r\n\r\n  const add = (x: number, y: number) => ArrayList.add(list, Dot.create(x, y));\r\n\r\n  return { update, draw, add };\r\n})();\r\n","/**\r\n * ---- Grid ------------------------------------------------------------------\r\n */\r\n\r\nimport { Random, Vector2D } from \"./common\";\r\nimport { LOGICAL_CANVAS_SIZE } from \"./settings\";\r\n\r\ninterface Move {\r\n  readonly column: number;\r\n  readonly row: number;\r\n  readonly nextMoves: Move[];\r\n}\r\n\r\nexport const Grid = (() => {\r\n  // ---- constants ----\r\n  const cellSize = 25;\r\n  const columns = Math.floor(LOGICAL_CANVAS_SIZE.width / cellSize);\r\n  const rows = Math.floor(LOGICAL_CANVAS_SIZE.height / cellSize);\r\n\r\n  // ---- moves ----\r\n  const createMove = (column: number, row: number): Move => ({\r\n    column,\r\n    row,\r\n    nextMoves: []\r\n  });\r\n\r\n  const Left = createMove(-1, 0);\r\n  const Up = createMove(0, -1);\r\n  const Right = createMove(1, 0);\r\n  const Down = createMove(0, 1);\r\n  Left.nextMoves.push(Left, Up, Down);\r\n  Up.nextMoves.push(Left, Up, Right);\r\n  Right.nextMoves.push(Up, Right, Down);\r\n  Down.nextMoves.push(Left, Right, Down);\r\n  const Moves = [Left, Up, Right, Down];\r\n\r\n  // ---- variables ----\r\n  let currentColumn = Math.floor(columns / 2);\r\n  let currentRow = Math.floor(rows / 2);\r\n  let lastMove: Move = createMove(0, 0);\r\n  lastMove.nextMoves.push(...Moves);\r\n\r\n  // ---- functions ----\r\n  const reverseMove = (move: Move) => {\r\n    switch (move) {\r\n      default:\r\n      case Left:\r\n        return Right;\r\n      case Up:\r\n        return Down;\r\n      case Right:\r\n        return Left;\r\n      case Down:\r\n        return Up;\r\n    }\r\n  };\r\n\r\n  const getNextMove = () => Random.Arrays.get(lastMove.nextMoves);\r\n\r\n  const applyMove = (move: Move) => {\r\n    const nextColumn = currentColumn + move.column;\r\n    if (nextColumn < 0 || nextColumn >= columns) {\r\n      lastMove = reverseMove(lastMove);\r\n      return false;\r\n    }\r\n\r\n    const nextRow = currentRow + move.row;\r\n    if (nextRow < 0 || nextRow >= rows) {\r\n      lastMove = reverseMove(lastMove);\r\n      return false;\r\n    }\r\n\r\n    currentColumn = nextColumn;\r\n    currentRow = nextRow;\r\n    return true;\r\n  };\r\n\r\n  const getPosition = (column: number, row: number) =>\r\n    Vector2D.create((0.5 + column) * cellSize, (0.5 + row) * cellSize);\r\n\r\n  const nextPosition = () => {\r\n    let nextMove = getNextMove();\r\n    while (!applyMove(nextMove)) {\r\n      nextMove = getNextMove();\r\n    }\r\n    lastMove = nextMove;\r\n\r\n    return getPosition(currentColumn, currentRow);\r\n  };\r\n\r\n  return {\r\n    nextPosition\r\n  };\r\n})();\r\n","/**\r\n * ---- Repeater --------------------------------------------------------------\r\n */\r\n\r\nexport interface RepeaterUnit {\r\n  callback: () => void;\r\n  frequency: number;\r\n  accumulation: number;\r\n}\r\n\r\nexport const Repeater = (() => {\r\n  /**\r\n   * Creates a `Repeater` unit.\r\n   * @param callback\r\n   * @param frequency Frequency per frame for running `callback`.\r\n   */\r\n  const create = (callback: () => void, frequency = 1) => ({\r\n    callback,\r\n    frequency,\r\n    accumulation: 0\r\n  });\r\n\r\n  const run = (repeater: RepeaterUnit) => {\r\n    repeater.accumulation += repeater.frequency;\r\n    while (repeater.accumulation >= 1) {\r\n      repeater.accumulation -= 1;\r\n      repeater.callback();\r\n    }\r\n  };\r\n\r\n  return {\r\n    create,\r\n    run\r\n  };\r\n})();\r\n","/**\r\n * ---- Sketch ----------------------------------------------------------------\r\n */\r\n\r\nimport { storePixels } from \"@fal-works/p5-extension\";\r\nimport { p, canvas, Noise, cube } from \"./common\";\r\nimport { Dots } from \"./dots\";\r\nimport { Grid } from \"./grid\";\r\nimport { Repeater } from \"./repeater\";\r\n\r\n// ---- variables | functions ----\r\nlet drawBackground: () => void;\r\nconst repeater = Repeater.create(() => {\r\n  const position = Grid.nextPosition();\r\n  Dots.add(position.x, position.y);\r\n});\r\nconst noise = Noise.withChangeRate(0.05);\r\n\r\n// ---- reset & initialize ----\r\nconst reset = () => {};\r\n\r\nexport const initialize = (): void => {\r\n  p.background(252);\r\n  drawBackground = storePixels();\r\n\r\n  p.noStroke();\r\n\r\n  reset();\r\n};\r\n\r\n// ---- draw ----\r\n\r\nconst updateSketch = () => {\r\n  repeater.frequency = 18 * cube(noise());\r\n  Repeater.run(repeater);\r\n  Dots.update();\r\n};\r\nconst drawSketch = () => {\r\n  Dots.draw();\r\n};\r\n\r\nexport const draw = (): void => {\r\n  updateSketch();\r\n\r\n  drawBackground();\r\n  canvas.drawScaled(drawSketch);\r\n};\r\n","/**\r\n * ---- Main ------------------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { startSketch, pauseOrResume } from \"@fal-works/p5-extension\";\r\n\r\nimport { p } from \"./common\";\r\nimport { HTML_ELEMENT, LOGICAL_CANVAS_SIZE } from \"./settings\";\r\nimport * as sketch from \"./sketch\";\r\n\r\n// ---- UI ----\r\n\r\nconst keyTyped = (): void => {\r\n  switch (p.key) {\r\n    case \"p\":\r\n      pauseOrResume();\r\n      break;\r\n    case \"g\":\r\n      p.save(\"image.png\");\r\n      break;\r\n  }\r\n};\r\n\r\n// ---- start sketch ----\r\n\r\nconst setP5Methods = (p: p5): void => {\r\n  p.draw = sketch.draw;\r\n  p.keyTyped = keyTyped;\r\n};\r\n\r\nstartSketch({\r\n  htmlElement: HTML_ELEMENT,\r\n  logicalCanvasSize: LOGICAL_CANVAS_SIZE,\r\n  initialize: sketch.initialize,\r\n  setP5Methods,\r\n  fittingOption: null // set undefined to enable scaling\r\n});\r\n"],"names":["p5ex.onSetup","p5ex.canvas","HtmlUtility","storePixels","pauseOrResume","sketch.draw","startSketch","sketch.initialize"],"mappings":"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"}