{"version":3,"file":"sketch.js","sources":["../src/common/ds/array-list.ts","../src/common/ds/sweepable.ts","../src/common/environment.ts","../src/common/ds/array.ts","../src/common/p5util/shared.ts","../src/common/boundingBox.ts","../src/common/p5util/transform.ts","../src/common/p5util/canvas.ts","../src/common/p5util/setup.ts","../src/common/p5util/main.ts","../src/common/p5util/pixels.ts","../src/common/p5util/pause.ts","../src/settings.ts","../src/common/math.ts","../src/constants.ts","../src/common/ds/vector-2d.ts","../src/common/lazy.ts","../src/common/random.ts","../src/common/easing.ts","../src/common/timer.ts","../src/line.ts","../src/main.ts"],"sourcesContent":["/**\r\n * ---- ArrayList ------------------------------------------------------------\r\n */\r\n\r\nexport interface ArrayList<T> {\r\n  array: T[];\r\n  size: number;\r\n}\r\n\r\nexport const create = <T>(initialCapacity: number) => {\r\n  return {\r\n    array: new Array<T>(initialCapacity),\r\n    size: 0\r\n  };\r\n};\r\n\r\nexport const add = <T>(arrayList: ArrayList<T>, element: T) => {\r\n  arrayList.array[arrayList.size] = element;\r\n  arrayList.size += 1;\r\n};\r\n\r\nexport const push = add;\r\n\r\nexport const pop = <T>(arrayList: ArrayList<T>) => {\r\n  const lastIndex = arrayList.size - 1;\r\n  const removedElement = arrayList.array[lastIndex];\r\n  arrayList.size = lastIndex;\r\n\r\n  return removedElement;\r\n};\r\n\r\nexport const clear = <T>(arrayList: ArrayList<T>) => {\r\n  arrayList.size = 0;\r\n};\r\n\r\nexport const clearReference = <T>(arrayList: ArrayList<T>) => {\r\n  arrayList.size = 0;\r\n  const array = arrayList.array;\r\n  const capacity = array.length;\r\n  array.length = 0;\r\n  array.length = capacity;\r\n};\r\n\r\nexport const loop = <T>(arrayList: ArrayList<T>, callback: (v: T) => void) => {\r\n  const { array, size } = arrayList;\r\n\r\n  for (let i = 0; i < size; i += 1) callback(array[i]);\r\n};\r\n\r\nexport const removeShift = <T>(arrayList: ArrayList<T>, index: number) => {\r\n  const { array, size } = arrayList;\r\n\r\n  const removedElement = array[index];\r\n  for (let i = index + 1; i < size; i += 1) array[i - 1] = array[i];\r\n\r\n  return removedElement;\r\n};\r\n\r\nexport const removeSwap = <T>(arrayList: ArrayList<T>, index: number) => {\r\n  const array = arrayList.array;\r\n\r\n  const removedElement = array[index];\r\n  const lastIndex = arrayList.size - 1;\r\n  array[index] = array[lastIndex];\r\n  arrayList.size = lastIndex;\r\n\r\n  return removedElement;\r\n};\r\n","/**\r\n * ---- Sweepable ------------------------------------------------------------\r\n */\r\n\r\nimport { ArrayList } from \"./array-list\";\r\n\r\nexport interface Sweepable {\r\n  needsSweep: boolean;\r\n}\r\n\r\nexport const sweep = <T extends Sweepable>(arrayList: ArrayList<T>) => {\r\n  const { array, size } = arrayList;\r\n  let writeIndex = 0;\r\n\r\n  for (let readIndex = 0; readIndex < size; readIndex += 1) {\r\n    const element = array[readIndex];\r\n\r\n    if (element.needsSweep) continue;\r\n\r\n    array[writeIndex] = element;\r\n    writeIndex += 1;\r\n  }\r\n\r\n  arrayList.size = writeIndex;\r\n};\r\n\r\nexport const loopSweep = <T extends Sweepable>(\r\n  arrayList: ArrayList<T>,\r\n  callback: (v: T) => void\r\n) => {\r\n  const { array, size } = arrayList;\r\n  let writeIndex = 0;\r\n\r\n  for (let readIndex = 0; readIndex < size; readIndex += 1) {\r\n    const element = array[readIndex];\r\n    callback(element);\r\n\r\n    if (element.needsSweep) continue;\r\n\r\n    array[writeIndex] = element;\r\n    writeIndex += 1;\r\n  }\r\n\r\n  arrayList.size = writeIndex;\r\n};\r\n","/**\r\n * ---- Common environment utility -------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\n\r\n/**\r\n * Finds HTML element by `id`. If not found, returns `document.body`.\r\n * @param id\r\n */\r\nexport const getElementOrBody = (id: string): HTMLElement =>\r\n  document.getElementById(id) || document.body;\r\n\r\n/**\r\n * Returns the width and height of `node`.\r\n * If `node === document.body`, returns the inner width and height of `window`.\r\n * @param node\r\n */\r\nexport const getElementSize = (node: Element): RectangleSize =>\r\n  node === document.body\r\n    ? {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      }\r\n    : node.getBoundingClientRect();\r\n","/**\r\n * ---- Common array utility -------------------------------------------------\r\n */\r\n\r\nimport { ArrayOrValue } from \"../dataTypes\";\r\n\r\nexport const loopLimited = <T>(\r\n  array: readonly T[],\r\n  callback: (currentValue: T, index?: number, array?: readonly T[]) => void,\r\n  arrayLength: number\r\n): void => {\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    callback(array[i], i, array);\r\n  }\r\n};\r\n\r\n/**\r\n * Runs `callback` once for each element of `array`.\r\n * Unlike `forEach()`, an element of `array` should not be removed during the iteration.\r\n * @param array\r\n * @param callback\r\n */\r\nexport const loop = <T>(\r\n  array: readonly T[],\r\n  callback: (currentValue: T, index?: number, array?: readonly T[]) => void\r\n): void => {\r\n  const arrayLength = array.length;\r\n\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    callback(array[i], i, array);\r\n  }\r\n};\r\n\r\nexport const loopBackwardsLimited = <T>(\r\n  array: readonly T[],\r\n  callback: (currentValue: T, index?: number, array?: readonly T[]) => void,\r\n  arrayLength: number\r\n): void => {\r\n  if (arrayLength < 0)\r\n    throw new RangeError(`arrayLength ${arrayLength} is invalid.`);\r\n\r\n  while (arrayLength--) {\r\n    callback(array[arrayLength], arrayLength, array);\r\n  }\r\n};\r\n\r\n/**\r\n * Runs `callback` once for each element of `array` in descending order.\r\n * @param array\r\n * @param callback\r\n */\r\nexport const loopBackwards = <T>(\r\n  array: readonly T[],\r\n  callback: (currentValue: T, index?: number, array?: readonly T[]) => void\r\n): void => {\r\n  let arrayLength = array.length;\r\n\r\n  while (arrayLength--) {\r\n    callback(array[arrayLength], arrayLength, array);\r\n  }\r\n};\r\n\r\nexport const nestedLoopJoinLimited = <T, U>(\r\n  array: readonly T[],\r\n  otherArray: readonly U[],\r\n  callback: (element: T, otherElement: U) => void,\r\n  arrayLength: number,\r\n  otherArrayLength: number\r\n): void => {\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    for (let k = 0; k < otherArrayLength; k += 1) {\r\n      callback(array[i], otherArray[k]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Joins two arrays and runs `callback` once for each joined pair.\r\n * @param array\r\n * @param otherArray\r\n * @param callback\r\n */\r\nexport const nestedLoopJoin = <T, U>(\r\n  array: readonly T[],\r\n  otherArray: readonly U[],\r\n  callback: (element: T, otherElement: U) => void\r\n): void => {\r\n  nestedLoopJoinLimited(\r\n    array,\r\n    otherArray,\r\n    callback,\r\n    array.length,\r\n    otherArray.length\r\n  );\r\n};\r\n\r\nexport const roundRobinLimited = <T>(\r\n  array: readonly T[],\r\n  callback: (element: T, otherElement: T) => void,\r\n  arrayLength: number\r\n): void => {\r\n  const iLen = arrayLength - 1;\r\n  for (let i = 0; i < iLen; i += 1) {\r\n    for (let k = i + 1; k < arrayLength; k += 1) {\r\n      callback(array[i], array[k]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Runs `callback` once for each pair within `array`.\r\n * @param array\r\n * @param callback\r\n */\r\nexport const roundRobin = <T>(\r\n  array: readonly T[],\r\n  callback: (element: T, otherElement: T) => void\r\n): void => roundRobinLimited(array, callback, array.length);\r\n\r\n/**\r\n * Creates a new 1-dimensional array by concatenating sub-array elements of a 2-dimensional array.\r\n * @param arrays\r\n * @return A new 1-dimensional array.\r\n */\r\n// eslint-disable-next-line prefer-spread\r\nexport const flatNaive = <T>(arrays: readonly T[][]): readonly T[] =>\r\n  ([] as T[]).concat(...arrays);\r\n\r\n/**\r\n * An alternative to `Array.prototype.flat()`.\r\n * @param array\r\n * @param depth\r\n * @return A new array.\r\n */\r\nexport const flatRecursive = <T>(array: ArrayOrValue<T>[], depth: number = 1) =>\r\n  depth > 0\r\n    ? array.reduce(\r\n        (acc: ArrayOrValue<T>[], cur): ArrayOrValue<T>[] =>\r\n          acc.concat(Array.isArray(cur) ? flatRecursive(cur, depth - 1) : cur),\r\n        []\r\n      )\r\n    : array;\r\n","/**\r\n * ---- p5 shared variables --------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { ScaledCanvas } from \"./canvas\";\r\n\r\nexport interface SharedObjects {\r\n  p5Instance: p5;\r\n  canvas: ScaledCanvas;\r\n}\r\n\r\n/**\r\n * The shared `p5` instance.\r\n */\r\nexport let p: p5;\r\n\r\n/**\r\n * The shared `ScaledCanvas` instance.\r\n */\r\nexport let canvas: ScaledCanvas;\r\n\r\n/**\r\n * Sets the given `p5` instance to be shared.\r\n * @param instance\r\n */\r\nexport const setP5Instance = (instance: p5): void => {\r\n  p = instance;\r\n};\r\n\r\n/**\r\n * Sets the given `ScaledCanvas` instance to be shared.\r\n * @param scaledCanvas\r\n */\r\nexport const setCanvas = (scaledCanvas: ScaledCanvas): void => {\r\n  canvas = scaledCanvas;\r\n};\r\n","/**\r\n * ---- Common bounding box utility ------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\nimport { Vector2D } from \"./ds/vector-2d\";\r\n\r\n/**\r\n * Calculates the aspect ratio i.e. `width / height`.\r\n * @param size\r\n */\r\nexport const getAspectRatio = (size: RectangleSize): number =>\r\n  size.width / size.height;\r\n\r\n/**\r\n * Calculates the area i.e. `width * height`.\r\n * @param size\r\n */\r\nexport const getArea = (size: RectangleSize): number =>\r\n  size.width * size.height;\r\n\r\n/**\r\n * Returns `true` if `size` contains `point`.\r\n * @param size\r\n */\r\nexport const containsPoint = (\r\n  size: RectangleSize,\r\n  point: Vector2D,\r\n  margin: number\r\n): boolean => {\r\n  const { x, y } = point;\r\n  return (\r\n    x >= margin &&\r\n    y >= margin &&\r\n    x < size.width - margin &&\r\n    y < size.height - margin\r\n  );\r\n};\r\n\r\n/**\r\n * Parameter for `getScaleFactor()`.\r\n * `FIT_TO_BOX` checks both width and height and returns the smaller scale factor.\r\n */\r\nexport const enum FittingOption {\r\n  FIT_TO_BOX = \"FIT_TO_BOX\",\r\n  FIT_WIDTH = \"FIT_WIDTH\",\r\n  FIT_HEIGHT = \"FIT_HEIGHT\"\r\n}\r\n\r\n/**\r\n * Calculates the scale factor for fitting `nonScaledSize` to `targetSize` keeping the original aspect ratio.\r\n *\r\n * @param nonScaledSize\r\n * @param targetSize\r\n * @param fittingOption\r\n */\r\nexport const getScaleFactor = (\r\n  nonScaledSize: RectangleSize,\r\n  targetSize: RectangleSize,\r\n  fittingOption?: FittingOption\r\n): number => {\r\n  switch (fittingOption) {\r\n    default:\r\n    case FittingOption.FIT_TO_BOX:\r\n      return Math.min(\r\n        targetSize.width / nonScaledSize.width,\r\n        targetSize.height / nonScaledSize.height\r\n      );\r\n\r\n    case FittingOption.FIT_WIDTH:\r\n      return targetSize.width / nonScaledSize.width;\r\n\r\n    case FittingOption.FIT_HEIGHT:\r\n      return targetSize.height / nonScaledSize.height;\r\n  }\r\n};\r\n","/**\r\n * ---- p5.js transformation utility -----------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { p } from \"./shared\";\r\n\r\n/**\r\n * Runs `drawCallback` translated with `offsetX` and `offsetY`,\r\n * then restores the transformation by calling `p.translate()` with negative values.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param drawCallback\r\n * @param offsetX\r\n * @param offsetY\r\n */\r\nexport const drawTranslated = (\r\n  drawCallback: () => void | p5,\r\n  offsetX: number,\r\n  offsetY: number\r\n): void => {\r\n  p.translate(offsetX, offsetY);\r\n  drawCallback();\r\n  p.translate(-offsetX, -offsetY);\r\n};\r\n\r\n/**\r\n * Runs `drawCallback` rotated with `angle`,\r\n * then restores the transformation by calling `p.rotate()` with the negative value.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param drawCallback\r\n * @param angle\r\n */\r\nexport const drawRotated = (\r\n  drawCallback: () => void | p5,\r\n  angle: number\r\n): void => {\r\n  p.rotate(angle);\r\n  drawCallback();\r\n  p.rotate(-angle);\r\n};\r\n\r\n/**\r\n * Composite of `drawTranslated()` and `drawRotated()`.\r\n *\r\n * @param drawCallback\r\n * @param offsetX\r\n * @param offsetY\r\n * @param angle\r\n */\r\nexport const drawTranslatedAndRotated = (\r\n  drawCallback: () => void | p5,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  angle: number\r\n): void => {\r\n  p.translate(offsetX, offsetY);\r\n  drawRotated(drawCallback, angle);\r\n  p.translate(-offsetX, -offsetY);\r\n};\r\n\r\n/**\r\n * Runs `drawCallback` scaled with `scaleFactor`,\r\n * then restores the transformation by scaling with the inversed factor.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport const drawScaled = (\r\n  drawCallback: () => void | p5,\r\n  scaleFactor: number\r\n): void => {\r\n  p.scale(scaleFactor);\r\n  drawCallback();\r\n  p.scale(1 / scaleFactor);\r\n};\r\n","/**\r\n * ---- p5.js canvas utility -------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { p } from \"./shared\";\r\nimport { RectangleSize } from \"../dataTypes\";\r\nimport { FittingOption, getScaleFactor } from \"../boundingBox\";\r\nimport { getElementOrBody, getElementSize } from \"../environment\";\r\nimport { Vector2D } from \"../ds/vector-2d\";\r\nimport { drawScaled } from \"./transform\";\r\n\r\n/**\r\n * p5.js canvas accompanied by a scale factor.\r\n */\r\nexport interface ScaledCanvas {\r\n  readonly p5Canvas: p5.Renderer;\r\n  readonly scaleFactor: number;\r\n  readonly logicalSize: RectangleSize;\r\n  readonly drawScaled: (drawCallback: () => void) => void;\r\n  readonly logicalCenterPosition: Vector2D;\r\n}\r\n\r\n/**\r\n * Runs `p.createCanvas()` with the scaled size that fits to `node`.\r\n * Returns the created canvas and the scale factor.\r\n *\r\n * @param node - The HTML element or its ID.\r\n * @param logicalSize\r\n * @param fittingOption\r\n * @param renderer\r\n */\r\nexport const createScaledCanvas = (\r\n  node: HTMLElement | string,\r\n  logicalSize: RectangleSize,\r\n  fittingOption?: FittingOption,\r\n  renderer?: \"p2d\" | \"webgl\" | undefined\r\n): ScaledCanvas => {\r\n  const maxCanvasSize = getElementSize(\r\n    typeof node === \"string\" ? getElementOrBody(node) : node\r\n  );\r\n  const scaleFactor = getScaleFactor(logicalSize, maxCanvasSize, fittingOption);\r\n\r\n  const canvas = p.createCanvas(\r\n    scaleFactor * logicalSize.width,\r\n    scaleFactor * logicalSize.height,\r\n    renderer\r\n  );\r\n\r\n  return {\r\n    p5Canvas: canvas,\r\n    scaleFactor: scaleFactor,\r\n    logicalSize: logicalSize,\r\n    drawScaled: (drawCallback: () => void): void =>\r\n      drawScaled(drawCallback, scaleFactor),\r\n    logicalCenterPosition: {\r\n      x: logicalSize.width / 2,\r\n      y: logicalSize.height / 2\r\n    }\r\n  };\r\n};\r\n","/**\r\n * ---- p5util setup ----------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\n\r\n/**\r\n * A list of functions that will be called in `p.setup()`.\r\n */\r\nexport const onSetup: ((p: p5) => void)[] = [];\r\n","/**\r\n * ---- p5util main -----------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { getElementOrBody } from \"../environment\";\r\nimport { RectangleSize } from \"../dataTypes\";\r\nimport { loop } from \"../ds/array\";\r\nimport { setP5Instance, setCanvas } from \"./shared\";\r\nimport { createScaledCanvas } from \"./canvas\";\r\nimport { onSetup } from \"./setup\";\r\n\r\nexport interface SketchSettings {\r\n  /**\r\n   * The ID of the HTML element to which the canvas should belong.\r\n   */\r\n  htmlElementId: string;\r\n\r\n  /**\r\n   * The logical (i.e. non-scaled) size of the canvas, e.g. `{ width: 640, height: 480 }`;\r\n   */\r\n  logicalCanvasSize: RectangleSize;\r\n\r\n  /**\r\n   * Callback function that will be called in `p.setup()`.\r\n   * The canvas will be automatically created and should not be manually created in this function.\r\n   */\r\n  initialize: () => void;\r\n\r\n  /**\r\n   * Callback function that sets several methods of `p5` instance, e.g. `p.draw()`.\r\n   */\r\n  setP5Methods: (p5Instance: p5) => void;\r\n}\r\n\r\n/**\r\n * Calls `new p5()` with the given settings information.\r\n * @param settings\r\n */\r\nexport const startSketch = (settings: SketchSettings): void => {\r\n  const htmlElement = getElementOrBody(settings.htmlElementId);\r\n\r\n  new p5((p: p5): void => {\r\n    setP5Instance(p);\r\n    p.setup = (): void => {\r\n      setCanvas(createScaledCanvas(htmlElement, settings.logicalCanvasSize));\r\n      settings.initialize();\r\n      loop(onSetup, listener => listener(p));\r\n      onSetup.length = 0;\r\n    };\r\n    settings.setP5Methods(p);\r\n  }, htmlElement);\r\n};\r\n","/**\r\n * ---- p5.js pixels utility -------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\nimport { p } from \"./shared\";\r\n\r\n/**\r\n * Runs `drawCallback` and `p.loadPixels()`, then returns `p.pixels`.\r\n * The style and transformations will be restored by using `p.push()` and `p.pop()`.\r\n * @param p The p5 instance.\r\n * @param drawCallback\r\n */\r\nexport const createPixels = (drawCallback: () => void | p5): number[] => {\r\n  p.push();\r\n  drawCallback();\r\n  p.pop();\r\n  p.loadPixels();\r\n\r\n  return p.pixels;\r\n};\r\n\r\n/**\r\n * Replaces the whole pixels of the canvas.\r\n * Assigns the given pixels to `p.pixels` and calls `p.updatePixels()`.\r\n * @param pixels\r\n */\r\nexport const replacePixels = (pixels: number[]): void => {\r\n  p.pixels = pixels;\r\n  p.updatePixels();\r\n};\r\n","/**\r\n * ---- p5.js pause utility --------------------------------------------------\r\n */\r\n\r\nimport { p } from \"./shared\";\r\n\r\nlet paused = false;\r\n\r\nexport const pauseOrResume = () => {\r\n  if (paused) {\r\n    p.loop();\r\n    paused = false;\r\n  } else {\r\n    p.noLoop();\r\n    paused = true;\r\n  }\r\n};\r\n","/**\r\n * ---- Settings -------------------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./common/dataTypes\";\r\n\r\n/**\r\n * The id of the HTML element to which the canvas should belong.\r\n */\r\nexport const HTML_ELEMENT_ID = \"LinesOfData\";\r\n\r\n/**\r\n * The logical size of the canvas.\r\n */\r\nexport const LOGICAL_CANVAS_SIZE: RectangleSize = {\r\n  width: 800,\r\n  height: 800\r\n};\r\n","/**\r\n * ---- Common math utility --------------------------------------------------\r\n */\r\n\r\nexport const sq = (v: number) => v * v;\r\n\r\nexport const cubic = (v: number) => v * v * v;\r\n\r\nexport const TWO_PI = 2 * Math.PI;\r\n\r\nexport const createAngleArray = (resolution: number): readonly number[] => {\r\n  const array: number[] = new Array(resolution);\r\n  const interval = TWO_PI / resolution;\r\n  for (let i = 0; i < resolution; i += 1) array[i] = i * interval;\r\n\r\n  return array;\r\n};\r\n\r\nexport const nearlyEqual = (a: number, b: number): boolean =>\r\n  Math.abs(a - b) < 0.0000000000001;\r\n","import { createAngleArray } from \"./common/math\";\r\nimport { NumberRange } from \"./common/dataTypes\";\r\n\r\nexport const LINE_LIST_INITIAL_CAPACITY = 32;\r\nexport const STROKE_WEIGHT = 2;\r\nexport const BACKGROUND_COLOR_ARRAY = [248, 248, 252];\r\n\r\nexport const ANGLES = createAngleArray(8);\r\nexport const RIGHT_SEQUENCE_OFFSET: NumberRange = { start: 50, end: 150 };\r\nexport const SEQUENCE_WIDTH = 10;\r\nexport const DATA_UNIT_LENGTH: NumberRange = { start: 2, end: 15 };\r\nexport const DATA_UNIT_SHORT_INTERVAL: NumberRange = { start: 3, end: 20 };\r\nexport const DATA_UNIT_LONG_INTERVAL: NumberRange = { start: 40, end: 160 };\r\nexport const SHORT_INTERVAL_PROBABILITY = 0.8;\r\n\r\nexport const LINE_LENGTH: NumberRange = { start: 20, end: 600 };\r\nexport const LINE_CREATION_TRY_COUNT = 1000;\r\nexport const AREA_MARGIN = 80;\r\nexport const BIRTH_DEATH_DURATION_FACTOR = 1 / 15;\r\nexport const WAIT_DURATION = 30;\r\n\r\n// https://colorhunt.co/palette/144426 +a\r\nexport const DATA_UNIT_COLOR_CODES: readonly string[] = [\r\n  \"#7189bf\",\r\n  \"#df7599\",\r\n  \"#ffc785\",\r\n  \"#72d6c9\",\r\n  \"#202020\"\r\n];\r\nexport const LINE_COLOR_CODE = \"#202020\";\r\n","/**\r\n * ---- Vector 2D ------------------------------------------------------------\r\n */\r\n\r\nexport interface Vector2D {\r\n  readonly x: number;\r\n  readonly y: number;\r\n}\r\n\r\nexport const addPolar = (vector: Vector2D, angle: number, length: number) => {\r\n  return {\r\n    x: vector.x + length * Math.cos(angle),\r\n    y: vector.y + length * Math.sin(angle)\r\n  };\r\n};\r\n","/**\r\n * ---- Common lazy evaluation utility ---------------------------------------\r\n */\r\n\r\nexport class Lazy<T> {\r\n  public value: T | undefined = undefined;\r\n\r\n  public constructor(readonly factory: () => T) {}\r\n\r\n  public get(): T {\r\n    return this.value || (this.value = this.factory());\r\n  }\r\n\r\n  public clear(): Lazy<T> {\r\n    this.value = undefined;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const lazy = <T>(factory: () => T): Lazy<T> => new Lazy(factory);\r\n","/**\r\n * ---- Common random utility ------------------------------------------------\r\n */\r\n\r\nimport { NumberRange } from \"./dataTypes\";\r\n\r\n/**\r\n * Returns random value from `start` up to (but not including) `end`.\r\n * @param start\r\n * @param end\r\n * @return A random value.\r\n */\r\nexport const between = (start: number, end: number) =>\r\n  start + Math.random() * (end - start);\r\n\r\n/**\r\n * Returns random value from `range.start` up to (but not including) `range.end`.\r\n * @param range\r\n * @return A random value.\r\n */\r\nexport const inRange = (range: NumberRange) => between(range.start, range.end);\r\n\r\nexport const betweenPow = (start: number, end: number, exponent: number) =>\r\n  start + Math.pow(Math.random(), exponent) * (end - start);\r\n\r\nexport const inRangePow = (range: NumberRange, exponent: number) =>\r\n  betweenPow(range.start, range.end, exponent);\r\n\r\n/**\r\n * Returns random integer from 0 up to (but not including) `maxInt`.\r\n * `maxInt` is not expected to be negative.\r\n * @param maxInt\r\n * @return A random integer value.\r\n */\r\nexport const pickInt = (maxInt: number) => Math.floor(Math.random() * maxInt);\r\n\r\n/**\r\n * Returns random integer from `minInt` up to (but not including) `maxInt`.\r\n * The case where `minInt > maxInt` is not expected.\r\n * @param minInt\r\n * @param maxInt\r\n * @return A random integer value.\r\n */\r\nexport const pickIntBetween = (minInt: number, maxInt: number) =>\r\n  minInt + pickInt(maxInt - minInt);\r\n\r\n/**\r\n * Returns `n` or `-n` randomly.\r\n * @param n - any number\r\n * @return A random-signed value of `n`.\r\n */\r\nexport const signed = (n: number) => (Math.random() < 0.5 ? n : -n);\r\n\r\n/**\r\n * Returns one element of `array` randomly.\r\n * `array` is not expected to be empty.\r\n * @param array\r\n * @return A random element.\r\n */\r\nexport const fromArray = <T>(array: readonly T[]) =>\r\n  array[pickInt(array.length)];\r\n\r\n/**\r\n * Removes and returns one element from `array` randomly.\r\n * `array` is not expected to be empty.\r\n * @param array\r\n * @return A random element.\r\n */\r\nexport const removeFromArray = <T>(array: T[]): T =>\r\n  array.splice(pickInt(array.length), 1)[0];\r\n\r\nexport const bool = (probability: number): boolean =>\r\n  Math.random() < probability;\r\n","/**\r\n * ---- Common easing utility ------------------------------------------------\r\n */\r\n\r\nimport { sq, cubic } from \"./math\";\r\n\r\n/**\r\n * Linear easing function.\r\n * @param ratio\r\n */\r\nexport const easeLinear = (ratio: number): number => ratio;\r\n\r\n/**\r\n * easeInQuad.\r\n * @param ratio\r\n */\r\nexport const easeInQuad = sq;\r\n\r\n/**\r\n * easeOutQuad.\r\n * @param ratio\r\n */\r\nexport const easeOutQuad = (ratio: number): number => -sq(ratio - 1) + 1;\r\n\r\n/**\r\n * easeInCubic.\r\n * @param ratio\r\n */\r\nexport const easeInCubic = cubic;\r\n\r\n/**\r\n * easeOutCubic.\r\n * @param ratio\r\n */\r\nexport const easeOutCubic = (ratio: number): number => cubic(ratio - 1) + 1;\r\n\r\n/**\r\n * easeInQuart.\r\n * @param ratio\r\n */\r\nexport const easeInQuart = (ratio: number): number => Math.pow(ratio, 4);\r\n\r\n/**\r\n * easeOutQuart.\r\n * @param ratio\r\n */\r\nexport const easeOutQuart = (ratio: number): number =>\r\n  -Math.pow(ratio - 1, 4) + 1;\r\n\r\nconst EASE_OUT_BACK_DEFAULT_COEFFICIENT = 1.70158;\r\n\r\n/**\r\n * easeOutBack.\r\n * @param ratio\r\n */\r\nexport const easeOutBack = (ratio: number): number => {\r\n  const r = ratio - 1;\r\n\r\n  return (\r\n    (EASE_OUT_BACK_DEFAULT_COEFFICIENT + 1) * cubic(r) +\r\n    EASE_OUT_BACK_DEFAULT_COEFFICIENT * sq(r) +\r\n    1\r\n  );\r\n};\r\n\r\n/**\r\n * Easing function.\r\n */\r\nexport interface Easing {\r\n  (ratio: number): number;\r\n}\r\n\r\n/**\r\n * Returns an easeOut function.\r\n * @param exponent - Integer from 1 to 4.\r\n */\r\nexport function getEasingFunction(exponent: number): Easing {\r\n  switch (Math.floor(exponent)) {\r\n    default:\r\n    case 1:\r\n      return easeLinear;\r\n    case 2:\r\n      return easeOutQuad;\r\n    case 3:\r\n      return easeOutCubic;\r\n    case 4:\r\n      return easeOutQuart;\r\n  }\r\n}\r\n","/**\r\n * ---- Common timer utility ------------------------------------------------\r\n */\r\n\r\nimport { loop } from \"./ds/array\";\r\nimport { Mutable } from \"./utility-types\";\r\n\r\ntype Listener = (timerUnit: Unit) => void;\r\n\r\nexport interface Unit {\r\n  readonly duration: number;\r\n  readonly progressRatioChangeRate: number;\r\n  readonly onProgress: Listener;\r\n  readonly onComplete: Listener;\r\n  count: number;\r\n  progressRatio: number;\r\n  isCompleted: boolean;\r\n}\r\n\r\nconst emptyListener: Listener = () => {};\r\n\r\nexport const reset = (timerUnit: Unit) => {\r\n  timerUnit.count = 0;\r\n  timerUnit.progressRatio = 0;\r\n  timerUnit.isCompleted = false;\r\n};\r\n\r\nexport const step = (timerUnit: Unit) => {\r\n  const { isCompleted, count, duration, progressRatioChangeRate } = timerUnit;\r\n\r\n  if (isCompleted) return;\r\n\r\n  if (count >= duration) {\r\n    timerUnit.progressRatio = 1;\r\n    timerUnit.onProgress(timerUnit);\r\n    timerUnit.isCompleted = true;\r\n    timerUnit.onComplete(timerUnit);\r\n    return;\r\n  }\r\n\r\n  timerUnit.onProgress(timerUnit);\r\n  timerUnit.count += 1;\r\n  timerUnit.progressRatio += progressRatioChangeRate;\r\n};\r\n\r\nexport const create = (\r\n  duration: number,\r\n  onProgress: Listener = emptyListener,\r\n  onComplete: Listener = emptyListener\r\n): Unit => {\r\n  return {\r\n    duration,\r\n    progressRatioChangeRate: 1 / duration,\r\n    onProgress,\r\n    onComplete,\r\n    count: 0,\r\n    progressRatio: 0,\r\n    isCompleted: false\r\n  };\r\n};\r\n\r\nexport const dummyUnit = create(0);\r\n\r\nexport const addOnComplete = (timerUnit: Unit, onComplete: Listener): Unit => {\r\n  const newUnit: Mutable<Unit> = Object.assign({}, timerUnit);\r\n  newUnit.onComplete = () => {\r\n    timerUnit.onComplete(newUnit);\r\n    onComplete(newUnit);\r\n  };\r\n  return newUnit;\r\n};\r\n\r\nexport const setChainIndex = (chain: Chain, index: number) => {\r\n  chain.index = index;\r\n  chain.current = chain.units[index];\r\n};\r\n\r\nexport const resetChain = (chain: Chain) => {\r\n  loop(chain.units, reset);\r\n  setChainIndex(chain, 0);\r\n};\r\n\r\nexport const shiftChain = (chain: Chain) =>\r\n  setChainIndex(chain, chain.index + 1);\r\n\r\nexport interface Chain {\r\n  readonly units: readonly Unit[];\r\n  current: Unit;\r\n  index: number;\r\n}\r\n\r\nexport const chain = (timers: Unit[], looped: boolean = false) => {\r\n  // eslint-disable-next-line prefer-const\r\n  let newChain: Chain;\r\n  const newTimers: Unit[] = new Array(timers.length);\r\n\r\n  const shift = () => shiftChain(newChain);\r\n  const lastIndex = timers.length - 1;\r\n  for (let i = 0; i < lastIndex; i += 1) {\r\n    newTimers[i] = addOnComplete(timers[i], shift);\r\n  }\r\n  if (!looped) newTimers[lastIndex] = timers[lastIndex];\r\n  else\r\n    newTimers[lastIndex] = addOnComplete(timers[lastIndex], () =>\r\n      resetChain(newChain)\r\n    );\r\n\r\n  newChain = {\r\n    units: newTimers,\r\n    current: newTimers[0],\r\n    index: 0\r\n  };\r\n\r\n  return newChain;\r\n};\r\n\r\nexport const dummyChain = chain([dummyUnit]);\r\n","/**\r\n * ---- Line -----------------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\n\r\nimport { MutableNumberRange } from \"./common/dataTypes\";\r\nimport { Vector2D, addPolar } from \"./common/ds/vector-2d\";\r\nimport { lazy } from \"./common/lazy\";\r\nimport { nearlyEqual } from \"./common/math\";\r\nimport * as random from \"./common/random\";\r\nimport * as easing from \"./common/easing\";\r\nimport * as Timer from \"./common/timer\";\r\nimport { containsPoint } from \"./common/boundingBox\";\r\nimport { Sweepable } from \"./common/ds/sweepable\";\r\n\r\nimport { p, canvas } from \"./common/p5util/shared\";\r\nimport { drawTranslatedAndRotated } from \"./common/p5util/transform\";\r\n\r\nimport * as constants from \"./constants\";\r\n\r\nconst colorCandidates = lazy(() =>\r\n  constants.DATA_UNIT_COLOR_CODES.map(code => p.color(code))\r\n);\r\nconst lineColor = lazy(() => p.color(constants.LINE_COLOR_CODE));\r\n\r\ninterface DataUnit {\r\n  readonly color: p5.Color;\r\n  readonly start: number;\r\n  readonly end: number;\r\n}\r\n\r\nconst createSequence = (\r\n  length: number,\r\n  offset: number\r\n): readonly DataUnit[] => {\r\n  const sequence: DataUnit[] = [];\r\n  let x = offset;\r\n  while (x < length) {\r\n    const nextX = Math.min(\r\n      length,\r\n      x + random.inRangePow(constants.DATA_UNIT_LENGTH, 3)\r\n    );\r\n    sequence.push({\r\n      color: random.fromArray(colorCandidates.get()),\r\n      start: x,\r\n      end: nextX\r\n    });\r\n    x = nextX;\r\n    x += random.inRangePow(\r\n      random.bool(constants.SHORT_INTERVAL_PROBABILITY)\r\n        ? constants.DATA_UNIT_SHORT_INTERVAL\r\n        : constants.DATA_UNIT_LONG_INTERVAL,\r\n      2\r\n    );\r\n  }\r\n  return sequence;\r\n};\r\n\r\nconst drawSequence = (\r\n  sequence: readonly DataUnit[],\r\n  startX: number,\r\n  endX: number,\r\n  left: boolean\r\n) => {\r\n  const unitCount = sequence.length;\r\n  const height = (left ? -1 : 1) * constants.SEQUENCE_WIDTH;\r\n  for (let i = 0; i < unitCount; i += 1) {\r\n    const { color, start, end } = sequence[i];\r\n    if (end < startX) continue;\r\n    if (endX < start) continue;\r\n    p.fill(color);\r\n    p.rect(Math.max(startX, start), 0, Math.min(endX, end), height);\r\n  }\r\n};\r\n\r\ninterface LineData {\r\n  readonly length: number;\r\n  readonly leftSequence: readonly DataUnit[];\r\n  readonly rightSequence: readonly DataUnit[];\r\n}\r\n\r\nconst createLineData = (length: number): LineData => {\r\n  return {\r\n    length,\r\n    leftSequence: createSequence(length, 0),\r\n    rightSequence: createSequence(\r\n      length,\r\n      random.inRange(constants.RIGHT_SEQUENCE_OFFSET)\r\n    )\r\n  };\r\n};\r\n\r\ninterface LineGraphics {\r\n  data: LineData;\r\n  trimRatio: MutableNumberRange;\r\n  draw: () => void;\r\n}\r\n\r\nconst createLineGraphics = (data: LineData) => {\r\n  const trimRatio = {\r\n    start: 0,\r\n    end: 0\r\n  };\r\n  const length = data.length;\r\n  const draw = () => {\r\n    const startX = trimRatio.start * length;\r\n    const endX = trimRatio.end * length;\r\n    drawSequence(data.leftSequence, startX, endX, true);\r\n    drawSequence(data.rightSequence, startX, endX, false);\r\n    p.stroke(lineColor.get());\r\n    p.line(startX, 0, endX, 0);\r\n    p.noStroke();\r\n  };\r\n\r\n  return {\r\n    data,\r\n    trimRatio,\r\n    draw\r\n  };\r\n};\r\n\r\nexport interface Line extends Sweepable {\r\n  readonly startPoint: Vector2D;\r\n  readonly angle: number;\r\n  readonly graphics: LineGraphics;\r\n  readonly timers: Timer.Chain;\r\n  readonly onCreate: (line: Line) => void;\r\n}\r\n\r\nexport const drawLine = (line: Line) => {\r\n  const { x, y } = line.startPoint;\r\n  drawTranslatedAndRotated(line.graphics.draw, x, y, line.angle);\r\n};\r\n\r\nexport const updateLine = (line: Line) => Timer.step(line.timers.current);\r\n\r\nexport const createLine = (\r\n  startPoint: Vector2D,\r\n  angle: number,\r\n  length: number,\r\n  onCreate: (line: Line) => void\r\n): Line => {\r\n  const graphics = createLineGraphics(createLineData(length));\r\n  const { data, trimRatio } = graphics;\r\n\r\n  // eslint-disable-next-line prefer-const\r\n  let newLine: Line;\r\n  const birthDeathDuration = Math.ceil(\r\n    constants.BIRTH_DEATH_DURATION_FACTOR * data.length\r\n  );\r\n  const waitDuration = constants.WAIT_DURATION;\r\n\r\n  const onProgressBirth = (timer: Timer.Unit) => {\r\n    trimRatio.end = easing.easeOutCubic(timer.progressRatio);\r\n  };\r\n  const onCompleteBirth = () => {\r\n    for (let i = 0; i < constants.LINE_CREATION_TRY_COUNT; i += 1) {\r\n      const nextStartPoint = addPolar(startPoint, angle, length);\r\n      const nextAngle = random.fromArray(constants.ANGLES);\r\n      if (\r\n        angle === nextAngle ||\r\n        nearlyEqual(Math.abs(angle - nextAngle), Math.PI)\r\n      ) {\r\n        continue;\r\n      }\r\n      const nextLength = random.inRange(constants.LINE_LENGTH);\r\n      const nextEndPoint = addPolar(nextStartPoint, nextAngle, nextLength);\r\n\r\n      if (\r\n        !containsPoint(canvas.logicalSize, nextEndPoint, constants.AREA_MARGIN)\r\n      )\r\n        continue;\r\n\r\n      createLine(nextStartPoint, nextAngle, nextLength, onCreate);\r\n      break;\r\n    }\r\n  };\r\n  const onProgressDeath = (timer: Timer.Unit) => {\r\n    trimRatio.start = easing.easeInQuad(timer.progressRatio);\r\n  };\r\n  const onCompleteDeath = () => {\r\n    newLine.needsSweep = true;\r\n  };\r\n\r\n  const birthTimer = Timer.create(\r\n    birthDeathDuration,\r\n    onProgressBirth,\r\n    onCompleteBirth\r\n  );\r\n  const waitTimer = Timer.create(waitDuration);\r\n  const deathTimer = Timer.create(\r\n    birthDeathDuration,\r\n    onProgressDeath,\r\n    onCompleteDeath\r\n  );\r\n  const timers = Timer.chain([birthTimer, waitTimer, deathTimer]);\r\n\r\n  newLine = {\r\n    startPoint,\r\n    angle,\r\n    graphics,\r\n    timers,\r\n    onCreate,\r\n    needsSweep: false\r\n  };\r\n\r\n  onCreate(newLine);\r\n\r\n  return newLine;\r\n};\r\n","/**\r\n * ---- Main -----------------------------------------------------------------\r\n */\r\n\r\nimport p5 from \"p5\";\r\n\r\nimport * as list from \"./common/ds/array-list\";\r\nimport { ArrayList } from \"./common/ds/array-list\";\r\nimport { sweep } from \"./common/ds/sweepable\";\r\n\r\nimport { startSketch } from \"./common/p5util/main\";\r\nimport { p, canvas } from \"./common/p5util/shared\";\r\nimport { createPixels, replacePixels } from \"./common/p5util/pixels\";\r\nimport { pauseOrResume } from \"./common/p5util/pause\";\r\n\r\nimport { HTML_ELEMENT_ID, LOGICAL_CANVAS_SIZE } from \"./settings\";\r\nimport * as constants from \"./constants\";\r\nimport { Line, createLine, drawLine, updateLine } from \"./line\";\r\n\r\n// ---- variables ----\r\nlet lines: ArrayList<Line>;\r\n\r\n// ---- reset & initialize ----\r\n\r\nlet drawBackground: () => void;\r\n\r\nconst reset = (): void => {\r\n  list.clear(lines);\r\n  const onCreate = (line: Line) => list.add(lines, line);\r\n  createLine({ x: 100, y: 200 }, 0, 600, onCreate);\r\n  createLine({ x: 700, y: 600 }, Math.PI, 600, onCreate);\r\n};\r\n\r\nconst initialize = (): void => {\r\n  const backgroundColor = p.color(constants.BACKGROUND_COLOR_ARRAY);\r\n  drawBackground = replacePixels.bind(\r\n    null,\r\n    createPixels(() => p.background(backgroundColor))\r\n  );\r\n\r\n  p.noStroke();\r\n  p.strokeWeight(constants.STROKE_WEIGHT);\r\n  p.rectMode(p.CORNERS);\r\n\r\n  lines = list.create(constants.LINE_LIST_INITIAL_CAPACITY);\r\n\r\n  reset();\r\n};\r\n\r\n// ---- draw ----\r\n\r\nconst drawSketch = (): void => {\r\n  list.loop(lines, updateLine);\r\n  list.loop(lines, drawLine);\r\n  sweep(lines);\r\n};\r\n\r\nconst draw = (): void => {\r\n  drawBackground();\r\n  canvas.drawScaled(drawSketch);\r\n};\r\n\r\n// ---- UI ----\r\n\r\nconst mousePressed = (): void => {};\r\n\r\nconst keyTyped = (): void => {\r\n  switch (p.key) {\r\n    case \"p\":\r\n      pauseOrResume();\r\n      break;\r\n    case \"s\":\r\n      p.save(\"image.png\");\r\n      break;\r\n  }\r\n};\r\n\r\n// ---- start sketch ----\r\n\r\nconst setP5Methods = (p: p5): void => {\r\n  p.draw = draw;\r\n  p.mousePressed = mousePressed;\r\n  p.keyTyped = keyTyped;\r\n};\r\n\r\nstartSketch({\r\n  htmlElementId: HTML_ELEMENT_ID,\r\n  logicalCanvasSize: LOGICAL_CANVAS_SIZE,\r\n  initialize,\r\n  setP5Methods\r\n});\r\n"],"names":["loop","create","constants.DATA_UNIT_COLOR_CODES","constants.LINE_COLOR_CODE","random.inRangePow","constants.DATA_UNIT_LENGTH","random.fromArray","random.bool","constants.SHORT_INTERVAL_PROBABILITY","constants.DATA_UNIT_SHORT_INTERVAL","constants.DATA_UNIT_LONG_INTERVAL","constants.SEQUENCE_WIDTH","random.inRange","constants.RIGHT_SEQUENCE_OFFSET","Timer.step","constants.BIRTH_DEATH_DURATION_FACTOR","constants.WAIT_DURATION","easing.easeOutCubic","constants.LINE_CREATION_TRY_COUNT","constants.ANGLES","constants.LINE_LENGTH","constants.AREA_MARGIN","easing.easeInQuad","Timer.create","Timer.chain","reset","list.clear","list.add","constants.BACKGROUND_COLOR_ARRAY","constants.STROKE_WEIGHT","list.create","constants.LINE_LIST_INITIAL_CAPACITY","list.loop"],"mappings":"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"}