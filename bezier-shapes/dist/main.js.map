{"version":3,"file":"main.js","sources":["../src/settings.ts","../src/main.ts"],"sourcesContent":["import { HtmlUtility, RectangleSize } from \"@fal-works/creative-coding-core\";\n\n/**\n * The id of the HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT_ID = \"BezierShapes\";\n\n/**\n * The HTML element to which the canvas should belong.\n */\nexport const HTML_ELEMENT = HtmlUtility.getElementOrBody(HTML_ELEMENT_ID);\n\n/**\n * The logical size of the canvas.\n */\nexport const LOGICAL_CANVAS_SIZE: RectangleSize.Unit = {\n  width: 800,\n  height: 800\n};\n","import p5 from \"p5\";\nimport {\n  Bezier,\n  Vector2D,\n  Angle,\n  Random,\n  Math as Math2\n} from \"@fal-works/creative-coding-core\";\nimport {\n  startSketch,\n  p,\n  canvas,\n  createPixels,\n  replaceCanvasPixels,\n  drawBezierCurve,\n  drawBezierControlLines,\n  drawTranslated\n} from \"@fal-works/p5-extension\";\n\nimport { HTML_ELEMENT, LOGICAL_CANVAS_SIZE } from \"./settings\";\n\n// ---- variables | functions ----\n\nlet drawBackground: () => void;\nconst drawList: (() => void)[] = [];\nlet drawControlLines = false;\n\n// ---- reset & initialize ----\n\nconst reset = (): void => {\n  drawControlLines = !drawControlLines;\n  if (!drawControlLines) return;\n\n  drawList.length = 0;\n\n  const gridSize = Random.integerBetween(2, 5);\n  const { width, height } = canvas.logicalSize;\n  const xInterval = width / (gridSize + 1);\n  const yInterval = height / (gridSize + 1);\n\n  const vertexCount = Random.integerBetween(4, 7);\n  const angleInterval = Math2.TWO_PI / vertexCount;\n\n  const randomAngleOffset = () => Random.between(-0.3, 0.3) * angleInterval;\n  const randomDistanceFactor = () => Random.between(0.7, 1.3);\n  const randomLength = () => Random.between(20, 100);\n  const baseVertexDistance = (800 / (gridSize + 1)) * 0.4;\n\n  const createVertex = (angle: number) => {\n    return {\n      point: Vector2D.fromPolar(\n        randomDistanceFactor() * baseVertexDistance,\n        randomAngleOffset() + angle\n      ),\n      controlLine: {\n        length: randomLength(),\n        angle: randomAngleOffset() + angle + Math2.HALF_PI\n      }\n    };\n  };\n\n  const createDrawShape = () => {\n    const vertices = Angle.createArray(vertexCount).map(createVertex);\n    const closedVertices = vertices.concat(vertices[0]);\n    const curve = Bezier.createCurve(closedVertices);\n\n    return () => {\n      p.noStroke();\n      p.fill(48);\n      p.beginShape();\n      drawBezierCurve(curve);\n      p.endShape(p.CLOSE);\n\n      if (drawControlLines) {\n        p.stroke(224, 0, 64);\n        drawBezierControlLines(vertices);\n      }\n    };\n  };\n\n  const createDrawShapeTranslated = (column: number, row: number) => {\n    const drawShape = createDrawShape();\n    const x = (column + 1) * xInterval;\n    const y = (row + 1) * yInterval;\n\n    return () => drawTranslated(drawShape, x, y);\n  };\n\n  for (let column = 0; column < gridSize; column += 1) {\n    for (let row = 0; row < gridSize; row += 1) {\n      drawList.push(createDrawShapeTranslated(column, row));\n    }\n  }\n};\n\nconst initialize = (): void => {\n  const backgroundPixels = createPixels(() => {\n    p.background(248);\n  });\n  drawBackground = () => replaceCanvasPixels(backgroundPixels);\n\n  reset();\n\n  p.noLoop();\n};\n\n// ---- draw ----\n\nconst drawSketch = (): void => {\n  for (const draw of drawList) draw();\n};\n\nconst draw = (): void => {\n  drawBackground();\n  canvas.drawScaled(drawSketch);\n};\n\n// ---- UI ----\n\nconst mousePressed = () => {\n  reset();\n  p.redraw();\n};\n\nconst keyTyped = (): void => {\n  switch (p.key) {\n    // case \"p\":\n    //   pauseOrResume();\n    //   break;\n    case \"s\":\n      p.save(\"image.png\");\n      break;\n    case \"r\":\n      reset();\n      break;\n  }\n};\n\n// ---- start sketch ----\n\nconst setP5Methods = (p: p5): void => {\n  p.draw = draw;\n  p.mousePressed = mousePressed;\n  p.keyTyped = keyTyped;\n};\n\nstartSketch({\n  htmlElement: HTML_ELEMENT,\n  logicalCanvasSize: LOGICAL_CANVAS_SIZE,\n  initialize,\n  setP5Methods\n});\n"],"names":["HtmlUtility","Random","canvas","Math2","Vector2D","Angle","Bezier","p","drawBezierCurve","drawBezierControlLines","drawTranslated","createPixels","replaceCanvasPixels","startSketch"],"mappings":"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"}