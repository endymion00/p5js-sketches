{"version":3,"file":"sketch.js","sources":["../src/common/environment.ts","../src/common/random.ts","../src/common/array.ts","../src/common/boundingBox.ts","../src/p5util/canvas.ts","../src/p5util/color.ts","../src/p5util/drawing.ts","../src/p5util/transform.ts","../src/functions.ts","../src/main.ts"],"sourcesContent":["/**\r\n * ------------------------------------------------------------------------\r\n *  Common environment utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\n\r\n/**\r\n * Finds HTML element by `id`. If not found, returns `document.body`.\r\n * @param id\r\n */\r\nexport function getElementOrBody(id: string): HTMLElement {\r\n  return document.getElementById(id) || document.body;\r\n}\r\n\r\n/**\r\n * Returns the width and height of `node`.\r\n * If `node === document.body`, returns the inner width and height of `window`.\r\n * @param node\r\n */\r\nexport function getElementSize(node: Element): RectangleSize {\r\n  if (node === document.body)\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n  const boundingClientRect = node.getBoundingClientRect();\r\n\r\n  return {\r\n    width: boundingClientRect.width,\r\n    height: boundingClientRect.height\r\n  };\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  Common random utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Returns random value from `start` up to (but not including) `end`.\r\n */\r\nexport function between(start: number, end: number): number {\r\n  return start + Math.random() * (end - start);\r\n}\r\n\r\n/**\r\n * Returns random integer from 0 up to (but not including) `maxInt`.\r\n * `maxInt` is not expected to be negative.\r\n */\r\nexport function int(maxInt: number): number {\r\n  return Math.floor(Math.random() * maxInt);\r\n}\r\n\r\n/**\r\n * Returns random integer from the min number up to (but not including) the max number.\r\n * The case where `minInt < maxInt` is not expected.\r\n */\r\nexport function intBetween(minInt: number, maxInt: number): number {\r\n  return minInt + int(maxInt - minInt);\r\n}\r\n\r\n/**\r\n * Returns `n` or `-n` randomly.\r\n * @param {number} n - any number\r\n */\r\nexport function signed(n: number): number {\r\n  if (Math.random() < 0.5) return n;\r\n\r\n  return -n;\r\n}\r\n\r\n/**\r\n * Returns one element of `array` randomly.\r\n * Throws error if `array` is empty.\r\n * @param array\r\n */\r\nexport function fromArray<T>(array: T[]): T {\r\n  const length = array.length;\r\n  if (length === 0) throw new Error(\"Passed empty array.\");\r\n\r\n  return array[int(length)];\r\n}\r\n\r\n/**\r\n * Returns and removes one array element randomly.\r\n * Throws error if `array` is empty.\r\n * @param array\r\n */\r\nexport function removeFromArray<T>(array: T[]): T {\r\n  const length = array.length;\r\n  if (length === 0) throw new Error(\"Passed empty array.\");\r\n\r\n  return array.splice(int(length), 1)[0];\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  Common array utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nexport function loopLimited<T>(\r\n  array: T[],\r\n  callback: (currentValue: T, index?: number, array?: T[]) => any,\r\n  arrayLength: number\r\n) {\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    callback(array[i], i, array);\r\n  }\r\n}\r\n\r\n/**\r\n * Runs `callback` once for each element of `array`.\r\n * @param array\r\n * @param {loopArrayCallBack} callback\r\n */\r\nexport function loop<T>(\r\n  array: T[],\r\n  callback: (currentValue: T, index?: number, array?: T[]) => any\r\n) {\r\n  const arrayLength = array.length;\r\n\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    callback(array[i], i, array);\r\n  }\r\n}\r\n\r\nexport function loopBackwardsLimited<T>(\r\n  array: T[],\r\n  callback: (currentValue: T, index?: number, array?: T[]) => any,\r\n  arrayLength: number\r\n) {\r\n  if (arrayLength < 0)\r\n    throw new RangeError(`arrayLength ${arrayLength} is invalid.`);\r\n\r\n  while (arrayLength--) {\r\n    callback(array[arrayLength], arrayLength, array);\r\n  }\r\n}\r\n\r\n/**\r\n * Runs `callback` once for each element of `array` in descending order.\r\n * @param array\r\n * @param {loopArrayCallback} callback\r\n */\r\nexport function loopBackwards<T>(\r\n  array: T[],\r\n  callback: (currentValue: T, index?: number, array?: T[]) => any\r\n) {\r\n  let arrayLength = array.length;\r\n\r\n  while (arrayLength--) {\r\n    callback(array[arrayLength], arrayLength, array);\r\n  }\r\n}\r\n\r\nexport function nestedLoopJoinLimited<T, U>(\r\n  array: T[],\r\n  otherArray: U[],\r\n  callback: (element: T, otherElement: U) => any,\r\n  arrayLength: number,\r\n  otherArrayLength: number\r\n): void {\r\n  for (let i = 0; i < arrayLength; i += 1) {\r\n    for (let k = 0; k < otherArrayLength; k += 1) {\r\n      callback(array[i], otherArray[k]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Joins two arrays and runs `callback` once for each joined pair.\r\n * @param array\r\n * @param otherArray\r\n * @param callback\r\n */\r\nexport function nestedLoopJoin<T, U>(\r\n  array: T[],\r\n  otherArray: U[],\r\n  callback: (element: T, otherElement: U) => any\r\n): void {\r\n  nestedLoopJoinLimited(\r\n    array,\r\n    otherArray,\r\n    callback,\r\n    array.length,\r\n    otherArray.length\r\n  );\r\n}\r\n\r\nexport function roundRobinLimited<T>(\r\n  array: T[],\r\n  callback: (element: T, otherElement: T) => any,\r\n  arrayLength: number\r\n) {\r\n  const iLen = arrayLength - 1;\r\n  for (let i = 0; i < iLen; i += 1) {\r\n    for (let k = i + 1; k < arrayLength; k += 1) {\r\n      callback(array[i], array[k]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Runs `callback` once for each pair within `array`.\r\n * @param array\r\n * @param callback\r\n */\r\nexport function roundRobin<T>(\r\n  array: T[],\r\n  callback: (element: T, otherElement: T) => any\r\n): void {\r\n  roundRobinLimited(array, callback, array.length);\r\n}\r\n\r\n/**\r\n * Creates a new 1-dimensional array from a 2-dimensional array.\r\n * @param arrays\r\n */\r\nexport function flat<T>(arrays: T[][]): T[] {\r\n  return [].concat.apply([], arrays);\r\n}\r\n\r\n/**\r\n * An alternative to `Array.prototype.flat()`.\r\n * @param array\r\n */\r\nexport function flatRecursive<T>(\r\n  array: (T | T[])[],\r\n  depth: number = 1\r\n): (T | T[])[] {\r\n  if (depth <= 0) return array;\r\n\r\n  const accumulator: (T | T[])[] = [];\r\n  const len = array.length;\r\n\r\n  for (let i = 0; i < len; i += 1) {\r\n    const currentElement = array[i];\r\n\r\n    if (Array.isArray(currentElement))\r\n      accumulator.concat(flatRecursive(currentElement, depth - 1));\r\n    else accumulator.concat(currentElement);\r\n  }\r\n\r\n  return accumulator;\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  Common bounding box utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\n\r\nexport enum FittingOption {\r\n  FIT_TO_BOX,\r\n  FIT_WIDTH,\r\n  FIT_HEIGHT\r\n}\r\n\r\n/**\r\n * Calculates the scale factor for fitting `nonScaledSize` to `targetSize` keeping the original aspect ratio.\r\n *\r\n * @param nonScaledSize\r\n * @param targetSize\r\n * @param fittingOption\r\n */\r\nexport function calculateScaleFactor(\r\n  nonScaledSize: RectangleSize,\r\n  targetSize: RectangleSize,\r\n  fittingOption?: FittingOption\r\n): number {\r\n  switch (fittingOption) {\r\n    default:\r\n    case FittingOption.FIT_TO_BOX:\r\n      const scaleFactorCandidate = targetSize.width / nonScaledSize.width;\r\n      const nonScaledHeight = nonScaledSize.height;\r\n      const targetHeight = targetSize.height;\r\n\r\n      if (scaleFactorCandidate * nonScaledHeight < targetHeight) {\r\n        return scaleFactorCandidate;\r\n      } else {\r\n        return targetHeight / nonScaledHeight;\r\n      }\r\n\r\n    case FittingOption.FIT_WIDTH:\r\n      return targetSize.width / nonScaledSize.width;\r\n\r\n    case FittingOption.FIT_HEIGHT:\r\n      return targetSize.height / nonScaledSize.height;\r\n  }\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  p5.js canvas utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"../common/dataTypes\";\r\nimport { FittingOption, calculateScaleFactor } from \"../common/boundingBox\";\r\nimport { getElementOrBody, getElementSize } from \"../common/environment\";\r\n\r\nexport interface ScaledCanvas {\r\n  p5Canvas: p5.Renderer;\r\n  scaleFactor: number;\r\n}\r\n\r\n/**\r\n * Runs `p.createCanvas()` with the scaled size that fits to `node`.\r\n * Returns the created canvas ant the scale factor.\r\n *\r\n * @param p The p5 instance.\r\n * @param node The HTML element or its ID.\r\n * @param nonScaledSize\r\n * @param fittingOption\r\n * @param renderer\r\n */\r\nexport function createScaledCanvas(\r\n  p: p5,\r\n  node: HTMLElement | string,\r\n  nonScaledSize: RectangleSize,\r\n  fittingOption?: FittingOption,\r\n  renderer?: \"p2d\" | \"webgl\" | undefined\r\n): ScaledCanvas {\r\n  let htmlElement: HTMLElement;\r\n\r\n  if (typeof node === \"string\") htmlElement = getElementOrBody(node);\r\n  else htmlElement = node;\r\n\r\n  const maxCanvasRegion = getElementSize(htmlElement);\r\n  const scaleFactor = calculateScaleFactor(\r\n    nonScaledSize,\r\n    maxCanvasRegion,\r\n    fittingOption\r\n  );\r\n\r\n  const canvas = p.createCanvas(\r\n    scaleFactor * nonScaledSize.width,\r\n    scaleFactor * nonScaledSize.height,\r\n    renderer\r\n  );\r\n\r\n  return {\r\n    p5Canvas: canvas,\r\n    scaleFactor: scaleFactor\r\n  };\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  p5.js color utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Creates a new color with RGB values of `color` and alpha value `alpha`.\r\n * The original alpha value of `color` will be ignored.\r\n * @param p\r\n * @param color\r\n * @param alpha\r\n */\r\nexport function alphaColor(p: p5, color: p5.Color, alpha: number): p5.Color {\r\n  return p.color(p.red(color), p.green(color), p.blue(color), alpha);\r\n}\r\n\r\nexport interface ShapeColor {\r\n  strokeColor: p5.Color | undefined | null;\r\n  fillColor: p5.Color | undefined | null;\r\n}\r\n\r\nexport interface ApplyColorFunction {\r\n  (): void;\r\n}\r\n\r\n/**\r\n * Creates a composite function of `p.stroke()` and `p.fill()`.\r\n * A `null` color will be interpreted as `p.noStroke()` or `p.noFill()`.\r\n * An `undefined` color will have no effect.\r\n *\r\n * @param p\r\n * @param shapeColor\r\n */\r\nexport function createApplyColor(\r\n  p: p5,\r\n  shapeColor: ShapeColor\r\n): ApplyColorFunction {\r\n  const strokeColor = shapeColor.strokeColor;\r\n  const fillColor = shapeColor.fillColor;\r\n\r\n  if (strokeColor && fillColor) {\r\n    return () => {\r\n      p.stroke(strokeColor);\r\n      p.fill(fillColor);\r\n    };\r\n  }\r\n\r\n  if (strokeColor) {\r\n    if (fillColor === null)\r\n      return () => {\r\n        p.stroke(strokeColor);\r\n        p.noFill();\r\n      };\r\n    else\r\n      return () => {\r\n        p.stroke(strokeColor);\r\n      };\r\n  }\r\n  if (fillColor) {\r\n    if (strokeColor === null)\r\n      return () => {\r\n        p.noStroke();\r\n        p.fill(fillColor);\r\n      };\r\n    else return () => p.fill(fillColor);\r\n  }\r\n\r\n  if (strokeColor === null) {\r\n    if (fillColor === null) {\r\n      return () => {\r\n        p.noStroke();\r\n        p.noFill();\r\n      };\r\n    } else return () => p.noStroke();\r\n  } else {\r\n    if (fillColor === null) return () => p.noFill();\r\n  }\r\n\r\n  return () => {};\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  p5.js drawing utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Set color to the specified pixel.\r\n * Should be used in conjunction with loadPixels() and updatePixels().\r\n * @param renderer - Instance of either p5 or p5.Graphics.\r\n * @param x - The x index of the pixel.\r\n * @param y - The y index of the pixel.\r\n * @param red - The red value (0 - 255).\r\n * @param green - The green value (0 - 255).\r\n * @param blue - The blue value (0 - 255).\r\n * @param pixelDensity - If not specified, renderer.pixelDensity() will be called.\r\n */\r\nexport function setPixel(\r\n  renderer: p5 | p5.Graphics,\r\n  x: number,\r\n  y: number,\r\n  red: number,\r\n  green: number,\r\n  blue: number,\r\n  alpha: number,\r\n  pixelDensity?: number\r\n): void {\r\n  const g = renderer as p5;\r\n  const d = pixelDensity || g.pixelDensity();\r\n  const graphicsPixels = g.pixels;\r\n\r\n  for (let i = 0; i < d; i += 1) {\r\n    for (let j = 0; j < d; j += 1) {\r\n      const idx = 4 * ((y * d + j) * g.width * d + (x * d + i));\r\n      graphicsPixels[idx] = red;\r\n      graphicsPixels[idx + 1] = green;\r\n      graphicsPixels[idx + 2] = blue;\r\n      graphicsPixels[idx + 3] = alpha;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` and `p.loadPixels()`, then returns `p.pixels`.\r\n * The style and transformations will be restored by using `p.push()` and `p.pop()`.\r\n * @param p The p5 instance.\r\n * @param drawCallback\r\n */\r\nexport function createPixels(p: p5, drawCallback: (p: p5) => any): number[] {\r\n  p.push();\r\n  drawCallback(p);\r\n  p.pop();\r\n  p.loadPixels();\r\n\r\n  return p.pixels;\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  p5.js transformation utility\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Runs `drawCallback` translated with `offsetX` and `offsetY`,\r\n * then restores the transformation by calling `p.translate()` with negative values.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport function drawTranslated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  offsetX: number,\r\n  offsetY: number\r\n): void {\r\n  p.translate(offsetX, offsetY);\r\n  drawCallback(p);\r\n  p.translate(-offsetX, -offsetY);\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` rotated with `angle`,\r\n * then restores the transformation by calling `p.rotate()` with the negative value.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport function drawRotated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  angle: number\r\n): void {\r\n  p.rotate(angle);\r\n  drawCallback(p);\r\n  p.rotate(-angle);\r\n}\r\n\r\n/**\r\n * Composite of `drawTranslated()` and `drawRotated()`.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport function drawTranslatedAndRotated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  rotationAngle: number\r\n): void {\r\n  p.translate(offsetX, offsetY);\r\n  drawRotated(p, drawCallback, rotationAngle);\r\n  p.translate(-offsetX, -offsetY);\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` scaled with `scaleFactor`,\r\n * then restores the transformation by scaling with the inversed factor.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport function drawScaled(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  scaleFactor: number\r\n): void {\r\n  p.scale(scaleFactor);\r\n  drawCallback(p);\r\n  p.scale(1 / scaleFactor);\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  Other functions\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./common/dataTypes\";\r\nimport { setPixel } from \"./p5util/drawing\";\r\n\r\nexport function createRandomTextureGraphics(\r\n  p: p5,\r\n  size: RectangleSize,\r\n  factor: number\r\n): p5.Graphics {\r\n  const g = p.createGraphics(size.width, size.height) as any;\r\n  const width = g.width;\r\n  const height = g.height;\r\n  const pixelDensity = g.pixelDensity();\r\n\r\n  g.loadPixels();\r\n\r\n  for (let y = 0; y < height; y += 1) {\r\n    for (let x = 0; x < width; x += 1) {\r\n      setPixel(g, x, y, 0, 0, 0, 255 * Math.random() * factor, pixelDensity);\r\n    }\r\n  }\r\n\r\n  g.updatePixels();\r\n\r\n  return g as p5.Graphics;\r\n}\r\n","/**\r\n * ------------------------------------------------------------------------\r\n *  Main sketch\r\n * ------------------------------------------------------------------------\r\n */\r\n\r\nimport { getElementOrBody } from \"./common/environment\";\r\nimport { RectangleSize } from \"./common/dataTypes\";\r\nimport * as random from \"./common/random\";\r\nimport { loop, flat } from \"./common/array\";\r\n\r\nimport { createScaledCanvas, ScaledCanvas } from \"./p5util/canvas\";\r\nimport { createApplyColor, ApplyColorFunction } from \"./p5util/color\";\r\nimport { createPixels } from \"./p5util/drawing\";\r\nimport {\r\n  drawTranslated,\r\n  drawTranslatedAndRotated,\r\n  drawScaled\r\n} from \"./p5util/transform\";\r\n\r\nimport { createRandomTextureGraphics } from \"./functions\";\r\n\r\nconst HTML_ELEMENT = getElementOrBody(\"RotationalSymmetry\");\r\n\r\nconst colorStringList = [\"#C7243A\", \"#2266AF\", \"#009250\", \"#EDAD0B\"];\r\n\r\ninterface RotationallySymmetricShape {\r\n  draw(size: number): void;\r\n  maxFoldingNumber: number;\r\n}\r\n\r\ninterface ShapeGroup {\r\n  shape: RotationallySymmetricShape;\r\n  count: number;\r\n  shapeSize: number;\r\n  radius: number;\r\n  revolution: number;\r\n  revolutionVelocity: number;\r\n  applyColor: ApplyColorFunction;\r\n  rotationFactor: number | null;\r\n}\r\n\r\ninterface Icon {\r\n  x: number;\r\n  y: number;\r\n  shapeGroupList: ShapeGroup[];\r\n}\r\n\r\nconst sketch = (p: p5): void => {\r\n  // ---- variables\r\n  let nonScaledSize: RectangleSize;\r\n  let scaledCanvas: ScaledCanvas;\r\n  let backgroundPixels: number[];\r\n  let icons: Icon[];\r\n  let shapeCandidates: RotationallySymmetricShape[];\r\n  let applyColorFunctionCandidates: ApplyColorFunction[];\r\n\r\n  // ---- drawing functions\r\n  function drawShapeGroup(shapeGroup: ShapeGroup): void {\r\n    shapeGroup.applyColor();\r\n\r\n    const revolution = shapeGroup.revolution % p.TWO_PI;\r\n    const count = shapeGroup.count;\r\n    const shape = shapeGroup.shape;\r\n    const radius = shapeGroup.radius;\r\n    const shapeUnitSize = shapeGroup.shapeSize;\r\n    const rotationFactor = shapeGroup.rotationFactor;\r\n\r\n    let angle = revolution;\r\n    const angleInterval = p.TWO_PI / count;\r\n\r\n    const drawShape = () => shape.draw(shapeUnitSize);\r\n\r\n    for (let i = 0; i < count; i += 1) {\r\n      const x = radius * Math.cos(angle);\r\n      const y = radius * Math.sin(angle);\r\n\r\n      const rotationAngle = angle + (rotationFactor || 0) * revolution;\r\n      drawTranslatedAndRotated(p, drawShape, x, y, rotationAngle);\r\n\r\n      angle += angleInterval;\r\n    }\r\n\r\n    shapeGroup.revolution = revolution + shapeGroup.revolutionVelocity;\r\n  }\r\n\r\n  function drawIcon(icon: Icon): void {\r\n    drawTranslated(\r\n      p,\r\n      () => loop(icon.shapeGroupList, drawShapeGroup),\r\n      icon.x,\r\n      icon.y\r\n    );\r\n  }\r\n\r\n  // ---- primitive shapes drawing functions\r\n  function drawSquare(size: number): void {\r\n    p.rect(0, 0, size, size, 0.05 * size);\r\n  }\r\n\r\n  const ONE_THIRD = 1 / 3;\r\n  const TWO_THIRDS = 2 / 3;\r\n  const ROOT_THREE = p.sqrt(3);\r\n  const ONE_OVER_ROOT_THREE = 1 / ROOT_THREE;\r\n\r\n  function drawRegularTriangle(size: number): void {\r\n    const sz = 1.2 * size;\r\n    const leftX = -ONE_THIRD * sz;\r\n    const rightX = TWO_THIRDS * sz;\r\n    const bottomY = ONE_OVER_ROOT_THREE * sz;\r\n    p.triangle(rightX, 0, leftX, -bottomY, leftX, bottomY);\r\n  }\r\n\r\n  function drawCircle(size: number): void {\r\n    p.ellipse(0, 0, size, size);\r\n  }\r\n\r\n  function drawEllipse(size: number): void {\r\n    p.ellipse(0, 0, 0.9 * size, 1.3 * size);\r\n  }\r\n\r\n  function drawRhombus(size: number): void {\r\n    p.quad(0.9 * size, 0, 0, 0.6 * size, -0.9 * size, 0, 0, -0.6 * size);\r\n  }\r\n\r\n  function drawDrop(size: number): void {\r\n    p.beginShape();\r\n    p.vertex(0.8 * size, 0);\r\n    p.vertex(0, 0.5 * size);\r\n    p.curveVertex(-0.4 * size, 0);\r\n    p.vertex(0, -0.5 * size);\r\n    p.endShape(p.CLOSE);\r\n  }\r\n\r\n  // ---- builder functions\r\n  function createShapeGroup(\r\n    shapeCandidates: RotationallySymmetricShape[],\r\n    count: number,\r\n    radius: number,\r\n    revolutionVelocityFactor: number,\r\n    applyColorFunctionStack: ApplyColorFunction[]\r\n  ): ShapeGroup {\r\n    const pickedShape = random.fromArray(shapeCandidates);\r\n    const poppedApplyColorFunction = applyColorFunctionStack.pop();\r\n    if (!poppedApplyColorFunction) throw new Error(\"No colors in stack.\");\r\n\r\n    let determinedRotationFactor: number | null;\r\n    switch (pickedShape.maxFoldingNumber) {\r\n      case 1:\r\n        determinedRotationFactor = 0;\r\n        break;\r\n      case 4:\r\n        determinedRotationFactor = random.fromArray([-2, -1, 0, 1, 2]);\r\n        break;\r\n      case Infinity:\r\n        determinedRotationFactor = null;\r\n        break;\r\n      default:\r\n        determinedRotationFactor = random.fromArray([-2, 0, 2]);\r\n        break;\r\n    }\r\n\r\n    return {\r\n      shape: pickedShape,\r\n      count: count,\r\n      shapeSize: 18,\r\n      radius: radius,\r\n      revolution: 0,\r\n      revolutionVelocity: revolutionVelocityFactor * 0.004 * p.TWO_PI,\r\n      applyColor: poppedApplyColorFunction,\r\n      rotationFactor: determinedRotationFactor\r\n    };\r\n  }\r\n\r\n  function createIcon(\r\n    x: number,\r\n    y: number,\r\n    shapeCandidates: RotationallySymmetricShape[],\r\n    shapeColorCandidates: ApplyColorFunction[],\r\n    invertedRevolution: boolean = false\r\n  ): Icon {\r\n    const applyColorFunctionStack: ApplyColorFunction[] = p.shuffle(\r\n      shapeColorCandidates,\r\n      false\r\n    );\r\n    const revolutionVelocityFactor = invertedRevolution ? -1 : 1;\r\n\r\n    const newShapeGroupList: ShapeGroup[] = [\r\n      createShapeGroup(\r\n        shapeCandidates,\r\n        random.intBetween(3, 6),\r\n        35,\r\n        -revolutionVelocityFactor,\r\n        applyColorFunctionStack\r\n      ),\r\n      createShapeGroup(\r\n        shapeCandidates,\r\n        random.intBetween(4, 10),\r\n        75,\r\n        revolutionVelocityFactor,\r\n        applyColorFunctionStack\r\n      )\r\n    ];\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      shapeGroupList: newShapeGroupList\r\n    };\r\n  }\r\n\r\n  function createRotatedShape(\r\n    shape: RotationallySymmetricShape\r\n  ): RotationallySymmetricShape | null {\r\n    if (shape.maxFoldingNumber === Infinity) return null;\r\n\r\n    const rotationAngle = 0.5 * (p.TWO_PI / shape.maxFoldingNumber);\r\n\r\n    return {\r\n      draw: (size: number) => {\r\n        p.rotate(rotationAngle);\r\n        shape.draw(size);\r\n        p.rotate(-rotationAngle);\r\n      },\r\n      maxFoldingNumber: shape.maxFoldingNumber\r\n    };\r\n  }\r\n\r\n  function createShiftedShape(\r\n    shape: RotationallySymmetricShape,\r\n    shiftFactor: number\r\n  ): RotationallySymmetricShape {\r\n    return {\r\n      draw: (size: number) => {\r\n        const displacement = shiftFactor * size;\r\n        p.translate(displacement, 0);\r\n        shape.draw(size);\r\n        p.translate(-displacement, 0);\r\n      },\r\n      maxFoldingNumber: 1 // assuming that the base shape was centered at the origin\r\n    };\r\n  }\r\n\r\n  function createCompositeShape(\r\n    shape: RotationallySymmetricShape,\r\n    otherShape: RotationallySymmetricShape,\r\n    maxFoldingNumber: number\r\n  ): RotationallySymmetricShape {\r\n    return {\r\n      draw: (size: number) => {\r\n        shape.draw(size);\r\n        otherShape.draw(size);\r\n      },\r\n      maxFoldingNumber: maxFoldingNumber\r\n    };\r\n  }\r\n\r\n  function createRotatedCompositeShape(baseShape: RotationallySymmetricShape) {\r\n    const rotatedShape = createRotatedShape(baseShape);\r\n    if (!rotatedShape) throw new Error(\"Could not create rotated shape.\");\r\n\r\n    return createCompositeShape(\r\n      baseShape,\r\n      rotatedShape,\r\n      baseShape.maxFoldingNumber * 2\r\n    );\r\n  }\r\n\r\n  function createShiftedCompositeShape(baseShape: RotationallySymmetricShape) {\r\n    const basemaxFoldingNumber = baseShape.maxFoldingNumber;\r\n    let newmaxFoldingNumber: number;\r\n    if (basemaxFoldingNumber === Infinity) newmaxFoldingNumber = 2;\r\n    else if (basemaxFoldingNumber % 2 === 0) newmaxFoldingNumber = 2;\r\n    else newmaxFoldingNumber = 1;\r\n\r\n    return createCompositeShape(\r\n      createShiftedShape(baseShape, -0.2),\r\n      createShiftedShape(baseShape, 0.2),\r\n      newmaxFoldingNumber\r\n    );\r\n  }\r\n\r\n  function createShapePatterns(\r\n    baseShape: RotationallySymmetricShape\r\n  ): RotationallySymmetricShape[] {\r\n    const array: RotationallySymmetricShape[] = [baseShape];\r\n\r\n    const rotatedShape = createRotatedShape(baseShape);\r\n    if (rotatedShape) {\r\n      array.push(rotatedShape);\r\n      array.push(createRotatedCompositeShape(baseShape));\r\n      array.push(createShiftedCompositeShape(rotatedShape));\r\n    }\r\n\r\n    const shiftedCompositeShape = createShiftedCompositeShape(baseShape);\r\n    array.push(shiftedCompositeShape);\r\n\r\n    if (shiftedCompositeShape.maxFoldingNumber === 2) {\r\n      const rotatedShiftedCompositeShape = createRotatedShape(\r\n        shiftedCompositeShape\r\n      );\r\n      if (rotatedShiftedCompositeShape)\r\n        array.push(rotatedShiftedCompositeShape);\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  // ---- initialize & reset\r\n  function initializeStyle() {\r\n    p.noFill();\r\n    p.strokeWeight(2);\r\n    p.rectMode(p.CENTER);\r\n  }\r\n\r\n  function initializeData() {\r\n    shapeCandidates = flat(\r\n      [\r\n        { draw: drawSquare, maxFoldingNumber: 4 },\r\n        { draw: drawRegularTriangle, maxFoldingNumber: 3 },\r\n        { draw: drawCircle, maxFoldingNumber: Infinity },\r\n        { draw: drawEllipse, maxFoldingNumber: 2 },\r\n        { draw: drawRhombus, maxFoldingNumber: 2 },\r\n        { draw: drawDrop, maxFoldingNumber: 1 }\r\n      ].map(createShapePatterns)\r\n    );\r\n\r\n    applyColorFunctionCandidates = colorStringList\r\n      .map((colorString: string) => p.color(colorString))\r\n      // .map((color: p5.Color) => alphaColor(p, color, 160))\r\n      .map((color: p5.Color) =>\r\n        createApplyColor(p, { strokeColor: color, fillColor: undefined })\r\n      );\r\n  }\r\n\r\n  function reset() {\r\n    icons = [];\r\n\r\n    let invertedRevolution = false;\r\n\r\n    const positionInterval = nonScaledSize.width / 3;\r\n    for (let row = 0; row < 3; row += 1) {\r\n      const y = (row + 0.5) * positionInterval;\r\n      for (let column = 0; column < 3; column += 1) {\r\n        const x = (column + 0.5) * positionInterval;\r\n        const newIcon = createIcon(\r\n          x,\r\n          y,\r\n          shapeCandidates,\r\n          applyColorFunctionCandidates,\r\n          invertedRevolution\r\n        );\r\n        icons.push(newIcon);\r\n        invertedRevolution = !invertedRevolution;\r\n      }\r\n    }\r\n  }\r\n\r\n  // ---- core drawing process\r\n  function drawSketch(): void {\r\n    loop(icons, drawIcon);\r\n  }\r\n\r\n  // ---- setup & draw etc.\r\n  p.preload = () => {};\r\n\r\n  p.setup = () => {\r\n    nonScaledSize = { width: 640, height: 640 };\r\n    scaledCanvas = createScaledCanvas(p, HTML_ELEMENT, nonScaledSize);\r\n    backgroundPixels = createPixels(p, (p: p5) => {\r\n      p.background(255);\r\n      p.scale(scaledCanvas.scaleFactor);\r\n      p.image(createRandomTextureGraphics(p, nonScaledSize, 0.05), 0, 0);\r\n    });\r\n\r\n    initializeStyle();\r\n    initializeData();\r\n    reset();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.pixels = backgroundPixels;\r\n    p.updatePixels();\r\n\r\n    drawScaled(p, drawSketch, scaledCanvas.scaleFactor);\r\n  };\r\n\r\n  p.mousePressed = () => {\r\n    reset();\r\n  };\r\n\r\n  p.keyTyped = () => {\r\n    if (p.key === \"p\") p.noLoop();\r\n    // if (p.key === \"s\") p.save(\"image.png\");\r\n  };\r\n};\r\n\r\nnew p5(sketch, HTML_ELEMENT);\r\n"],"names":["random.fromArray","random.intBetween"],"mappings":"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"}