{"version":3,"file":"sketch.js","sources":["../src/functions.ts","../src/main.ts"],"sourcesContent":["/**\r\n * Returns random integer from 0 up to (but not including) the max number.\r\n */\r\nexport function randomInt(maxInt: number): number {\r\n  return Math.floor(Math.random() * maxInt);\r\n}\r\n\r\n/**\r\n * Returns random integer from the min number up to (but not including) the max number.\r\n */\r\nexport function randomIntBetween(minInt: number, maxInt: number): number {\r\n  return minInt + randomInt(maxInt - minInt);\r\n}\r\n\r\nexport function loop<T>(array: T[], callback: (element: T) => any): void {\r\n  const len = array.length;\r\n  for (let i = 0; i < len; i += 1) callback(array[i]);\r\n}\r\n\r\nexport function getHTMLElement(id: string): HTMLElement {\r\n  return document.getElementById(id) || document.body;\r\n}\r\n\r\nexport interface RectangleRegionSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport enum RegionFittingOption {\r\n  FIT_SIZE,\r\n  FIT_WIDTH,\r\n  FIT_HEIGHT\r\n}\r\n\r\n// -----------------------------------------------------\r\n\r\nexport function getHTMLElementRegionSize(\r\n  node: HTMLElement\r\n): RectangleRegionSize {\r\n  if (node === document.body)\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n  const boundingClientRect = node.getBoundingClientRect();\r\n\r\n  return {\r\n    width: boundingClientRect.width,\r\n    height: boundingClientRect.height\r\n  };\r\n}\r\n\r\nexport interface ScaledCanvas {\r\n  p5Canvas: p5.Renderer;\r\n  scaleFactor: number;\r\n}\r\n\r\nexport function calculateRegionFittingScaleFactor(\r\n  nonScaledRegionSize: RectangleRegionSize,\r\n  targetRegionSize: RectangleRegionSize,\r\n  fittingOption?: RegionFittingOption\r\n): number {\r\n  switch (fittingOption) {\r\n    default:\r\n    case RegionFittingOption.FIT_SIZE:\r\n      const scaleFactorCandidate =\r\n        targetRegionSize.width / nonScaledRegionSize.width;\r\n      const nonScaledHeight = nonScaledRegionSize.height;\r\n\r\n      if (scaleFactorCandidate * nonScaledHeight < targetRegionSize.height) {\r\n        return scaleFactorCandidate;\r\n      } else {\r\n        return targetRegionSize.height / nonScaledHeight;\r\n      }\r\n\r\n    case RegionFittingOption.FIT_WIDTH:\r\n      return targetRegionSize.width / nonScaledRegionSize.width;\r\n\r\n    case RegionFittingOption.FIT_HEIGHT:\r\n      return targetRegionSize.height / nonScaledRegionSize.height;\r\n  }\r\n}\r\n\r\nexport function createScaledCanvas(\r\n  p: p5,\r\n  node: HTMLElement,\r\n  nonScaledRegion: RectangleRegionSize,\r\n  fittingOption?: RegionFittingOption,\r\n  renderer?: \"p2d\" | \"webgl\" | undefined\r\n): ScaledCanvas {\r\n  const maxCanvasRegion = getHTMLElementRegionSize(node);\r\n  const scaleFactor = calculateRegionFittingScaleFactor(\r\n    nonScaledRegion,\r\n    maxCanvasRegion,\r\n    fittingOption\r\n  );\r\n\r\n  const canvas = p.createCanvas(\r\n    scaleFactor * nonScaledRegion.width,\r\n    scaleFactor * nonScaledRegion.height,\r\n    renderer\r\n  );\r\n\r\n  return {\r\n    p5Canvas: canvas,\r\n    scaleFactor: scaleFactor\r\n  };\r\n}\r\n\r\nexport function alphaColor(p: p5, color: p5.Color, alpha: number): p5.Color {\r\n  return p.color(p.red(color), p.green(color), p.blue(color), alpha);\r\n}\r\n\r\n/**\r\n * Set color to the specified pixel.\r\n * Should be used in conjunction with loadPixels() and updatePixels().\r\n * @param renderer - Instance of either p5 or p5.Graphics.\r\n * @param x - The x index of the pixel.\r\n * @param y - The y index of the pixel.\r\n * @param red - The red value (0 - 255).\r\n * @param green - The green value (0 - 255).\r\n * @param blue - The blue value (0 - 255).\r\n * @param pixelDensity - If not specified, renderer.pixelDensity() will be called.\r\n */\r\nexport function setPixel(\r\n  renderer: p5 | p5.Graphics,\r\n  x: number,\r\n  y: number,\r\n  red: number,\r\n  green: number,\r\n  blue: number,\r\n  alpha: number,\r\n  pixelDensity?: number\r\n): void {\r\n  const g = renderer as p5;\r\n  const d = pixelDensity || g.pixelDensity();\r\n  const graphicsPixels = g.pixels;\r\n\r\n  for (let i = 0; i < d; i += 1) {\r\n    for (let j = 0; j < d; j += 1) {\r\n      const idx = 4 * ((y * d + j) * g.width * d + (x * d + i));\r\n      graphicsPixels[idx] = red;\r\n      graphicsPixels[idx + 1] = green;\r\n      graphicsPixels[idx + 2] = blue;\r\n      graphicsPixels[idx + 3] = alpha;\r\n    }\r\n  }\r\n}\r\n\r\nexport function createRandomTextureGraphics(\r\n  p: p5,\r\n  w: number,\r\n  h: number,\r\n  factor: number\r\n): p5.Graphics {\r\n  const g = p.createGraphics(w, h) as any;\r\n  const width = g.width;\r\n  const height = g.height;\r\n  const pixelDensity = g.pixelDensity();\r\n\r\n  g.loadPixels();\r\n\r\n  for (let y = 0; y < height; y += 1) {\r\n    for (let x = 0; x < width; x += 1) {\r\n      setPixel(g, x, y, 0, 0, 0, 255 * Math.random() * factor, pixelDensity);\r\n    }\r\n  }\r\n\r\n  g.updatePixels();\r\n\r\n  return g as p5.Graphics;\r\n}\r\n\r\nexport interface ApplyColorFunction {\r\n  (): void;\r\n}\r\n\r\nexport interface ShapeColor {\r\n  strokeColor: p5.Color | undefined | null;\r\n  fillColor: p5.Color | undefined | null;\r\n}\r\n\r\nexport function createApplyColor(\r\n  p: p5,\r\n  shapeColor: ShapeColor\r\n): ApplyColorFunction {\r\n  const strokeColor = shapeColor.strokeColor;\r\n  const fillColor = shapeColor.fillColor;\r\n\r\n  if (strokeColor && fillColor) {\r\n    return () => {\r\n      p.stroke(strokeColor);\r\n      p.fill(fillColor);\r\n    };\r\n  }\r\n\r\n  if (strokeColor) {\r\n    if (fillColor === null)\r\n      return () => {\r\n        p.stroke(strokeColor);\r\n        p.noFill();\r\n      };\r\n    else\r\n      return () => {\r\n        p.stroke(strokeColor);\r\n      };\r\n  }\r\n  if (fillColor) {\r\n    if (strokeColor === null)\r\n      return () => {\r\n        p.noStroke();\r\n        p.fill(fillColor);\r\n      };\r\n    else return () => p.fill(fillColor);\r\n  }\r\n\r\n  if (strokeColor === null) {\r\n    if (fillColor === null) {\r\n      return () => {\r\n        p.noStroke();\r\n        p.noFill();\r\n      };\r\n    } else return () => p.noStroke();\r\n  } else {\r\n    if (fillColor === null) return () => p.noFill();\r\n  }\r\n\r\n  return () => {};\r\n}\r\n","import {\r\n  createRandomTextureGraphics,\r\n  loop,\r\n  createScaledCanvas,\r\n  createApplyColor,\r\n  ApplyColorFunction,\r\n  randomIntBetween,\r\n  getHTMLElement,\r\n  ScaledCanvas\r\n} from \"./functions\";\r\n\r\nconst HTML_ELEMENT = getHTMLElement(\"RotationalSymmetry\");\r\n\r\ninterface RotationallySymmetricShape {\r\n  draw(size: number): void;\r\n  foldingNumber: number;\r\n}\r\n\r\ninterface ShapeGroup {\r\n  shape: RotationallySymmetricShape;\r\n  count: number;\r\n  shapeSize: number;\r\n  radius: number;\r\n  revolution: number;\r\n  revolutionVelocity: number;\r\n  applyColor: ApplyColorFunction;\r\n  rotationFactor: number;\r\n}\r\n\r\ninterface Icon {\r\n  x: number;\r\n  y: number;\r\n  shapeGroupList: ShapeGroup[];\r\n}\r\n\r\nconst sketch = (p: p5): void => {\r\n  // ---- variables\r\n  let nonScaledWidth: number;\r\n  let nonScaledHeight: number;\r\n  let scaledCanvas: ScaledCanvas;\r\n  let backgroundPixels: number[];\r\n  let icons: Icon[];\r\n\r\n  // ---- functions\r\n  function drawShapeGroup(shapeGroup: ShapeGroup): void {\r\n    shapeGroup.applyColor();\r\n\r\n    const revolution = shapeGroup.revolution;\r\n    const count = shapeGroup.count;\r\n    const shape = shapeGroup.shape;\r\n    const radius = shapeGroup.radius;\r\n    const shapeUnitSize = shapeGroup.shapeSize;\r\n    const rotationFactor = shapeGroup.rotationFactor;\r\n\r\n    let angle = revolution;\r\n    const angleInterval = p.TWO_PI / count;\r\n\r\n    for (let i = 0; i < count; i += 1) {\r\n      const x = radius * Math.cos(angle);\r\n      const y = radius * Math.sin(angle);\r\n      const rotationAngle = rotationFactor * angle;\r\n      p.translate(x, y);\r\n      p.rotate(rotationAngle);\r\n      shape.draw(shapeUnitSize);\r\n      p.rotate(-rotationAngle);\r\n      p.translate(-x, -y);\r\n      angle += angleInterval;\r\n    }\r\n\r\n    shapeGroup.revolution = revolution + shapeGroup.revolutionVelocity;\r\n  }\r\n\r\n  function drawIcon(icon: Icon): void {\r\n    const x = icon.x;\r\n    const y = icon.y;\r\n    p.translate(x, y);\r\n    loop(icon.shapeGroupList, drawShapeGroup);\r\n    p.translate(-x, -y);\r\n  }\r\n\r\n  function drawSquare(size: number): void {\r\n    p.rect(0, 0, size, size, 0.05 * size);\r\n  }\r\n\r\n  const ROOT_THREE = p.sqrt(3);\r\n  const ONE_THIRD = 1 / 3;\r\n  const TWO_THIRDS = 2 / 3;\r\n  const ONE_OVER_ROOT_THREE = 1 / ROOT_THREE;\r\n  const TRIANGLE_SIZE_FACTOR = 1.2;\r\n\r\n  function drawRegularTriangle(size: number): void {\r\n    const sz = TRIANGLE_SIZE_FACTOR * size;\r\n    p.triangle(\r\n      TWO_THIRDS * sz,\r\n      0,\r\n      -ONE_THIRD * sz,\r\n      -ONE_OVER_ROOT_THREE * sz,\r\n      -ONE_THIRD * sz,\r\n      ONE_OVER_ROOT_THREE * sz\r\n    );\r\n  }\r\n\r\n  function drawCircle(size: number): void {\r\n    p.ellipse(0, 0, size, size);\r\n  }\r\n\r\n  function drawEllipse(size: number): void {\r\n    p.ellipse(0, 0, 0.9 * size, 1.3 * size);\r\n  }\r\n\r\n  function drawDiamand(size: number): void {\r\n    p.quad(0.9 * size, 0, 0, 0.6 * size, -0.9 * size, 0, 0, -0.6 * size);\r\n  }\r\n\r\n  function drawDrop(size: number): void {\r\n    p.beginShape();\r\n    p.vertex(0.8 * size, 0);\r\n    p.vertex(0, 0.5 * size);\r\n    p.curveVertex(-0.4 * size, 0);\r\n    p.vertex(0, -0.5 * size);\r\n    p.endShape(p.CLOSE);\r\n  }\r\n\r\n  function createShapeGroup(\r\n    shapeCandidates: RotationallySymmetricShape[],\r\n    count: number,\r\n    radius: number,\r\n    revolutionVelocityFactor: number,\r\n    applyColorFunctionStack: ApplyColorFunction[]\r\n  ): ShapeGroup {\r\n    const pickedShape = p.random(shapeCandidates);\r\n    const poppedApplyColorFunction = applyColorFunctionStack.pop();\r\n    if (!poppedApplyColorFunction)\r\n      throw \"createShapeGroup - No colors in stack.\";\r\n\r\n    let determinedRotationFactor: number;\r\n    switch (pickedShape.foldingNumber) {\r\n      case 1:\r\n        determinedRotationFactor = 1;\r\n        break;\r\n      case 4:\r\n        determinedRotationFactor = p.random([-1, 0, 1]);\r\n        break;\r\n      case Infinity:\r\n        determinedRotationFactor = 0;\r\n        break;\r\n      default:\r\n        determinedRotationFactor = p.random([-1, 1]);\r\n        break;\r\n    }\r\n\r\n    return {\r\n      shape: pickedShape,\r\n      count: count,\r\n      shapeSize: 18,\r\n      radius: radius,\r\n      revolution: 0,\r\n      revolutionVelocity: revolutionVelocityFactor * 0.004 * p.TWO_PI,\r\n      applyColor: poppedApplyColorFunction,\r\n      rotationFactor: determinedRotationFactor\r\n    };\r\n  }\r\n\r\n  function createIcon(\r\n    x: number,\r\n    y: number,\r\n    shapeCandidates: RotationallySymmetricShape[],\r\n    shapeColorCandidates: ApplyColorFunction[],\r\n    invertedRevolution: boolean = false\r\n  ): Icon {\r\n    const applyColorFunctionStack: ApplyColorFunction[] = p.shuffle(\r\n      shapeColorCandidates,\r\n      false\r\n    );\r\n    const revolutionVelocityFactor = invertedRevolution ? -1 : 1;\r\n\r\n    const newShapeGroupList: ShapeGroup[] = [\r\n      createShapeGroup(\r\n        shapeCandidates,\r\n        randomIntBetween(3, 6),\r\n        35,\r\n        -revolutionVelocityFactor,\r\n        applyColorFunctionStack\r\n      ),\r\n      createShapeGroup(\r\n        shapeCandidates,\r\n        randomIntBetween(4, 10),\r\n        75,\r\n        revolutionVelocityFactor,\r\n        applyColorFunctionStack\r\n      )\r\n    ];\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      shapeGroupList: newShapeGroupList\r\n    };\r\n  }\r\n\r\n  function flat<T>(arrays: T[][]): T[] {\r\n    return [].concat.apply([], arrays);\r\n  }\r\n\r\n  function createRotatedShape(\r\n    shape: RotationallySymmetricShape\r\n  ): RotationallySymmetricShape | null {\r\n    if (shape.foldingNumber === Infinity) return null;\r\n\r\n    const rotationAngle = 0.5 * (p.TWO_PI / shape.foldingNumber);\r\n\r\n    return {\r\n      draw: (size: number) => {\r\n        p.rotate(rotationAngle);\r\n        shape.draw(size);\r\n        p.rotate(-rotationAngle);\r\n      },\r\n      foldingNumber: shape.foldingNumber\r\n    };\r\n  }\r\n\r\n  function createShiftedShape(\r\n    shape: RotationallySymmetricShape,\r\n    shiftFactor: number\r\n  ): RotationallySymmetricShape {\r\n    return {\r\n      draw: (size: number) => {\r\n        const displacement = shiftFactor * size;\r\n        p.translate(displacement, 0);\r\n        shape.draw(size);\r\n        p.translate(-displacement, 0);\r\n      },\r\n      foldingNumber: 1\r\n    };\r\n  }\r\n\r\n  function createCompositeShape(\r\n    shape: RotationallySymmetricShape,\r\n    otherShape: RotationallySymmetricShape,\r\n    foldingNumber: number\r\n  ): RotationallySymmetricShape {\r\n    return {\r\n      draw: (size: number) => {\r\n        shape.draw(size);\r\n        otherShape.draw(size);\r\n      },\r\n      foldingNumber: foldingNumber\r\n    };\r\n  }\r\n\r\n  function createRotatedCompositeShape(baseShape: RotationallySymmetricShape) {\r\n    const rotatedShape = createRotatedShape(baseShape);\r\n    if (!rotatedShape) throw \"createRotatedCompositeShape() - Invalid input.\";\r\n\r\n    return createCompositeShape(\r\n      baseShape,\r\n      rotatedShape,\r\n      baseShape.foldingNumber * 2\r\n    );\r\n  }\r\n\r\n  function createShiftedCompositeShape(baseShape: RotationallySymmetricShape) {\r\n    const baseFoldingNumber = baseShape.foldingNumber;\r\n    let newFoldingNumber: number;\r\n    if (baseFoldingNumber === Infinity) newFoldingNumber = 2;\r\n    else if (baseFoldingNumber % 2 === 0) newFoldingNumber = 2;\r\n    else newFoldingNumber = 1;\r\n\r\n    return createCompositeShape(\r\n      createShiftedShape(baseShape, -0.2),\r\n      createShiftedShape(baseShape, 0.2),\r\n      newFoldingNumber\r\n    );\r\n  }\r\n\r\n  function createShapePatterns(\r\n    baseShape: RotationallySymmetricShape\r\n  ): RotationallySymmetricShape[] {\r\n    const array: RotationallySymmetricShape[] = [baseShape];\r\n\r\n    const rotatedShape = createRotatedShape(baseShape);\r\n    if (rotatedShape) {\r\n      array.push(rotatedShape);\r\n      array.push(createRotatedCompositeShape(baseShape));\r\n      array.push(createShiftedCompositeShape(rotatedShape));\r\n    }\r\n\r\n    const shiftedCompositeShape = createShiftedCompositeShape(baseShape);\r\n    array.push(shiftedCompositeShape);\r\n\r\n    if (shiftedCompositeShape.foldingNumber === 2) {\r\n      const rotatedShiftedCompositeShape = createRotatedShape(\r\n        shiftedCompositeShape\r\n      );\r\n      if (rotatedShiftedCompositeShape)\r\n        array.push(rotatedShiftedCompositeShape);\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  function initialize() {\r\n    const shapeCandidates: RotationallySymmetricShape[] = flat(\r\n      [\r\n        {\r\n          draw: drawSquare,\r\n          foldingNumber: 4\r\n        },\r\n        {\r\n          draw: drawRegularTriangle,\r\n          foldingNumber: 3\r\n        },\r\n        {\r\n          draw: drawCircle,\r\n          foldingNumber: Infinity\r\n        },\r\n        {\r\n          draw: drawEllipse,\r\n          foldingNumber: 2\r\n        },\r\n        {\r\n          draw: drawDiamand,\r\n          foldingNumber: 2\r\n        },\r\n        {\r\n          draw: drawDrop,\r\n          foldingNumber: 1\r\n        }\r\n      ].map(createShapePatterns)\r\n    );\r\n\r\n    const applyColorFunctionCandidates: ApplyColorFunction[] = [\r\n      \"#C7243A\",\r\n      \"#2266AF\",\r\n      \"#009250\",\r\n      \"#EDAD0B\"\r\n    ]\r\n      .map((colorString: string) => p.color(colorString))\r\n      // .map((color: p5.Color) => alphaColor(p, color, 160))\r\n      .map((color: p5.Color) =>\r\n        createApplyColor(p, { strokeColor: color, fillColor: undefined })\r\n      );\r\n\r\n    icons = [];\r\n\r\n    let invertedRevolution = false;\r\n\r\n    const positionInterval = nonScaledWidth / 3;\r\n    for (let row = 0; row < 3; row += 1) {\r\n      const y = (row + 0.5) * positionInterval;\r\n      for (let column = 0; column < 3; column += 1) {\r\n        const x = (column + 0.5) * positionInterval;\r\n        const newIcon = createIcon(\r\n          x,\r\n          y,\r\n          shapeCandidates,\r\n          applyColorFunctionCandidates,\r\n          invertedRevolution\r\n        );\r\n        icons.push(newIcon);\r\n        invertedRevolution = !invertedRevolution;\r\n      }\r\n    }\r\n  }\r\n\r\n  // ---- Setup & Draw etc.\r\n  p.preload = () => {};\r\n\r\n  p.setup = () => {\r\n    nonScaledWidth = 640;\r\n    nonScaledHeight = 640;\r\n    scaledCanvas = createScaledCanvas(p, HTML_ELEMENT, {\r\n      width: 640,\r\n      height: 640\r\n    });\r\n    const texture: p5.Image = createRandomTextureGraphics(\r\n      p,\r\n      nonScaledWidth,\r\n      nonScaledHeight,\r\n      0.05\r\n    ) as any;\r\n\r\n    p.push();\r\n    p.scale(scaledCanvas.scaleFactor);\r\n    p.image(texture, 0, 0);\r\n    p.pop();\r\n    p.loadPixels();\r\n    backgroundPixels = p.pixels;\r\n\r\n    p.noFill();\r\n    p.strokeWeight(2);\r\n\r\n    p.rectMode(p.CENTER);\r\n\r\n    initialize();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.pixels = backgroundPixels;\r\n    p.updatePixels();\r\n\r\n    p.push();\r\n    p.scale(scaledCanvas.scaleFactor);\r\n    loop(icons, drawIcon);\r\n    p.pop();\r\n  };\r\n\r\n  p.mousePressed = () => {\r\n    initialize();\r\n  };\r\n\r\n  p.keyTyped = () => {\r\n    if (p.key === \"p\") p.noLoop();\r\n\r\n    // if (p.key === \"s\") p.save(\"image.png\");\r\n  };\r\n};\r\n\r\nnew p5(sketch, HTML_ELEMENT);\r\n"],"names":[],"mappings":";;;;;;;;;;;;EAAA;;;AAGA,WAAgB,SAAS,CAAC,MAAc;MACtC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC;EAC5C,CAAC;EAED;;;AAGA,WAAgB,gBAAgB,CAAC,MAAc,EAAE,MAAc;MAC7D,OAAO,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;EAC7C,CAAC;AAED,WAAgB,IAAI,CAAI,KAAU,EAAE,QAA6B;MAC/D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;MACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC;UAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACtD,CAAC;AAED,WAAgB,cAAc,CAAC,EAAU;MACvC,OAAO,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;EACtD,CAAC;AAOD,EAAA,IAAY,mBAIX;EAJD,WAAY,mBAAmB;MAC7B,qEAAQ,CAAA;MACR,uEAAS,CAAA;MACT,yEAAU,CAAA;EACZ,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,QAI9B;EAED;AAEA,WAAgB,wBAAwB,CACtC,IAAiB;MAEjB,IAAI,IAAI,KAAK,QAAQ,CAAC,IAAI;UACxB,OAAO;cACL,KAAK,EAAE,MAAM,CAAC,UAAU;cACxB,MAAM,EAAE,MAAM,CAAC,WAAW;WAC3B,CAAC;MAEJ,MAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;MAExD,OAAO;UACL,KAAK,EAAE,kBAAkB,CAAC,KAAK;UAC/B,MAAM,EAAE,kBAAkB,CAAC,MAAM;OAClC,CAAC;EACJ,CAAC;AAOD,WAAgB,iCAAiC,CAC/C,mBAAwC,EACxC,gBAAqC,EACrC,aAAmC;MAEnC,QAAQ,aAAa;UACnB,QAAQ;UACR,KAAK,mBAAmB,CAAC,QAAQ;cAC/B,MAAM,oBAAoB,GACxB,gBAAgB,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC;cACrD,MAAM,eAAe,GAAG,mBAAmB,CAAC,MAAM,CAAC;cAEnD,IAAI,oBAAoB,GAAG,eAAe,GAAG,gBAAgB,CAAC,MAAM,EAAE;kBACpE,OAAO,oBAAoB,CAAC;eAC7B;mBAAM;kBACL,OAAO,gBAAgB,CAAC,MAAM,GAAG,eAAe,CAAC;eAClD;UAEH,KAAK,mBAAmB,CAAC,SAAS;cAChC,OAAO,gBAAgB,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC;UAE5D,KAAK,mBAAmB,CAAC,UAAU;cACjC,OAAO,gBAAgB,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC;OAC/D;EACH,CAAC;AAED,WAAgB,kBAAkB,CAChC,CAAK,EACL,IAAiB,EACjB,eAAoC,EACpC,aAAmC,EACnC,QAAsC;MAEtC,MAAM,eAAe,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC;MACvD,MAAM,WAAW,GAAG,iCAAiC,CACnD,eAAe,EACf,eAAe,EACf,aAAa,CACd,CAAC;MAEF,MAAM,MAAM,GAAG,CAAC,CAAC,YAAY,CAC3B,WAAW,GAAG,eAAe,CAAC,KAAK,EACnC,WAAW,GAAG,eAAe,CAAC,MAAM,EACpC,QAAQ,CACT,CAAC;MAEF,OAAO;UACL,QAAQ,EAAE,MAAM;UAChB,WAAW,EAAE,WAAW;OACzB,CAAC;EACJ,CAAC;AAED,EAIA;;;;;;;;;;;AAWA,WAAgB,QAAQ,CACtB,QAA0B,EAC1B,CAAS,EACT,CAAS,EACT,GAAW,EACX,KAAa,EACb,IAAY,EACZ,KAAa,EACb,YAAqB;MAErB,MAAM,CAAC,GAAG,QAAc,CAAC;MACzB,MAAM,CAAC,GAAG,YAAY,IAAI,CAAC,CAAC,YAAY,EAAE,CAAC;MAC3C,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC;MAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;UAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;cAC7B,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cAC1D,cAAc,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;cAC1B,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;cAChC,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;cAC/B,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;WACjC;OACF;EACH,CAAC;AAED,WAAgB,2BAA2B,CACzC,CAAK,EACL,CAAS,EACT,CAAS,EACT,MAAc;MAEd,MAAM,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAQ,CAAC;MACxC,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;MACtB,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;MACxB,MAAM,YAAY,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;MAEtC,CAAC,CAAC,UAAU,EAAE,CAAC;MAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;UAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;cACjC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,YAAY,CAAC,CAAC;WACxE;OACF;MAED,CAAC,CAAC,YAAY,EAAE,CAAC;MAEjB,OAAO,CAAgB,CAAC;EAC1B,CAAC;AAWD,WAAgB,gBAAgB,CAC9B,CAAK,EACL,UAAsB;MAEtB,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;MAC3C,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;MAEvC,IAAI,WAAW,IAAI,SAAS,EAAE;UAC5B,OAAO;cACL,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;cACtB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;WACnB,CAAC;OACH;MAED,IAAI,WAAW,EAAE;UACf,IAAI,SAAS,KAAK,IAAI;cACpB,OAAO;kBACL,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;kBACtB,CAAC,CAAC,MAAM,EAAE,CAAC;eACZ,CAAC;;cAEF,OAAO;kBACL,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;eACvB,CAAC;OACL;MACD,IAAI,SAAS,EAAE;UACb,IAAI,WAAW,KAAK,IAAI;cACtB,OAAO;kBACL,CAAC,CAAC,QAAQ,EAAE,CAAC;kBACb,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;eACnB,CAAC;;cACC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;OACrC;MAED,IAAI,WAAW,KAAK,IAAI,EAAE;UACxB,IAAI,SAAS,KAAK,IAAI,EAAE;cACtB,OAAO;kBACL,CAAC,CAAC,QAAQ,EAAE,CAAC;kBACb,CAAC,CAAC,MAAM,EAAE,CAAC;eACZ,CAAC;WACH;;cAAM,OAAO,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;OAClC;WAAM;UACL,IAAI,SAAS,KAAK,IAAI;cAAE,OAAO,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;OACjD;MAED,OAAO,SAAQ,CAAC;EAClB,CAAC;;EC1ND,MAAM,YAAY,GAAG,cAAc,CAAC,oBAAoB,CAAC,CAAC;EAwB1D,MAAM,MAAM,GAAG,CAAC,CAAK;;MAEnB,IAAI,cAAsB,CAAC;MAC3B,IAAI,eAAuB,CAAC;MAC5B,IAAI,YAA0B,CAAC;MAC/B,IAAI,gBAA0B,CAAC;MAC/B,IAAI,KAAa,CAAC;;MAGlB,SAAS,cAAc,CAAC,UAAsB;UAC5C,UAAU,CAAC,UAAU,EAAE,CAAC;UAExB,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;UACzC,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;UAC/B,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;UAC/B,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;UACjC,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC;UAC3C,MAAM,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;UAEjD,IAAI,KAAK,GAAG,UAAU,CAAC;UACvB,MAAM,aAAa,GAAG,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;UAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;cACjC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;cACnC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;cACnC,MAAM,aAAa,GAAG,cAAc,GAAG,KAAK,CAAC;cAC7C,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAClB,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;cACxB,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;cAC1B,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC;cACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACpB,KAAK,IAAI,aAAa,CAAC;WACxB;UAED,UAAU,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,CAAC,kBAAkB,CAAC;OACpE;MAED,SAAS,QAAQ,CAAC,IAAU;UAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;UACjB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;UACjB,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAClB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;UAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACrB;MAED,SAAS,UAAU,CAAC,IAAY;UAC9B,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;OACvC;MAED,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7B,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;MACxB,MAAM,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;MACzB,MAAM,mBAAmB,GAAG,CAAC,GAAG,UAAU,CAAC;MAC3C,MAAM,oBAAoB,GAAG,GAAG,CAAC;MAEjC,SAAS,mBAAmB,CAAC,IAAY;UACvC,MAAM,EAAE,GAAG,oBAAoB,GAAG,IAAI,CAAC;UACvC,CAAC,CAAC,QAAQ,CACR,UAAU,GAAG,EAAE,EACf,CAAC,EACD,CAAC,SAAS,GAAG,EAAE,EACf,CAAC,mBAAmB,GAAG,EAAE,EACzB,CAAC,SAAS,GAAG,EAAE,EACf,mBAAmB,GAAG,EAAE,CACzB,CAAC;OACH;MAED,SAAS,UAAU,CAAC,IAAY;UAC9B,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;OAC7B;MAED,SAAS,WAAW,CAAC,IAAY;UAC/B,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;OACzC;MAED,SAAS,WAAW,CAAC,IAAY;UAC/B,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;OACtE;MAED,SAAS,QAAQ,CAAC,IAAY;UAC5B,CAAC,CAAC,UAAU,EAAE,CAAC;UACf,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC;UACxB,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;UAC9B,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;UACzB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;OACrB;MAED,SAAS,gBAAgB,CACvB,eAA6C,EAC7C,KAAa,EACb,MAAc,EACd,wBAAgC,EAChC,uBAA6C;UAE7C,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;UAC9C,MAAM,wBAAwB,GAAG,uBAAuB,CAAC,GAAG,EAAE,CAAC;UAC/D,IAAI,CAAC,wBAAwB;cAC3B,MAAM,wCAAwC,CAAC;UAEjD,IAAI,wBAAgC,CAAC;UACrC,QAAQ,WAAW,CAAC,aAAa;cAC/B,KAAK,CAAC;kBACJ,wBAAwB,GAAG,CAAC,CAAC;kBAC7B,MAAM;cACR,KAAK,CAAC;kBACJ,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;kBAChD,MAAM;cACR,KAAK,QAAQ;kBACX,wBAAwB,GAAG,CAAC,CAAC;kBAC7B,MAAM;cACR;kBACE,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;kBAC7C,MAAM;WACT;UAED,OAAO;cACL,KAAK,EAAE,WAAW;cAClB,KAAK,EAAE,KAAK;cACZ,SAAS,EAAE,EAAE;cACb,MAAM,EAAE,MAAM;cACd,UAAU,EAAE,CAAC;cACb,kBAAkB,EAAE,wBAAwB,GAAG,KAAK,GAAG,CAAC,CAAC,MAAM;cAC/D,UAAU,EAAE,wBAAwB;cACpC,cAAc,EAAE,wBAAwB;WACzC,CAAC;OACH;MAED,SAAS,UAAU,CACjB,CAAS,EACT,CAAS,EACT,eAA6C,EAC7C,oBAA0C,EAC1C,qBAA8B,KAAK;UAEnC,MAAM,uBAAuB,GAAyB,CAAC,CAAC,OAAO,CAC7D,oBAAoB,EACpB,KAAK,CACN,CAAC;UACF,MAAM,wBAAwB,GAAG,kBAAkB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;UAE7D,MAAM,iBAAiB,GAAiB;cACtC,gBAAgB,CACd,eAAe,EACf,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,EACtB,EAAE,EACF,CAAC,wBAAwB,EACzB,uBAAuB,CACxB;cACD,gBAAgB,CACd,eAAe,EACf,gBAAgB,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB,EAAE,EACF,wBAAwB,EACxB,uBAAuB,CACxB;WACF,CAAC;UAEF,OAAO;cACL,CAAC,EAAE,CAAC;cACJ,CAAC,EAAE,CAAC;cACJ,cAAc,EAAE,iBAAiB;WAClC,CAAC;OACH;MAED,SAAS,IAAI,CAAI,MAAa;UAC5B,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;OACpC;MAED,SAAS,kBAAkB,CACzB,KAAiC;UAEjC,IAAI,KAAK,CAAC,aAAa,KAAK,QAAQ;cAAE,OAAO,IAAI,CAAC;UAElD,MAAM,aAAa,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;UAE7D,OAAO;cACL,IAAI,EAAE,CAAC,IAAY;kBACjB,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;kBACxB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;kBACjB,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC;eAC1B;cACD,aAAa,EAAE,KAAK,CAAC,aAAa;WACnC,CAAC;OACH;MAED,SAAS,kBAAkB,CACzB,KAAiC,EACjC,WAAmB;UAEnB,OAAO;cACL,IAAI,EAAE,CAAC,IAAY;kBACjB,MAAM,YAAY,GAAG,WAAW,GAAG,IAAI,CAAC;kBACxC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;kBAC7B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;kBACjB,CAAC,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;eAC/B;cACD,aAAa,EAAE,CAAC;WACjB,CAAC;OACH;MAED,SAAS,oBAAoB,CAC3B,KAAiC,EACjC,UAAsC,EACtC,aAAqB;UAErB,OAAO;cACL,IAAI,EAAE,CAAC,IAAY;kBACjB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;kBACjB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;eACvB;cACD,aAAa,EAAE,aAAa;WAC7B,CAAC;OACH;MAED,SAAS,2BAA2B,CAAC,SAAqC;UACxE,MAAM,YAAY,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;UACnD,IAAI,CAAC,YAAY;cAAE,MAAM,gDAAgD,CAAC;UAE1E,OAAO,oBAAoB,CACzB,SAAS,EACT,YAAY,EACZ,SAAS,CAAC,aAAa,GAAG,CAAC,CAC5B,CAAC;OACH;MAED,SAAS,2BAA2B,CAAC,SAAqC;UACxE,MAAM,iBAAiB,GAAG,SAAS,CAAC,aAAa,CAAC;UAClD,IAAI,gBAAwB,CAAC;UAC7B,IAAI,iBAAiB,KAAK,QAAQ;cAAE,gBAAgB,GAAG,CAAC,CAAC;eACpD,IAAI,iBAAiB,GAAG,CAAC,KAAK,CAAC;cAAE,gBAAgB,GAAG,CAAC,CAAC;;cACtD,gBAAgB,GAAG,CAAC,CAAC;UAE1B,OAAO,oBAAoB,CACzB,kBAAkB,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,EACnC,kBAAkB,CAAC,SAAS,EAAE,GAAG,CAAC,EAClC,gBAAgB,CACjB,CAAC;OACH;MAED,SAAS,mBAAmB,CAC1B,SAAqC;UAErC,MAAM,KAAK,GAAiC,CAAC,SAAS,CAAC,CAAC;UAExD,MAAM,YAAY,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;UACnD,IAAI,YAAY,EAAE;cAChB,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;cACzB,KAAK,CAAC,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC,CAAC;cACnD,KAAK,CAAC,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC,CAAC;WACvD;UAED,MAAM,qBAAqB,GAAG,2BAA2B,CAAC,SAAS,CAAC,CAAC;UACrE,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;UAElC,IAAI,qBAAqB,CAAC,aAAa,KAAK,CAAC,EAAE;cAC7C,MAAM,4BAA4B,GAAG,kBAAkB,CACrD,qBAAqB,CACtB,CAAC;cACF,IAAI,4BAA4B;kBAC9B,KAAK,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;WAC5C;UAED,OAAO,KAAK,CAAC;OACd;MAED,SAAS,UAAU;UACjB,MAAM,eAAe,GAAiC,IAAI,CACxD;cACE;kBACE,IAAI,EAAE,UAAU;kBAChB,aAAa,EAAE,CAAC;eACjB;cACD;kBACE,IAAI,EAAE,mBAAmB;kBACzB,aAAa,EAAE,CAAC;eACjB;cACD;kBACE,IAAI,EAAE,UAAU;kBAChB,aAAa,EAAE,QAAQ;eACxB;cACD;kBACE,IAAI,EAAE,WAAW;kBACjB,aAAa,EAAE,CAAC;eACjB;cACD;kBACE,IAAI,EAAE,WAAW;kBACjB,aAAa,EAAE,CAAC;eACjB;cACD;kBACE,IAAI,EAAE,QAAQ;kBACd,aAAa,EAAE,CAAC;eACjB;WACF,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAC3B,CAAC;UAEF,MAAM,4BAA4B,GAAyB;cACzD,SAAS;cACT,SAAS;cACT,SAAS;cACT,SAAS;WACV;eACE,GAAG,CAAC,CAAC,WAAmB,KAAK,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;;eAElD,GAAG,CAAC,CAAC,KAAe,KACnB,gBAAgB,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAClE,CAAC;UAEJ,KAAK,GAAG,EAAE,CAAC;UAEX,IAAI,kBAAkB,GAAG,KAAK,CAAC;UAE/B,MAAM,gBAAgB,GAAG,cAAc,GAAG,CAAC,CAAC;UAC5C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;cACnC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,gBAAgB,CAAC;cACzC,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,EAAE;kBAC5C,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,gBAAgB,CAAC;kBAC5C,MAAM,OAAO,GAAG,UAAU,CACxB,CAAC,EACD,CAAC,EACD,eAAe,EACf,4BAA4B,EAC5B,kBAAkB,CACnB,CAAC;kBACF,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;kBACpB,kBAAkB,GAAG,CAAC,kBAAkB,CAAC;eAC1C;WACF;OACF;;MAGD,CAAC,CAAC,OAAO,GAAG,SAAQ,CAAC;MAErB,CAAC,CAAC,KAAK,GAAG;UACR,cAAc,GAAG,GAAG,CAAC;UACrB,eAAe,GAAG,GAAG,CAAC;UACtB,YAAY,GAAG,kBAAkB,CAAC,CAAC,EAAE,YAAY,EAAE;cACjD,KAAK,EAAE,GAAG;cACV,MAAM,EAAE,GAAG;WACZ,CAAC,CAAC;UACH,MAAM,OAAO,GAAa,2BAA2B,CACnD,CAAC,EACD,cAAc,EACd,eAAe,EACf,IAAI,CACE,CAAC;UAET,CAAC,CAAC,IAAI,EAAE,CAAC;UACT,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;UAClC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACvB,CAAC,CAAC,GAAG,EAAE,CAAC;UACR,CAAC,CAAC,UAAU,EAAE,CAAC;UACf,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC;UAE5B,CAAC,CAAC,MAAM,EAAE,CAAC;UACX,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;UAElB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;UAErB,UAAU,EAAE,CAAC;OACd,CAAC;MAEF,CAAC,CAAC,IAAI,GAAG;UACP,CAAC,CAAC,MAAM,GAAG,gBAAgB,CAAC;UAC5B,CAAC,CAAC,YAAY,EAAE,CAAC;UAEjB,CAAC,CAAC,IAAI,EAAE,CAAC;UACT,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;UAClC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;UACtB,CAAC,CAAC,GAAG,EAAE,CAAC;OACT,CAAC;MAEF,CAAC,CAAC,YAAY,GAAG;UACf,UAAU,EAAE,CAAC;OACd,CAAC;MAEF,CAAC,CAAC,QAAQ,GAAG;UACX,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG;cAAE,CAAC,CAAC,MAAM,EAAE,CAAC;;OAG/B,CAAC;EACJ,CAAC,CAAC;EAEF,IAAI,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;;;"}