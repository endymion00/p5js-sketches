{"version":3,"file":"sketch.js","sources":["../src/main.ts"],"sourcesContent":["import * as p5ex from \"p5ex\";\r\n\r\nconst SKETCH_NAME = \"String\";\r\n\r\nconst sketch = (p: p5ex.p5exClass): void => {\r\n  // ---- variables\r\n  const THREAD_COUNT = 16;\r\n  let backgroundPixels: number[];\r\n  let positionArrayList: p5.Vector[][] = [];\r\n  let vertexCount = 0;\r\n  let progress = 0;\r\n\r\n  // ---- functions\r\n  function createPositionArrayList() {\r\n    const position = p.createVector();\r\n    if (Math.random() < 0.5) {\r\n      position.x = p.random(p.width);\r\n      position.y = Math.random() < 0.5 ? -10 : p.height + 10;\r\n    } else {\r\n      position.x = Math.random() < 0.5 ? -10 : p.width + 10;\r\n      position.y = p.random(p.height);\r\n    }\r\n    const region = new p5ex.RectangleRegion(0, 0, p.width, p.height);\r\n    const centerPoint = p.createVector(0.5 * p.width, 0.5 * p.height);\r\n    const velocity = p5.Vector.fromAngle(\r\n      p5ex.getDirectionAngle(position, centerPoint)\r\n    );\r\n    const positionArrayList: p5.Vector[][] = [];\r\n    for (let i = 0; i < THREAD_COUNT; i++) positionArrayList.push([]);\r\n\r\n    let angleVelocity = 0;\r\n    let angleAcceleration = 0;\r\n    const maxAngleSpeed = 0.01 * p.TWO_PI;\r\n    const maxAngleAcceleration = 0.005 * p.TWO_PI;\r\n    const maxAngleAccelerationChange = 0.0005 * p.TWO_PI;\r\n    let count = 0;\r\n    while (region.contains(position, 50)) {\r\n      if (count % 20 == 0) {\r\n        for (let i = 0; i < THREAD_COUNT; i++) {\r\n          positionArrayList[i].push(\r\n            position\r\n              .copy()\r\n              .add(p5.Vector.random2D().mult(10 * Math.pow(Math.random(), 1.5)))\r\n          );\r\n        }\r\n      }\r\n\r\n      position.add(velocity);\r\n      angleAcceleration = p.constrain(\r\n        angleAcceleration + p.random(-1, 1) * maxAngleAccelerationChange,\r\n        -maxAngleAcceleration,\r\n        maxAngleAcceleration\r\n      );\r\n      angleVelocity += angleAcceleration;\r\n      if (angleVelocity < -maxAngleSpeed) {\r\n        angleVelocity = -maxAngleSpeed;\r\n        angleAcceleration *= -0.7;\r\n      } else if (angleVelocity > maxAngleSpeed) {\r\n        angleVelocity = maxAngleSpeed;\r\n        angleAcceleration *= -0.7;\r\n      }\r\n      velocity.rotate(angleVelocity);\r\n\r\n      count++;\r\n    }\r\n\r\n    return positionArrayList;\r\n  }\r\n\r\n  function initialize(): void {\r\n    progress = 0;\r\n\r\n    p.noFill();\r\n    p.stroke(\r\n      p5ex.cielchColor(\r\n        p.random(10, 80),\r\n        p.random(30, 100),\r\n        p.random(p.TWO_PI),\r\n        32\r\n      )\r\n    );\r\n\r\n    let retryCount = 15;\r\n    while (retryCount > 0) {\r\n      positionArrayList = createPositionArrayList();\r\n      vertexCount = positionArrayList[0].length;\r\n      if (vertexCount > 100) break;\r\n      retryCount--;\r\n    }\r\n  }\r\n\r\n  // ---- Setup & Draw etc.\r\n  p.preload = () => {};\r\n\r\n  p.setup = () => {\r\n    p.createScalableCanvas(p5ex.ScalableCanvasTypes.FULL);\r\n    p.frameRate(30);\r\n    p.background(252);\r\n    p.loadPixels();\r\n    backgroundPixels = p.pixels;\r\n    initialize();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.pixels = backgroundPixels;\r\n    p.updatePixels();\r\n\r\n    if (progress < vertexCount) progress++;\r\n\r\n    for (let i = 0; i < THREAD_COUNT; i++) {\r\n      p.beginShape();\r\n      const positionArray = positionArrayList[i];\r\n      const len = progress;\r\n      for (let k = 0; k < len; k++) {\r\n        const position = positionArray[k];\r\n        p.curveVertex(\r\n          position.x + 3 * p.random(-1, 1),\r\n          position.y + 3 * p.random(-1, 1)\r\n        );\r\n      }\r\n      p.endShape();\r\n    }\r\n  };\r\n\r\n  p.mousePressed = () => {\r\n    initialize();\r\n  };\r\n\r\n  p.keyTyped = () => {\r\n    if (p.key === \"p\") p.noLoop();\r\n\r\n    if (p.key === \"s\") p.save(\"string.png\");\r\n  };\r\n};\r\n\r\nnew p5ex.p5exClass(sketch, SKETCH_NAME);\r\n"],"names":["p5ex.RectangleRegion","p5ex.getDirectionAngle","p5ex.cielchColor","p5ex.ScalableCanvasTypes","p5ex.p5exClass"],"mappings":"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"}