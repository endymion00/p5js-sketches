{"version":3,"file":"sketch.js","sources":["../src/common/environment.ts","../src/common/boundingBox.ts","../src/p5util/transform.ts","../src/p5util/canvas.ts","../src/p5util/drawing.ts","../src/main.ts"],"sourcesContent":["/**\r\n * ---- Common environment utility -------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\n\r\n/**\r\n * Finds HTML element by `id`. If not found, returns `document.body`.\r\n * @param id\r\n */\r\nexport const getElementOrBody = (id: string): HTMLElement =>\r\n  document.getElementById(id) || document.body;\r\n\r\n/**\r\n * Returns the width and height of `node`.\r\n * If `node === document.body`, returns the inner width and height of `window`.\r\n * @param node\r\n */\r\nexport const getElementSize = (node: Element): RectangleSize =>\r\n  node === document.body\r\n    ? {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      }\r\n    : node.getBoundingClientRect();\r\n","/**\r\n * ---- Common bounding box utility ------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"./dataTypes\";\r\n\r\n/**\r\n * Calculates the aspect ratio i.e. `width / height`.\r\n * @param size\r\n */\r\nexport const getAspectRatio = (size: RectangleSize) => size.width / size.height;\r\n\r\n/**\r\n * Calculates the area i.e. `width * height`.\r\n * @param size\r\n */\r\nexport const getArea = (size: RectangleSize) => size.width * size.height;\r\n\r\n/**\r\n * Parameter for `getScaleFactor()`.\r\n * `FIT_TO_BOX` checks both width and height and returns the smaller scale factor.\r\n */\r\nexport const enum FittingOption {\r\n  FIT_TO_BOX = \"FIT_TO_BOX\",\r\n  FIT_WIDTH = \"FIT_WIDTH\",\r\n  FIT_HEIGHT = \"FIT_HEIGHT\"\r\n}\r\n\r\n/**\r\n * Calculates the scale factor for fitting `nonScaledSize` to `targetSize` keeping the original aspect ratio.\r\n *\r\n * @param nonScaledSize\r\n * @param targetSize\r\n * @param fittingOption\r\n */\r\nexport const getScaleFactor = (\r\n  nonScaledSize: RectangleSize,\r\n  targetSize: RectangleSize,\r\n  fittingOption?: FittingOption\r\n) => {\r\n  switch (fittingOption) {\r\n    default:\r\n    case FittingOption.FIT_TO_BOX:\r\n      return Math.min(\r\n        targetSize.width / nonScaledSize.width,\r\n        targetSize.height / nonScaledSize.height\r\n      );\r\n\r\n    case FittingOption.FIT_WIDTH:\r\n      return targetSize.width / nonScaledSize.width;\r\n\r\n    case FittingOption.FIT_HEIGHT:\r\n      return targetSize.height / nonScaledSize.height;\r\n  }\r\n};\r\n","/**\r\n * ---- p5.js transformation utility -----------------------------------------\r\n */\r\n\r\n0; // dummy code for VSCode to ignore file header\r\n\r\n/**\r\n * Runs `drawCallback` translated with `offsetX` and `offsetY`,\r\n * then restores the transformation by calling `p.translate()` with negative values.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param offsetX\r\n * @param offsetY\r\n */\r\nexport function drawTranslated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  offsetX: number,\r\n  offsetY: number\r\n): void {\r\n  p.translate(offsetX, offsetY);\r\n  drawCallback(p);\r\n  p.translate(-offsetX, -offsetY);\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` rotated with `angle`,\r\n * then restores the transformation by calling `p.rotate()` with the negative value.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param angle\r\n */\r\nexport function drawRotated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  angle: number\r\n): void {\r\n  p.rotate(angle);\r\n  drawCallback(p);\r\n  p.rotate(-angle);\r\n}\r\n\r\n/**\r\n * Composite of `drawTranslated()` and `drawRotated()`.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param offsetX\r\n * @param offsetY\r\n * @param angle\r\n */\r\nexport function drawTranslatedAndRotated(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  offsetX: number,\r\n  offsetY: number,\r\n  angle: number\r\n): void {\r\n  p.translate(offsetX, offsetY);\r\n  drawRotated(p, drawCallback, angle);\r\n  p.translate(-offsetX, -offsetY);\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` scaled with `scaleFactor`,\r\n * then restores the transformation by scaling with the inversed factor.\r\n * Used to avoid calling `p.push()` and `p.pop()` frequently.\r\n *\r\n * @param p\r\n * @param drawCallback\r\n * @param scaleFactor\r\n */\r\nexport function drawScaled(\r\n  p: p5,\r\n  drawCallback: (p: p5) => any,\r\n  scaleFactor: number\r\n): void {\r\n  p.scale(scaleFactor);\r\n  drawCallback(p);\r\n  p.scale(1 / scaleFactor);\r\n}\r\n","/**\r\n * ---- p5.js canvas utility -------------------------------------------------\r\n */\r\n\r\nimport { RectangleSize } from \"../common/dataTypes\";\r\nimport { FittingOption, getScaleFactor } from \"../common/boundingBox\";\r\nimport { getElementOrBody, getElementSize } from \"../common/environment\";\r\nimport { drawScaled } from \"./transform\";\r\n\r\n/**\r\n * p5.js canvas accompanied by a scale factor.\r\n */\r\nexport interface ScaledCanvas {\r\n  readonly p5Canvas: p5.Renderer;\r\n  readonly scaleFactor: number;\r\n  readonly nonScaledSize: RectangleSize;\r\n  readonly drawScaled: (drawCallback: (p: p5) => void) => void;\r\n}\r\n\r\n/**\r\n * Runs `p.createCanvas()` with the scaled size that fits to `node`.\r\n * Returns the created canvas and the scale factor.\r\n *\r\n * @param p - The p5 instance.\r\n * @param node - The HTML element or its ID.\r\n * @param nonScaledSize\r\n * @param fittingOption\r\n * @param renderer\r\n */\r\nexport function createScaledCanvas(\r\n  p: p5,\r\n  node: HTMLElement | string,\r\n  nonScaledSize: RectangleSize,\r\n  fittingOption?: FittingOption,\r\n  renderer?: \"p2d\" | \"webgl\" | undefined\r\n): ScaledCanvas {\r\n  const maxCanvasSize = getElementSize(\r\n    typeof node === \"string\" ? getElementOrBody(node) : node\r\n  );\r\n  const scaleFactor = getScaleFactor(\r\n    nonScaledSize,\r\n    maxCanvasSize,\r\n    fittingOption\r\n  );\r\n\r\n  const canvas = p.createCanvas(\r\n    scaleFactor * nonScaledSize.width,\r\n    scaleFactor * nonScaledSize.height,\r\n    renderer\r\n  );\r\n\r\n  return {\r\n    p5Canvas: canvas,\r\n    scaleFactor: scaleFactor,\r\n    nonScaledSize: nonScaledSize,\r\n    drawScaled: (drawCallback: (p: p5) => void) =>\r\n      drawScaled(p, drawCallback, scaleFactor)\r\n  };\r\n}\r\n","/**\r\n * ---- p5.js drawing utility ------------------------------------------------\r\n */\r\n\r\n0; // dummy code for VSCode to ignore file header\r\n\r\n/**\r\n * Sets color to the specified pixel.\r\n * Should be used in conjunction with loadPixels() and updatePixels().\r\n * @param renderer - Instance of either p5 or p5.Graphics.\r\n * @param x - The x index of the pixel.\r\n * @param y - The y index of the pixel.\r\n * @param red - The red value (0 - 255).\r\n * @param green - The green value (0 - 255).\r\n * @param blue - The blue value (0 - 255).\r\n * @param pixelDensity - If not specified, renderer.pixelDensity() will be called.\r\n */\r\nexport function setPixel(\r\n  renderer: p5 | p5.Graphics,\r\n  x: number,\r\n  y: number,\r\n  red: number,\r\n  green: number,\r\n  blue: number,\r\n  alpha: number,\r\n  pixelDensity?: number\r\n): void {\r\n  const g = renderer as p5;\r\n  const d = pixelDensity || g.pixelDensity();\r\n  const graphicsPixels = g.pixels;\r\n\r\n  for (let i = 0; i < d; i += 1) {\r\n    for (let j = 0; j < d; j += 1) {\r\n      const idx = 4 * ((y * d + j) * g.width * d + (x * d + i));\r\n      graphicsPixels[idx] = red;\r\n      graphicsPixels[idx + 1] = green;\r\n      graphicsPixels[idx + 2] = blue;\r\n      graphicsPixels[idx + 3] = alpha;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Runs `drawCallback` and `p.loadPixels()`, then returns `p.pixels`.\r\n * The style and transformations will be restored by using `p.push()` and `p.pop()`.\r\n * @param p The p5 instance.\r\n * @param drawCallback\r\n */\r\nexport function createPixels(p: p5, drawCallback: (p: p5) => any): number[] {\r\n  p.push();\r\n  drawCallback(p);\r\n  p.pop();\r\n  p.loadPixels();\r\n\r\n  return p.pixels;\r\n}\r\n","/**\r\n * ---- Main sketch ----------------------------------------------------------\r\n */\r\n\r\nimport { getElementOrBody } from \"./common/environment\";\r\n\r\nimport { createScaledCanvas, ScaledCanvas } from \"./p5util/canvas\";\r\nimport { createPixels } from \"./p5util/drawing\";\r\n\r\nimport { drawTranslated } from \"./p5util/transform\";\r\n\r\nconst HTML_ELEMENT = getElementOrBody(\"CloudCounter\");\r\n\r\ninterface Count {\r\n  count: number;\r\n}\r\n\r\nconst sketch = (p: p5): void => {\r\n  // ---- variables\r\n  const ANGLE_RESOLUTION = 12;\r\n  const DEFAULT_SHAPE_SIZE = 100;\r\n  let canvas: ScaledCanvas;\r\n  let backgroundPixels: number[];\r\n  let backgroundColor: p5.Color;\r\n  const vertices: p5.Vector[] = [];\r\n  let shapeColor: p5.Color;\r\n  let reactionFactor = 0;\r\n  let time = 0;\r\n  let currentCount = -1;\r\n  let clickable = false;\r\n  let loaded = false;\r\n\r\n  // ---- functions\r\n  const sq = (v: number) => v * v;\r\n\r\n  function mouseIsOver(scaledX: number, scaledY: number) {\r\n    const mouseAngle = (p.atan2(scaledY, scaledX) + p.TWO_PI) % p.TWO_PI;\r\n    const x = -canvas.nonScaledSize.width / 2 + scaledX / canvas.scaleFactor;\r\n    const y = -canvas.nonScaledSize.height / 2 + scaledY / canvas.scaleFactor;\r\n    const mouseDistanceSq = sq(x) + sq(y);\r\n    const vertexIndex = Math.floor(mouseAngle / (p.TWO_PI / ANGLE_RESOLUTION));\r\n    return mouseDistanceSq <= vertices[vertexIndex].magSq();\r\n  }\r\n\r\n  function updateShape(vertices: p5.Vector[], size: number) {\r\n    for (let i = 0; i < ANGLE_RESOLUTION; i += 1) {\r\n      const angle = (i * p.TWO_PI) / ANGLE_RESOLUTION;\r\n      const distance = size * (1 + 1 * p.noise(i * 0.5, time));\r\n      vertices[i].set(distance * Math.cos(angle), distance * Math.sin(angle));\r\n    }\r\n  }\r\n\r\n  function drawShape(p: p5) {\r\n    p.beginShape();\r\n\r\n    const len = vertices.length;\r\n    const maxI = len + 3;\r\n    for (let i = 0; i < maxI; i += 1) {\r\n      const index = i % len;\r\n      const vertex = vertices[index];\r\n      p.curveVertex(vertex.x, vertex.y);\r\n    }\r\n\r\n    p.endShape();\r\n  }\r\n\r\n  function drawText(p: p5) {\r\n    p.text(currentCount, 0, 0);\r\n  }\r\n\r\n  function getCount() {\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open(\"GET\", \"https://cloud-counter.herokuapp.com/\", true);\r\n    request.responseType = \"json\";\r\n\r\n    request.onload = function() {\r\n      const data: Count = request.response;\r\n      if (currentCount != data.count) {\r\n        currentCount = data.count;\r\n        reactionFactor = 1.0;\r\n      }\r\n      loaded = true;\r\n    };\r\n\r\n    request.send();\r\n  }\r\n\r\n  function incrementCount() {\r\n    currentCount += 1;\r\n    reactionFactor = 1.0;\r\n\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open(\"GET\", \"https://cloud-counter.herokuapp.com/increment\", true);\r\n    request.responseType = \"json\";\r\n\r\n    request.onload = function() {\r\n      const data: Count = request.response;\r\n      if (data.count > currentCount) {\r\n        reactionFactor = 1.0;\r\n        currentCount = data.count;\r\n      }\r\n    };\r\n\r\n    request.send();\r\n  }\r\n\r\n  // ---- initialize & reset\r\n  function initializeStyle() {\r\n    p.noStroke();\r\n    p.fill(shapeColor);\r\n    p.blendMode(p.DIFFERENCE);\r\n    p.strokeWeight(2);\r\n    p.textAlign(p.CENTER, p.CENTER);\r\n  }\r\n\r\n  function initializeData() {\r\n    for (let i = 0; i < ANGLE_RESOLUTION; i += 1) {\r\n      vertices.push(p.createVector());\r\n    }\r\n  }\r\n\r\n  function reset() {}\r\n\r\n  // ---- core drawing process\r\n  function drawSketch(): void {\r\n    // shake screen\r\n    let shakeOffsetX = 0;\r\n    let shakeOffsetY = 0;\r\n\r\n    if (reactionFactor > 0.01) {\r\n      shakeOffsetX =\r\n        reactionFactor * p.random(-1, 1) * canvas.nonScaledSize.width * 0.1;\r\n      shakeOffsetY =\r\n        reactionFactor * p.random(-1, 1) * canvas.nonScaledSize.height * 0.1;\r\n    }\r\n\r\n    // draw text\r\n    p.noStroke();\r\n    p.fill(shapeColor);\r\n\r\n    if (loaded) {\r\n      p.textFont(\"Impact\", 64);\r\n      drawTranslated(\r\n        p,\r\n        drawText,\r\n        reactionFactor * shakeOffsetX,\r\n        reactionFactor * shakeOffsetY\r\n      );\r\n      p.textFont(\"Verdana\", 24);\r\n      p.text(\r\n        `Clicked ${currentCount} times around the world.`,\r\n        0,\r\n        0.4 * canvas.nonScaledSize.height\r\n      );\r\n    } else {\r\n      p.textFont(\"Verdana\", 24);\r\n      p.text(\"Connecting.\\nPlease wait a few seconds...\", 0, 0);\r\n    }\r\n\r\n    // draw shape\r\n    if (!loaded) return;\r\n\r\n    if (!clickable) {\r\n      p.stroke(shapeColor);\r\n      p.noFill();\r\n    }\r\n\r\n    drawTranslated(p, drawShape, shakeOffsetX, shakeOffsetY);\r\n  }\r\n\r\n  // ---- setup & draw etc.\r\n  p.preload = () => {};\r\n\r\n  p.setup = () => {\r\n    const nonScaledSize = { width: 800, height: 800 };\r\n    canvas = createScaledCanvas(p, HTML_ELEMENT, nonScaledSize);\r\n    backgroundColor = p.color(252, 252, 255);\r\n    backgroundPixels = createPixels(p, (p: p5) => {\r\n      p.background(backgroundColor);\r\n    });\r\n\r\n    shapeColor = p.color(255, 255, 240);\r\n\r\n    initializeStyle();\r\n    initializeData();\r\n    reset();\r\n\r\n    getCount();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.pixels = backgroundPixels;\r\n    p.updatePixels();\r\n\r\n    updateShape(vertices, (1 + sq(reactionFactor)) * DEFAULT_SHAPE_SIZE);\r\n    clickable = mouseIsOver(p.mouseX, p.mouseY);\r\n\r\n    p.translate(0.5 * p.width, 0.45 * p.height);\r\n\r\n    canvas.drawScaled(drawSketch);\r\n\r\n    time += (1 + 16 * reactionFactor) * 0.01;\r\n    reactionFactor *= 0.92;\r\n  };\r\n\r\n  p.mousePressed = () => {\r\n    if (!loaded) return;\r\n\r\n    if (clickable) {\r\n      incrementCount();\r\n      return;\r\n    }\r\n\r\n    if (p.touches != null && p.touches.length > 0) {\r\n      const touch: any = p.touches[0];\r\n      if (mouseIsOver(touch.x, touch.y)) incrementCount();\r\n    }\r\n  };\r\n\r\n  p.keyTyped = () => {\r\n    if (p.key === \"p\") p.noLoop();\r\n    if (p.key === \"s\") p.save(\"image.png\");\r\n  };\r\n};\r\n\r\nnew p5(sketch, HTML_ELEMENT);\r\n"],"names":[],"mappings":"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"}